(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{Womt:function(e,t,r){"use strict";function a(){}function n(e=0,t=0){this.x=e,this.y=t}function i(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function o(e,t,r,a,s,l,d,p,c,u){Object.defineProperty(this,"id",{value:Dd++}),this.uuid=Pd.generateUUID(),this.name="",this.image=void 0===e?o.DEFAULT_IMAGE:e,this.mipmaps=[],this.mapping=void 0===t?o.DEFAULT_MAPPING:t,this.wrapS=void 0===r?Gs:r,this.wrapT=void 0===a?Gs:a,this.magFilter=void 0===s?Ws:s,this.minFilter=void 0===l?qs:l,this.anisotropy=void 0===c?1:c,this.format=void 0===d?sl:d,this.internalFormat=null,this.type=void 0===p?Xs:p,this.offset=new n(0,0),this.repeat=new n(1,1),this.center=new n(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new i,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0===u?md:u,this.version=0,this.onUpdate=null}function s(e=0,t=0,r=0,a=1){this.x=e,this.y=t,this.z=r,this.w=a}function l(e,t,r){this.width=e,this.height=t,this.scissor=new s(0,0,e,t),this.scissorTest=!1,this.viewport=new s(0,0,e,t),r=r||{},this.texture=new o(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0===r.minFilter?Ws:r.minFilter,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=void 0===r.depthTexture?null:r.depthTexture}function d(e,t,r){l.call(this,e,t,r),this.samples=4}function p(e=0,t=0,r=0,a=1){this._x=e,this._y=t,this._z=r,this._w=a}function m(e=0,t=0,r=0){this.x=e,this.y=t,this.z=r}function c(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function u(e=0,t=0,r=0,a=u.DefaultOrder){this._x=e,this._y=t,this._z=r,this._order=a}function g(){this.mask=1}function f(){Object.defineProperty(this,"id",{value:jd++}),this.uuid=Pd.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=f.DefaultUp.clone();const e=new m,t=new u,r=new p,a=new m(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new c},normalMatrix:{value:new i}}),this.matrix=new c,this.matrixWorld=new c,this.matrixAutoUpdate=f.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new g,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function h(){f.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function y(e,t){this.min=void 0===e?new m(+Infinity,+Infinity,+Infinity):e,this.max=void 0===t?new m(-Infinity,-Infinity,-Infinity):t}function v(e,t,a,n,o){for(let s=0,r=e.length-3;s<=r;s+=3){hp.fromArray(e,s);const i=o.x*_o(hp.x)+o.y*_o(hp.y)+o.z*_o(hp.z),r=t.dot(hp),l=a.dot(hp),d=n.dot(hp);if(Ro(-Ro(r,l,d),Po(r,l,d))>i)return!1}return!0}function x(e,t){this.center=void 0===e?new m:e,this.radius=void 0===t?-1:t}function _(e,t){this.origin=void 0===e?new m:e,this.direction=void 0===t?new m(0,0,-1):t}function b(e,t){this.normal=void 0===e?new m(1,0,0):e,this.constant=void 0===t?0:t}function S(e,t,r){this.a=void 0===e?new m:e,this.b=void 0===t?new m:t,this.c=void 0===r?new m:r}function M(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}function T(e,r,a){return 0>a&&(a+=1),1<a&&(a-=1),a<1/6?e+6*(r-e)*a:a<1/2?r:a<2/3?e+6*(r-e)*(2/3-a):e}function E(e){return .04045>e?.0773993808*e:Eo(.9478672986*e+.0521327014,2.4)}function w(e){return .0031308>e?12.92*e:1.055*Eo(e,.41666)-.055}function L(e,t,r,a,i,n){this.a=e,this.b=t,this.c=r,this.normal=a&&a.isVector3?a:new m,this.vertexNormals=Array.isArray(a)?a:[],this.color=i&&i.isColor?i:new M,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0===n?0:n}function A(){Object.defineProperty(this,"id",{value:Hp++}),this.uuid=Pd.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Xo,this.side=Vo,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ss,this.blendDst=ls,this.blendEquation=Ko,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ys,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=wd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ed,this.stencilZFail=Ed,this.stencilZPass=Ed,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function R(e){A.call(this),this.type="MeshBasicMaterial",this.color=new M(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ss,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}function P(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0===e?0:e.length/t,this.normalized=!0===r,this.usage=Ld,this.updateRange={offset:0,count:-1},this.version=0}function C(e,t,r){P.call(this,new Int8Array(e),t,r)}function I(e,t,r){P.call(this,new Uint8Array(e),t,r)}function D(e,t,r){P.call(this,new Uint8ClampedArray(e),t,r)}function N(e,t,r){P.call(this,new Int16Array(e),t,r)}function z(e,t,r){P.call(this,new Uint16Array(e),t,r)}function B(e,t,r){P.call(this,new Int32Array(e),t,r)}function U(e,t,r){P.call(this,new Uint32Array(e),t,r)}function F(e,t,r){P.call(this,new Float32Array(e),t,r)}function G(e,t,r){P.call(this,new Float64Array(e),t,r)}function O(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function H(e){if(0===e.length)return-Infinity;let t=e[0];for(let r=1,a=e.length;r<a;++r)e[r]>t&&(t=e[r]);return t}function V(){Object.defineProperty(this,"id",{value:Wp+=2}),this.uuid=Pd.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity},this.userData={}}function k(e,t){f.call(this),this.type="Mesh",this.geometry=void 0===e?new V:e,this.material=void 0===t?new R:t,this.updateMorphTargets()}function W(e,t,r,a,i,n,o,s){let l;if(l=t.side===ko?a.intersectTriangle(o,n,i,!0,s):a.intersectTriangle(i,n,o,t.side!==Wo,s),null===l)return null;mc.copy(s),mc.applyMatrix4(e.matrixWorld);const d=r.ray.origin.distanceTo(mc);return d<r.near||d>r.far?null:{distance:d,point:mc.clone(),object:e}}function q(e,t,r,i,o,s,l,d,p,u,a,m){ec.fromBufferAttribute(o,u),tc.fromBufferAttribute(o,a),rc.fromBufferAttribute(o,m);const c=e.morphTargetInfluences;if(t.morphTargets&&s&&c){oc.set(0,0,0),sc.set(0,0,0),lc.set(0,0,0);for(let e=0,t=s.length;e<t;e++){const t=c[e],r=s[e];0===t||(ac.fromBufferAttribute(r,u),ic.fromBufferAttribute(r,a),nc.fromBufferAttribute(r,m),l?(oc.addScaledVector(ac,t),sc.addScaledVector(ic,t),lc.addScaledVector(nc,t)):(oc.addScaledVector(ac.sub(ec),t),sc.addScaledVector(ic.sub(tc),t),lc.addScaledVector(nc.sub(rc),t)))}ec.add(oc),tc.add(sc),rc.add(lc)}e.isSkinnedMesh&&(e.boneTransform(u,ec),e.boneTransform(a,tc),e.boneTransform(m,rc));const g=W(e,t,r,i,ec,tc,rc,uc);if(g){d&&(dc.fromBufferAttribute(d,u),pc.fromBufferAttribute(d,a),cc.fromBufferAttribute(d,m),g.uv=S.getUV(uc,ec,tc,rc,dc,pc,cc,new n)),p&&(dc.fromBufferAttribute(p,u),pc.fromBufferAttribute(p,a),cc.fromBufferAttribute(p,m),g.uv2=S.getUV(uc,ec,tc,rc,dc,pc,cc,new n));const e=new L(u,a,m);S.getNormal(ec,tc,rc,e.normal),g.face=e}return g}function j(){Object.defineProperty(this,"id",{value:gc+=2}),this.uuid=Pd.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function X(e){const t={};for(const r in e)for(const a in t[r]={},e[r]){const i=e[r][a];t[r][a]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?i.clone():Array.isArray(i)?i.slice():i}return t}function Y(e){const t={};for(let r=0;r<e.length;r++){const a=X(e[r]);for(const e in a)t[e]=a[e]}return t}function Z(e){A.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=_c,this.fragmentShader=bc,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function J(){f.call(this),this.type="Camera",this.matrixWorldInverse=new c,this.projectionMatrix=new c,this.projectionMatrixInverse=new c}function Q(e,t,r,a){J.call(this),this.type="PerspectiveCamera",this.fov=void 0===e?50:e,this.zoom=1,this.near=void 0===r?.1:r,this.far=void 0===a?2e3:a,this.focus=10,this.aspect=void 0===t?1:t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function K(e,t,r){if(f.call(this),this.type="CubeCamera",!0!==r.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=r;const a=new Q(Sc,Mc,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new m(1,0,0)),this.add(a);const i=new Q(Sc,Mc,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new m(-1,0,0)),this.add(i);const n=new Q(Sc,Mc,e,t);n.layers=this.layers,n.up.set(0,0,1),n.lookAt(new m(0,1,0)),this.add(n);const o=new Q(Sc,Mc,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new m(0,-1,0)),this.add(o);const s=new Q(Sc,Mc,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new m(0,0,1)),this.add(s);const l=new Q(Sc,Mc,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new m(0,0,-1)),this.add(l),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const d=e.xr.enabled,p=e.getRenderTarget();e.xr.enabled=!1;const c=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,a),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,n),e.setRenderTarget(r,3),e.render(t,o),e.setRenderTarget(r,4),e.render(t,s),r.texture.generateMipmaps=c,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(p),e.xr.enabled=d},this.clear=function(e,t,a,n){const i=e.getRenderTarget();for(let o=0;6>o;o++)e.setRenderTarget(r,o),e.clear(t,a,n);e.setRenderTarget(i)}}function $(e,t,r){No(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),l.call(this,e,e,t)}function ee(e,t,r,a,i,n,s,l,d,p,c,u){o.call(this,null,n,s,l,d,p,a,i,c,u),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=void 0===d?Hs:d,this.minFilter=void 0===p?Hs:p,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}function te(e,t,r,a,i,n){this.planes=[void 0===e?new b:e,void 0===t?new b:t,void 0===r?new b:r,void 0===a?new b:a,void 0===i?new b:i,void 0===n?new b:n]}function re(){function e(r,n){a(r,n),i=t.requestAnimationFrame(e)}let t=null,r=!1,a=null,i=null;return{start:function(){!0==r||null===a||(i=t.requestAnimationFrame(e),r=!0)},stop:function(){t.cancelAnimationFrame(i),r=!1},setAnimationLoop:function(e){a=e},setContext:function(e){t=e}}}function ae(e,t){function r(t,r){const a=t.array,i=t.usage,n=e.createBuffer();e.bindBuffer(r,n),e.bufferData(r,a,i),t.onUploadCallback();let o=5126;return a instanceof Float32Array?o=5126:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?o=5123:a instanceof Int16Array?o=5122:a instanceof Uint32Array?o=5125:a instanceof Int32Array?o=5124:a instanceof Int8Array?o=5120:a instanceof Uint8Array&&(o=5121),{buffer:n,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}function a(t,r,a){const n=r.array,o=r.updateRange;e.bindBuffer(a,t),-1===o.count?e.bufferSubData(a,0,n):(i?e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n,o.offset,o.count):e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n.subarray(o.offset,o.offset+o.count)),o.count=-1)}const i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function(e,t){e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);void 0===i?n.set(e,r(e,t)):i.version<e.version&&(a(i.buffer,e,t),i.version=e.version)}}}function ie(e,t,r,a){j.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:a},this.fromBufferGeometry(new ne(e,t,r,a)),this.mergeVertices()}function ne(e,t,r,a){V.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:a},e=e||1,t=t||1;const i=e/2,n=t/2,o=Do(r)||1,s=Do(a)||1,l=o+1,d=e/o,p=t/s,u=[],c=[],m=[],g=[];for(let u=0;u<s+1;u++){const e=u*p-n;for(let t=0;t<l;t++){const r=t*d-i;c.push(r,-e,0),m.push(0,0,1),g.push(t/o),g.push(1-u/s)}}for(let i=0;i<s;i++)for(let e=0;e<o;e++){const t=e+l*i,r=e+l*(i+1),a=e+1+l*(i+1),n=e+1+l*i;u.push(t,r,n),u.push(r,a,n)}this.setIndex(u),this.setAttribute("position",new F(c,3)),this.setAttribute("normal",new F(m,3)),this.setAttribute("uv",new F(g,2))}function oe(e,t,r,a){function i(t,a,i,m){let g=!0===a.isScene?a.background:null;const f=e.xr,h=f.getSession&&f.getSession();if(h&&"additive"===h.environmentBlendMode&&(g=null),null===g?n(o,s):g&&g.isColor&&(n(g,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===Bs)){void 0===u&&(u=new k(new vc(1,1,1),new Z({name:"BackgroundCubeMaterial",uniforms:X(Ac.cube.uniforms),vertexShader:Ac.cube.vertexShader,fragmentShader:Ac.cube.fragmentShader,side:ko,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u));const a=g.isWebGLCubeRenderTarget?g.texture:g;u.material.uniforms.envMap.value=a,u.material.uniforms.flipEnvMap.value=a.isCubeTexture?-1:1,(l!==g||d!==a.version||p!==e.toneMapping)&&(u.material.needsUpdate=!0,l=g,d=a.version,p=e.toneMapping),t.unshift(u,u.geometry,u.material,0,0,null)}else g&&g.isTexture&&(void 0===c&&(c=new k(new ne(2,2),new Z({name:"BackgroundMaterial",uniforms:X(Ac.background.uniforms),vertexShader:Ac.background.vertexShader,fragmentShader:Ac.background.fragmentShader,side:Vo,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),c.material.uniforms.uvTransform.value.copy(g.matrix),(l!==g||d!==g.version||p!==e.toneMapping)&&(c.material.needsUpdate=!0,l=g,d=g.version,p=e.toneMapping),t.unshift(c,c.geometry,c.material,0,0,null))}function n(e,r){t.buffers.color.setClear(e.r,e.g,e.b,r,a)}const o=new M(0);let s=0,l=null,d=0,p=null,c,u;return{getClearColor:function(){return o},setClearColor:function(e,t){o.set(e),s=void 0===t?1:t,n(o,s)},getClearAlpha:function(){return s},setClearAlpha:function(e){s=e,n(o,s)},render:i}}function se(e,t,r,a){function i(t,a,i,n,s){let d=!1;if(S){const e=l(n,i,a);E!==e&&(E=e,o(E.object)),d=p(n),d&&c(n)}else{const e=!0===a.wireframe;(E.geometry!==n.id||E.program!==i.id||E.wireframe!==e)&&(E.geometry=n.id,E.program=i.id,E.wireframe=e,d=!0)}!0===t.isInstancedMesh&&(d=!0),null!==s&&r.update(s,34963),d&&(y(t,a,i,n),null!==s&&e.bindBuffer(34963,r.get(s).buffer))}function n(){return a.isWebGL2?e.createVertexArray():b.createVertexArrayOES()}function o(t){return a.isWebGL2?e.bindVertexArray(t):b.bindVertexArrayOES(t)}function s(t){return a.isWebGL2?e.deleteVertexArray(t):b.deleteVertexArrayOES(t)}function l(e,t,r){const a=!0===r.wireframe;let i=M[e.id];void 0===i&&(i={},M[e.id]=i);let o=i[t.id];void 0===o&&(o={},i[t.id]=o);let s=o[a];return void 0===s&&(s=d(n()),o[a]=s),s}function d(e){const t=[],r=[],a=[];for(let n=0;n<_;n++)t[n]=0,r[n]=0,a[n]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:a,object:e,attributes:{}}}function p(e){const t=E.attributes,r=e.attributes;if(Object.keys(t).length!==Object.keys(r).length)return!0;for(const a in r){const e=t[a],i=r[a];if(e.attribute!==i)return!0;if(e.data!==i.data)return!0}return!1}function c(e){const t={},r=e.attributes;for(const a in r){const e=r[a],i={};i.attribute=e,e.data&&(i.data=e.data),t[a]=i}E.attributes=t}function u(){const e=E.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function m(e){g(e,0)}function g(r,i){const n=E.newAttributes,o=E.enabledAttributes,s=E.attributeDivisors;if(n[r]=1,0===o[r]&&(e.enableVertexAttribArray(r),o[r]=1),s[r]!==i){const n=a.isWebGL2?e:t.get("ANGLE_instanced_arrays");n[a.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i),s[r]=i}}function f(){const t=E.newAttributes,r=E.enabledAttributes;for(let a=0,i=r.length;a<i;a++)r[a]!==t[a]&&(e.disableVertexAttribArray(a),r[a]=0)}function h(t,r,i,n,o,s){!0===a.isWebGL2&&(5124===i||5125===i)?e.vertexAttribIPointer(t,r,i,n,o,s):e.vertexAttribPointer(t,r,i,n,o,s)}function y(i,n,o,s){if(!(!1===a.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))){u();const t=s.attributes,a=o.getAttributes(),l=n.defaultAttributeValues;for(const n in a){const o=a[n];if(0<=o){const a=t[n];if(void 0!==a){const t=a.normalized,i=a.itemSize,n=r.get(a);if(void 0===n)continue;const l=n.buffer,d=n.type,p=n.bytesPerElement;if(a.isInterleavedBufferAttribute){const r=a.data,n=r.stride,c=a.offset;r&&r.isInstancedInterleavedBuffer?(g(o,r.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)):m(o),e.bindBuffer(34962,l),h(o,i,d,t,n*p,c*p)}else a.isInstancedBufferAttribute?(g(o,a.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)):m(o),e.bindBuffer(34962,l),h(o,i,d,t,0,0)}else if("instanceMatrix"==n){const t=r.get(i.instanceMatrix);if(void 0===t)continue;const a=t.buffer,n=t.type;g(o+0,1),g(o+1,1),g(o+2,1),g(o+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(o+0,4,n,!1,64,0),e.vertexAttribPointer(o+1,4,n,!1,64,16),e.vertexAttribPointer(o+2,4,n,!1,64,32),e.vertexAttribPointer(o+3,4,n,!1,64,48)}else if(void 0!==l){const t=l[n];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(o,t);break;case 3:e.vertexAttrib3fv(o,t);break;case 4:e.vertexAttrib4fv(o,t);break;default:e.vertexAttrib1fv(o,t);}}}}f()}}function v(){x(),E===T||(E=T,o(E.object))}function x(){T.geometry=null,T.program=null,T.wireframe=!1}const _=e.getParameter(34921),b=a.isWebGL2?null:t.get("OES_vertex_array_object"),S=a.isWebGL2||null!==b,M={},T=d(null);let E=T;return{setup:i,reset:v,resetDefaultState:x,dispose:function(){for(const e in v(),M){const t=M[e];for(const e in t){const r=t[e];for(const e in r)s(r[e].object),delete r[e];delete t[e]}delete M[e]}},releaseStatesOfGeometry:function(e){if(void 0!==M[e.id]){const t=M[e.id];for(const e in t){const r=t[e];for(const e in r)s(r[e].object),delete r[e];delete t[e]}delete M[e.id]}},releaseStatesOfProgram:function(e){for(const t in M){const r=M[t];if(void 0===r[e.id])continue;const a=r[e.id];for(const e in a)s(a[e].object),delete a[e];delete r[e.id]}},initAttributes:u,enableAttribute:m,disableUnusedAttributes:f}}function le(e,t,r,a){function i(t,a){e.drawArrays(s,t,a),r.update(a,s)}function n(a,i,n,l){if(0===l)return;let d,p;if(o)d=e,p="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[p](s,i,n,l),r.update(n,s,l)}const o=a.isWebGL2;let s;this.setMode=function(e){s=e},this.render=i,this.renderInstances=n}function de(e,t,r){function a(){if(void 0!==n)return n;const r=t.get("EXT_texture_filter_anisotropic");return n=null===r?0:e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT),n}function i(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(35633,36338).precision&&0<e.getShaderPrecisionFormat(35632,36338).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(35633,36337).precision&&0<e.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}let n;const o="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let s=void 0===r.precision?"highp":r.precision;const l=i(s);l!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",l,"instead."),s=l);const d=!0===r.logarithmicDepthBuffer,p=e.getParameter(34930),c=e.getParameter(35660),u=e.getParameter(3379),m=e.getParameter(34076),g=e.getParameter(34921),f=e.getParameter(36347),h=e.getParameter(36348),y=e.getParameter(36349),v=0<c,x=o||!!t.get("OES_texture_float"),_=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:a,getMaxPrecision:i,precision:s,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:f,maxVaryings:h,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:_}}function pe(){function e(){p.value!==a&&(p.value=a,p.needsUpdate=0<n),r.numPlanes=n,r.numIntersection=0}function t(e,t,a,i){let n=null===e?0:e.length,o=null;if(0!==n){if(o=p.value,!0!==i||null===o){const r=a+4*n,s=t.matrixWorldInverse;d.getNormalMatrix(s),(null===o||o.length<r)&&(o=new Float32Array(r));for(let t=0,r=a;t!==n;++t,r+=4)l.copy(e[t]).applyMatrix4(s,d),l.normal.toArray(o,r),o[r+3]=l.constant}p.value=o,p.needsUpdate=!0}return r.numPlanes=n,r.numIntersection=0,o}const r=this;let a=null,n=0,o=!1,s=!1;const l=new b,d=new i,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(e,r,i){const s=0!==e.length||r||0!==n||o;return o=r,a=t(e,i,0),n=e.length,s},this.beginShadows=function(){s=!0,t(null)},this.endShadows=function(){s=!1,e()},this.setState=function(r,i,l,d,c,u){if(!o||null===r||0===r.length||s&&!l)s?t(null):e();else{const e=s?0:n,o=4*e;let l=c.clippingState||null;p.value=l,l=t(r,d,o,u);for(let e=0;e!==o;++e)l[e]=a[e];c.clippingState=l,this.numIntersection=i?this.numPlanes:0,this.numPlanes+=e}}}function ce(e){const t={};return{get:function(r){if(void 0!==t[r])return t[r];let a;return a="WEBGL_depth_texture"===r?e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture"):"EXT_texture_filter_anisotropic"===r?e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===r?e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===r?e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):e.getExtension(r),null===a&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=a,a}}}function ue(e,t,r,a){function i(e){const n=e.target,l=o.get(n);for(const r in null!==l.index&&t.remove(l.index),l.attributes)t.remove(l.attributes[r]);n.removeEventListener("dispose",i),o.delete(n);const d=s.get(l);d&&(t.remove(d),s.delete(l)),a.releaseStatesOfGeometry(n),!0===n.isInstancedBufferGeometry&&delete n._maxInstanceCount,r.memory.geometries--}function n(e){const r=[],a=e.index,i=e.attributes.position;let n=0;if(null!==a){const e=a.array;n=a.version;for(let t=0,a=e.length;t<a;t+=3){const i=e[t+0],a=e[t+1],n=e[t+2];r.push(i,a,a,n,n,i)}}else{const e=i.array;n=i.version;for(let t=0,a=e.length/3-1;t<a;t+=3){const e=t+0,a=t+1,i=t+2;r.push(e,a,a,i,i,e)}}const o=new(65535<H(r)?U:z)(r,1);o.version=n;const l=s.get(e);l&&t.remove(l),s.set(e,o)}const o=new WeakMap,s=new WeakMap;return{get:function(e,t){let a=o.get(t);return a?a:(t.addEventListener("dispose",i),t.isBufferGeometry?a=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=new V().setFromObject(e)),a=t._bufferGeometry),o.set(t,a),r.memory.geometries++,a)},update:function(e){const r=e.attributes;for(const a in r)t.update(r[a],34962);const a=e.morphAttributes;for(const r in a){const e=a[r];for(let r=0,a=e.length;r<a;r++)t.update(e[r],34962)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const r=e.index;null!==r&&t.version<r.version&&n(e)}else n(e);return s.get(e)}}}function me(e,t,r,a){function i(t,a){e.drawElements(s,a,l,t*d),r.update(a,s)}function n(a,i,n,p){if(0===p)return;let c,u;if(o)c=e,u="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[u](s,n,l,i*d,p),r.update(n,s,p)}const o=a.isWebGL2;let s,l,d;this.setMode=function(e){s=e},this.setIndex=function(e){l=e.type,d=e.bytesPerElement},this.render=i,this.renderInstances=n}function ge(){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,r,a){switch(a=a||1,e.calls++,r){case 4:e.triangles+=a*(t/3);break;case 1:e.lines+=a*(t/2);break;case 3:e.lines+=a*(t-1);break;case 2:e.lines+=a*t;break;case 0:e.points+=a*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);}}}}function fe(e,t){return e[0]-t[0]}function he(e,t){return _o(t[1])-_o(e[1])}function ye(e){const t={},r=new Float32Array(8),a=[];for(let t=0;8>t;t++)a[t]=[t,0];return{update:function(i,n,o,s){var l=Number.MAX_SAFE_INTEGER;const d=i.morphTargetInfluences,p=void 0===d?0:d.length;let c=t[n.id];if(void 0===c){c=[];for(let e=0;e<p;e++)c[e]=[e,0];t[n.id]=c}for(let e=0;e<p;e++){const t=c[e];t[0]=e,t[1]=d[e]}c.sort(he);for(let e=0;8>e;e++)e<p&&c[e][1]?(a[e][0]=c[e][0],a[e][1]=c[e][1]):(a[e][0]=l,a[e][1]=0);a.sort(fe);const u=o.morphTargets&&n.morphAttributes.position,m=o.morphNormals&&n.morphAttributes.normal;let g=0;for(let e=0;8>e;e++){const t=a[e],i=t[0],o=t[1];i!==l&&o?(u&&n.getAttribute("morphTarget"+e)!==u[i]&&n.setAttribute("morphTarget"+e,u[i]),m&&n.getAttribute("morphNormal"+e)!==m[i]&&n.setAttribute("morphNormal"+e,m[i]),r[e]=o,g+=o):(u&&void 0!==n.getAttribute("morphTarget"+e)&&n.deleteAttribute("morphTarget"+e),m&&void 0!==n.getAttribute("morphNormal"+e)&&n.deleteAttribute("morphNormal"+e),r[e]=0)}const f=n.morphTargetsRelative?1:1-g;s.getUniforms().setValue(e,"morphTargetBaseInfluence",f),s.getUniforms().setValue(e,"morphTargetInfluences",r)}}}function ve(e,t,r,a){function i(e){const i=a.render.frame,o=e.geometry,s=t.get(e,o);return n.get(s)!==i&&(o.isGeometry&&s.updateFromObject(e),t.update(s),n.set(s,i)),e.isInstancedMesh&&r.update(e.instanceMatrix,34962),s}let n=new WeakMap;return{update:i,dispose:function(){n=new WeakMap}}}function xe(e,t,r,a,i,n,s,l,d,p){e=void 0===e?[]:e,t=void 0===t?Is:t,s=void 0===s?ol:s,o.call(this,e,t,r,a,i,n,s,l,d,p),this.flipY=!1}function _e(e,t,r,a){o.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:a||1},this.magFilter=Hs,this.minFilter=Hs,this.wrapR=Gs,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function be(e,t,r,a){o.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:a||1},this.magFilter=Hs,this.minFilter=Hs,this.wrapR=Gs,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function Se(e,t,a){const i=e[0];if(0>=i||0<i)return e;let o=t*a,n=Dc[o];if(void 0===n&&(n=new Float32Array(o),Dc[o]=n),0!==t){i.toArray(n,0);for(let r=1,i=0;r!==t;++r)i+=a,e[r].toArray(n,i)}return n}function Me(e,t){if(e.length!==t.length)return!1;for(let r=0,a=e.length;r<a;r++)if(e[r]!==t[r])return!1;return!0}function Te(e,t){for(let r=0,a=t.length;r<a;r++)e[r]=t[r]}function Ee(e,t){let a=Nc[t];void 0===a&&(a=new Int32Array(t),Nc[t]=a);for(let r=0;r!==t;++r)a[r]=e.allocateTextureUnit();return a}function we(e,t){const r=this.cache;r[0]===t||(e.uniform1f(this.addr,t),r[0]=t)}function Le(e,t){const r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(Me(r,t))return;e.uniform2fv(this.addr,t),Te(r,t)}}function Ae(e,t){const r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(Me(r,t))return;e.uniform3fv(this.addr,t),Te(r,t)}}function Re(e,t){const r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(Me(r,t))return;e.uniform4fv(this.addr,t),Te(r,t)}}function Pe(e,t){const r=this.cache,a=t.elements;if(void 0===a){if(Me(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),Te(r,t)}else{if(Me(r,a))return;Uc.set(a),e.uniformMatrix2fv(this.addr,!1,Uc),Te(r,a)}}function Ce(e,t){const r=this.cache,a=t.elements;if(void 0===a){if(Me(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),Te(r,t)}else{if(Me(r,a))return;Bc.set(a),e.uniformMatrix3fv(this.addr,!1,Bc),Te(r,a)}}function Ie(e,t){const r=this.cache,a=t.elements;if(void 0===a){if(Me(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),Te(r,t)}else{if(Me(r,a))return;zc.set(a),e.uniformMatrix4fv(this.addr,!1,zc),Te(r,a)}}function De(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTexture2D(t||Rc,i)}function Ne(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture2DArray(t||Pc,i)}function ze(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture3D(t||Cc,i)}function Be(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTextureCube(t||Ic,i)}function Ue(e,t){const r=this.cache;r[0]===t||(e.uniform1i(this.addr,t),r[0]=t)}function Fe(e,t){const r=this.cache;Me(r,t)||(e.uniform2iv(this.addr,t),Te(r,t))}function Ge(e,t){const r=this.cache;Me(r,t)||(e.uniform3iv(this.addr,t),Te(r,t))}function Oe(e,t){const r=this.cache;Me(r,t)||(e.uniform4iv(this.addr,t),Te(r,t))}function He(e,t){const r=this.cache;r[0]===t||(e.uniform1ui(this.addr,t),r[0]=t)}function Ve(e){return 5126===e?we:35664===e?Le:35665===e?Ae:35666===e?Re:35674===e?Pe:35675===e?Ce:35676===e?Ie:5124===e||35670===e?Ue:35667===e||35671===e?Fe:35668===e||35672===e?Ge:35669===e||35673===e?Oe:5125===e?He:35678===e||36198===e||36298===e||36306===e||35682===e?De:35679===e||36299===e||36307===e?ze:35680===e||36300===e||36308===e||36293===e?Be:36289===e||36303===e||36311===e||36292===e?Ne:void 0}function ke(e,t){e.uniform1fv(this.addr,t)}function We(e,t){e.uniform1iv(this.addr,t)}function je(e,t){e.uniform2iv(this.addr,t)}function qe(e,t){e.uniform3iv(this.addr,t)}function Xe(e,t){e.uniform4iv(this.addr,t)}function Ye(e,t){const r=Se(t,this.size,2);e.uniform2fv(this.addr,r)}function Ze(e,t){const r=Se(t,this.size,3);e.uniform3fv(this.addr,r)}function Je(e,t){const r=Se(t,this.size,4);e.uniform4fv(this.addr,r)}function Qe(e,t){const r=Se(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function Ke(e,t){const r=Se(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function $e(e,t){const r=Se(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function et(e,t,r){const a=t.length,n=Ee(r,a);e.uniform1iv(this.addr,n);for(let o=0;o!==a;++o)r.safeSetTexture2D(t[o]||Rc,n[o])}function tt(e,t,r){const a=t.length,n=Ee(r,a);e.uniform1iv(this.addr,n);for(let o=0;o!==a;++o)r.safeSetTextureCube(t[o]||Ic,n[o])}function rt(e){return 5126===e?ke:35664===e?Ye:35665===e?Ze:35666===e?Je:35674===e?Qe:35675===e?Ke:35676===e?$e:5124===e||35670===e?We:35667===e||35671===e?je:35668===e||35672===e?qe:35669===e||35673===e?Xe:35678===e||36198===e||36298===e||36306===e||35682===e?et:35680===e||36300===e||36308===e||36293===e?tt:void 0}function at(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=Ve(t.type)}function it(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=rt(t.type)}function nt(e){this.id=e,this.seq=[],this.map={}}function ot(e,t){e.seq.push(t),e.map[t.id]=t}function st(e,t,r){const a=e.name,i=a.length;for(Fc.lastIndex=0;;){const n=Fc.exec(a),o=Fc.lastIndex;let s=n[1],l="]"===n[2],d=n[3];if(l&&(s|=0),void 0===d||"["===d&&o+2===i){ot(r,void 0===d?new at(s,e,t):new it(s,e,t));break}else{const e=r.map;let t=e[s];void 0===t&&(t=new nt(s),ot(r,t)),r=t}}}function lt(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let a=0;a<r;++a){const r=e.getActiveUniform(t,a),i=e.getUniformLocation(t,r.name);st(r,i,this)}}function dt(e,t,r){const a=e.createShader(t);return e.shaderSource(a,r),e.compileShader(a),a}function pt(e){const t=e.split("\n");for(let r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function ct(e){return e===md?["Linear","( value )"]:e===gd?["sRGB","( value )"]:e===hd?["RGBE","( value )"]:e===vd?["RGBM","( value, 7.0 )"]:e===xd?["RGBM","( value, 16.0 )"]:e===_d?["RGBD","( value, 256.0 )"]:e===fd?["Gamma","( value, float( GAMMA_FACTOR ) )"]:e===yd?["LogLuv","( value )"]:(console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"])}function ut(e,t,r){const a=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(a&&""===i)return"";const n=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+pt(n)}function mt(e,t){const r=ct(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function gt(e,t){const r=ct(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function ft(e,t){let r;return t===ws?r="Linear":t===Ls?r="Reinhard":t===As?r="OptimizedCineon":t===Rs?r="ACESFilmic":t===Ps?r="Custom":(console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"),"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function ht(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(xt).join("\n")}function yt(e){const t=[];for(const r in e){const a=e[r];!1===a||t.push("#define "+r+" "+a)}return t.join("\n")}function vt(e,t){const r={},a=e.getProgramParameter(t,35721);for(let n=0;n<a;n++){const a=e.getActiveAttrib(t,n),i=a.name;r[i]=e.getAttribLocation(t,i)}return r}function xt(e){return""!==e}function _t(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function bt(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function St(e){return e.replace(Oc,Mt)}function Mt(e,t){const r=Lc[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return St(r)}function Tt(e){return e.replace(Vc,wt).replace(Hc,Et)}function Et(e,t,r,a){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),wt(e,t,r,a)}function wt(e,t,r,a){let n="";for(let o=parseInt(t);o<parseInt(r);o++)n+=a.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return n}function Lt(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function At(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Go?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Oo?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Ho&&(t="SHADOWMAP_TYPE_VSM"),t}function Rt(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Is:case Ds:t="ENVMAP_TYPE_CUBE";break;case Bs:case Us:t="ENVMAP_TYPE_CUBE_UV";break;case Ns:case zs:t="ENVMAP_TYPE_EQUIREC";}return t}function Pt(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case Ds:case zs:t="ENVMAP_MODE_REFRACTION";}return t}function Ct(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Ss:t="ENVMAP_BLENDING_MULTIPLY";break;case Ms:t="ENVMAP_BLENDING_MIX";break;case Ts:t="ENVMAP_BLENDING_ADD";}return t}function It(e,t,r,a){const i=e.getContext(),n=r.defines;let o=r.vertexShader,s=r.fragmentShader;const l=At(r),d=Rt(r),p=Pt(r),c=Ct(r),u=0<e.gammaFactor?e.gammaFactor:1,m=r.isWebGL2?"":ht(r),g=yt(n),f=i.createProgram();let h,y;if(r.isRawShaderMaterial?(h=[g].filter(xt).join("\n"),0<h.length&&(h+="\n"),y=[m,g].filter(xt).join("\n"),0<y.length&&(y+="\n")):(h=[Lt(r),"#define SHADER_NAME "+r.shaderName,g,r.instancing?"#define USE_INSTANCING":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+u,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(xt).join("\n"),y=[m,Lt(r),"#define SHADER_NAME "+r.shaderName,g,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+u,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+d:"",r.envMap?"#define "+p:"",r.envMap?"#define "+c:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping===Es?"":"#define TONE_MAPPING",r.toneMapping===Es?"":Lc.tonemapping_pars_fragment,r.toneMapping===Es?"":ft("toneMapping",r.toneMapping),r.dithering?"#define DITHERING":"",Lc.encodings_pars_fragment,r.map?mt("mapTexelToLinear",r.mapEncoding):"",r.matcap?mt("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?mt("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?mt("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?mt("lightMapTexelToLinear",r.lightMapEncoding):"",gt("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(xt).join("\n")),o=St(o),o=_t(o,r),o=bt(o,r),s=St(s),s=_t(s,r),s=bt(s,r),o=Tt(o),s=Tt(s),r.isWebGL2&&!r.isRawShaderMaterial){let e=!1;const t=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&null!==o.match(t)&&null!==s.match(t)&&(e=!0,o=o.replace(t,""),s=s.replace(t,"")),h="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+h,y=["#version 300 es\n","#define varying in",e?"":"out highp vec4 pc_fragColor;",e?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y}const v=h+o,x=y+s,_=dt(i,35633,v),b=dt(i,35632,x);if(i.attachShader(f,_),i.attachShader(f,b),void 0===r.index0AttributeName?!0===r.morphTargets&&i.bindAttribLocation(f,0,"position"):i.bindAttribLocation(f,0,r.index0AttributeName),i.linkProgram(f),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(f).trim(),t=i.getShaderInfoLog(_).trim(),r=i.getShaderInfoLog(b).trim();let a=!0,n=!0;if(!1===i.getProgramParameter(f,35714)){a=!1;const t=ut(i,_,"vertex"),r=ut(i,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(f,35715),"gl.getProgramInfoLog",e,t,r)}else""===e?(""===t||""===r)&&(n=!1):console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e);n&&(this.diagnostics={runnable:a,programLog:e,vertexShader:{log:t,prefix:h},fragmentShader:{log:r,prefix:y}})}i.deleteShader(_),i.deleteShader(b);let S;this.getUniforms=function(){return void 0==S&&(S=new lt(i,f)),S};let M;return this.getAttributes=function(){return void 0===M&&(M=vt(i,f)),M},this.destroy=function(){a.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=r.shaderName,this.id=Gc++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=_,this.fragmentShader=b,this}function Dt(e,t,r,a){function i(e,t){let r;if(t){const a=Ac[t];r={name:e.name||e.type,uniforms:xc.clone(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}}else r={name:e.name||e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return r}function n(e){const t=e.skeleton,r=t.bones;if(c)return 1024;else{const e=Do((u-20)/4),t=Po(e,r.length);return t<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+t+"."),0):t}}function o(e){let t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=md,t}function s(a,s,l,u,h,y,v){const x=u.fog,_=a.isMeshStandardMaterial?u.environment:null,b=a.envMap||_,S=f[a.type],M=v.isSkinnedMesh?n(v):0;null!==a.precision&&(g=r.getMaxPrecision(a.precision),g!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",g,"instead."));const T=i(a,S);a.onBeforeCompile(T,e);const E=e.getRenderTarget(),w={isWebGL2:d,shaderID:S,shaderName:T.name,uniforms:T.uniforms,vertexShader:T.vertexShader,fragmentShader:T.fragmentShader,defines:a.defines,isRawShaderMaterial:a.isRawShaderMaterial,isShaderMaterial:a.isShaderMaterial,precision:g,instancing:!0===v.isInstancedMesh,supportsVertexTextures:m,outputEncoding:null===E?e.outputEncoding:o(E.texture),map:!!a.map,mapEncoding:o(a.map),matcap:!!a.matcap,matcapEncoding:o(a.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:o(b),envMapCubeUV:!!b&&(b.mapping===Bs||b.mapping===Us),lightMap:!!a.lightMap,lightMapEncoding:o(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:o(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===Td,tangentSpaceNormalMap:a.normalMapType===Md,clearcoatMap:!!a.clearcoatMap,clearcoatRoughnessMap:!!a.clearcoatRoughnessMap,clearcoatNormalMap:!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,gradientMap:!!a.gradientMap,sheen:!!a.sheen,combine:a.combine,vertexTangents:a.normalMap&&a.vertexTangents,vertexColors:a.vertexColors,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.displacementMap,uvsVertexOnly:!a.map&&!a.bumpMap&&!a.normalMap&&!a.specularMap&&!a.alphaMap&&!a.emissiveMap&&!a.roughnessMap&&!a.metalnessMap&&!a.clearcoatNormalMap&&!!a.displacementMap,fog:!!x,useFog:a.fog,fogExp2:x&&x.isFogExp2,flatShading:a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:p,skinning:a.skinning&&0<M,maxBones:M,useVertexTexture:c,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:h,numClipIntersection:y,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&0<l.length,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:Es,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,alphaTest:a.alphaTest,doubleSided:a.side===Wo,flipSided:a.side===ko,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||null!==t.get("EXT_frag_depth"),rendererExtensionDrawBuffers:d||null!==t.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||null!==t.get("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()};return w}const l=[],d=r.isWebGL2,p=r.logarithmicDepthBuffer,c=r.floatVertexTextures,u=r.maxVertexUniforms,m=r.vertexTextures;let g=r.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},h=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];return{getParameters:s,getProgramCacheKey:function(t){const r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(void 0===t.isRawShaderMaterial){for(let e=0;e<h.length;e++)r.push(t[h[e]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},acquireProgram:function(t,r){let i;for(let e=0,a=l.length;e<a;e++){const t=l[e];if(t.cacheKey===r){i=t,++i.usedTimes;break}}return void 0===i&&(i=new It(e,r,t,a),l.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=l.indexOf(e);l[t]=l[l.length-1],l.pop(),e.destroy()}},programs:l}}function Nt(){function e(e){let t=a.get(e);return void 0===t&&(t={},a.set(e,t)),t}function t(e){a.delete(e)}function r(e,t,r){a.get(e)[t]=r}let a=new WeakMap;return{get:e,remove:t,update:r,dispose:function(){a=new WeakMap}}}function zt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.program===t.program?e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.program.id-t.program.id:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function Bt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function Ut(){function e(e,t,i,n,s,l){let d=r[a];return void 0===d?(d={id:e.id,object:e,geometry:t,material:i,program:i.program||o,groupOrder:n,renderOrder:e.renderOrder,z:s,group:l},r[a]=d):(d.id=e.id,d.object=e,d.geometry=t,d.material=i,d.program=i.program||o,d.groupOrder=n,d.renderOrder=e.renderOrder,d.z=s,d.group=l),a++,d}function t(){for(let e=a,t=r.length;e<t;e++){const t=r[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.program=null,t.group=null}}const r=[];let a=0;const i=[],n=[],o={id:-1};return{opaque:i,transparent:n,init:function(){a=0,i.length=0,n.length=0},push:function(t,r,a,o,s,l){const d=e(t,r,a,o,s,l);(!0===a.transparent?n:i).push(d)},unshift:function(t,r,a,o,s,l){const d=e(t,r,a,o,s,l);(!0===a.transparent?n:i).unshift(d)},finish:t,sort:function(e,t){1<i.length&&i.sort(e||zt),1<n.length&&n.sort(t||Bt)}}}function Ft(){function e(t){const a=t.target;a.removeEventListener("dispose",e),r.delete(a)}function t(t,a){const i=r.get(t);let n;return void 0===i?(n=new Ut,r.set(t,new WeakMap),r.get(t).set(a,n),t.addEventListener("dispose",e)):(n=i.get(a),void 0===n&&(n=new Ut,i.set(a,n))),n}let r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}function Gt(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":r={direction:new m,color:new M};break;case"SpotLight":r={position:new m,direction:new m,color:new M,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new m,color:new M,distance:0,decay:0};break;case"HemisphereLight":r={direction:new m,skyColor:new M,groundColor:new M};break;case"RectAreaLight":r={color:new M,position:new m,halfWidth:new m,halfHeight:new m};}return e[t.id]=r,r}}}function Ot(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new n};break;case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new n};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new n,shadowCameraNear:1,shadowCameraFar:1e3};}return e[t.id]=r,r}}}function Ht(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Vt(){function e(e,s,l){let d=0,p=0,c=0;for(let t=0;9>t;t++)a.probe[t].set(0,0,0);let u=0,m=0,g=0,f=0,h=0,y=0,v=0,x=0;const _=l.matrixWorldInverse;e.sort(Ht);for(let b=0,S=e.length;b<S;b++){const s=e[b],l=s.color,S=s.intensity,M=s.distance,T=s.shadow&&s.shadow.map?s.shadow.map.texture:null;if(s.isAmbientLight)d+=l.r*S,p+=l.g*S,c+=l.b*S;else if(s.isLightProbe)for(let e=0;9>e;e++)a.probe[e].addScaledVector(s.sh.coefficients[e],S);else if(s.isDirectionalLight){const e=t.get(s);if(e.color.copy(s.color).multiplyScalar(s.intensity),e.direction.setFromMatrixPosition(s.matrixWorld),i.setFromMatrixPosition(s.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(_),s.castShadow){const e=s.shadow,t=r.get(s);t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,a.directionalShadow[u]=t,a.directionalShadowMap[u]=T,a.directionalShadowMatrix[u]=s.shadow.matrix,y++}a.directional[u]=e,u++}else if(s.isSpotLight){const e=t.get(s);if(e.position.setFromMatrixPosition(s.matrixWorld),e.position.applyMatrix4(_),e.color.copy(l).multiplyScalar(S),e.distance=M,e.direction.setFromMatrixPosition(s.matrixWorld),i.setFromMatrixPosition(s.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(_),e.coneCos=To(s.angle),e.penumbraCos=To(s.angle*(1-s.penumbra)),e.decay=s.decay,s.castShadow){const e=s.shadow,t=r.get(s);t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,a.spotShadow[g]=t,a.spotShadowMap[g]=T,a.spotShadowMatrix[g]=s.shadow.matrix,x++}a.spot[g]=e,g++}else if(s.isRectAreaLight){const e=t.get(s);e.color.copy(l).multiplyScalar(S),e.position.setFromMatrixPosition(s.matrixWorld),e.position.applyMatrix4(_),o.identity(),n.copy(s.matrixWorld),n.premultiply(_),o.extractRotation(n),e.halfWidth.set(.5*s.width,0,0),e.halfHeight.set(0,.5*s.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),a.rectArea[f]=e,f++}else if(s.isPointLight){const e=t.get(s);if(e.position.setFromMatrixPosition(s.matrixWorld),e.position.applyMatrix4(_),e.color.copy(s.color).multiplyScalar(s.intensity),e.distance=s.distance,e.decay=s.decay,s.castShadow){const e=s.shadow,t=r.get(s);t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,a.pointShadow[m]=t,a.pointShadowMap[m]=T,a.pointShadowMatrix[m]=s.shadow.matrix,v++}a.point[m]=e,m++}else if(s.isHemisphereLight){const e=t.get(s);e.direction.setFromMatrixPosition(s.matrixWorld),e.direction.transformDirection(_),e.direction.normalize(),e.skyColor.copy(s.color).multiplyScalar(S),e.groundColor.copy(s.groundColor).multiplyScalar(S),a.hemi[h]=e,h++}}a.ambient[0]=d,a.ambient[1]=p,a.ambient[2]=c;const b=a.hash;(b.directionalLength!==u||b.pointLength!==m||b.spotLength!==g||b.rectAreaLength!==f||b.hemiLength!==h||b.numDirectionalShadows!==y||b.numPointShadows!==v||b.numSpotShadows!==x)&&(a.directional.length=u,a.spot.length=g,a.rectArea.length=f,a.point.length=m,a.hemi.length=h,a.directionalShadow.length=y,a.directionalShadowMap.length=y,a.pointShadow.length=v,a.pointShadowMap.length=v,a.spotShadow.length=x,a.spotShadowMap.length=x,a.directionalShadowMatrix.length=y,a.pointShadowMatrix.length=v,a.spotShadowMatrix.length=x,b.directionalLength=u,b.pointLength=m,b.spotLength=g,b.rectAreaLength=f,b.hemiLength=h,b.numDirectionalShadows=y,b.numPointShadows=v,b.numSpotShadows=x,a.version=kc++)}const t=new Gt,r=Ot(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;9>e;e++)a.probe.push(new m);const i=new m,n=new c,o=new c;return{setup:e,state:a}}function kt(){const e=new Vt,t=[],r=[];return{init:function(){t.length=0,r.length=0},state:{lightsArray:t,shadowsArray:r,lights:e},setupLights:function(a){e.setup(t,r,a)},pushLight:function(e){t.push(e)},pushShadow:function(e){r.push(e)}}}function Wt(){function e(t){const a=t.target;a.removeEventListener("dispose",e),r.delete(a)}function t(t,a){let i;return!1===r.has(t)?(i=new kt,r.set(t,new WeakMap),r.get(t).set(a,i),t.addEventListener("dispose",e)):!1===r.get(t).has(a)?(i=new kt,r.get(t).set(a,i)):i=r.get(t).get(a),i}let r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}function jt(e){A.call(this),this.type="MeshDepthMaterial",this.depthPacking=bd,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function qt(e){A.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new m,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}function Xt(e,t,r){function a(r,a){const i=t.update(S);x.uniforms.shadow_pass.value=r.map.texture,x.uniforms.resolution.value=r.mapSize,x.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(a,null,i,x,S,null),_.uniforms.shadow_pass.value=r.mapPass.texture,_.uniforms.resolution.value=r.mapSize,_.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(a,null,i,_,S,null)}function i(e,t,r){const a=e<<0|t<<1|r<<2;let i=f[a];return void 0===i&&(i=new jt({depthPacking:Sd,morphTargets:e,skinning:t}),f[a]=i),i}function o(e,t,r){const a=e<<0|t<<1|r<<2;let i=h[a];return void 0===i&&(i=new qt({morphTargets:e,skinning:t}),h[a]=i),i}function d(t,r,a,n,s,l,d){let p=null,c=i,u=t.customDepthMaterial;if(!0===n.isPointLight&&(c=o,u=t.customDistanceMaterial),void 0===u){let e=!1;!0===a.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&0<r.morphAttributes.position.length);let i=!1;!0===t.isSkinnedMesh&&(!0===a.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));const n=!0===t.isInstancedMesh;p=c(e,i,n)}else p=u;if(e.localClippingEnabled&&!0===a.clipShadows&&0!==a.clippingPlanes.length){const e=p.uuid,t=a.uuid;let r=y[e];void 0===r&&(r={},y[e]=r);let i=r[t];void 0===i&&(i=p.clone(),r[t]=i),p=i}return p.visible=a.visible,p.wireframe=a.wireframe,p.side=d===Ho?null===a.shadowSide?a.side:a.shadowSide:null===a.shadowSide?v[a.side]:a.shadowSide,p.clipShadows=a.clipShadows,p.clippingPlanes=a.clippingPlanes,p.clipIntersection=a.clipIntersection,p.wireframeLinewidth=a.wireframeLinewidth,p.linewidth=a.linewidth,!0===n.isPointLight&&!0===p.isMeshDistanceMaterial&&(p.referencePosition.setFromMatrixPosition(n.matrixWorld),p.nearDistance=s,p.farDistance=l),p}function p(r,a,n,o,s){if(!1!==r.visible){const i=r.layers.test(a.layers);if(i&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&s===Ho)&&(!r.frustumCulled||c.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,r.matrixWorld);const a=t.update(r),i=r.material;if(Array.isArray(i)){const t=a.groups;for(let l=0,p=t.length;l<p;l++){const p=t[l],c=i[p.materialIndex];if(c&&c.visible){const t=d(r,a,c,o,n.near,n.far,s);e.renderBufferDirect(n,null,a,t,r,p)}}}else if(i.visible){const t=d(r,a,i,o,n.near,n.far,s);e.renderBufferDirect(n,null,a,t,r,null)}}const u=r.children;for(let e=0,t=u.length;e<t;e++)p(u[e],a,n,o,s)}}let c=new te;const u=new n,m=new n,g=new s,f=[],h=[],y={},v={0:ko,1:Vo,2:Wo},x=new Z({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new n},radius:{value:4}},vertexShader:jc,fragmentShader:Wc}),_=x.clone();_.defines.HORIZONAL_PASS=1;const b=new V;b.setAttribute("position",new P(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new k(b,x),M=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Go,this.render=function(t,i,n){if(!1!==M.enabled&&(!1!==M.autoUpdate||!1!==M.needsUpdate)&&0!==t.length){const o=e.getRenderTarget(),s=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),f=e.state;f.setBlending(qo),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let o=0,s=t.length;o<s;o++){const s=t[o],d=s.shadow;if(!1===d.autoUpdate&&!1===d.needsUpdate)continue;if(void 0===d){console.warn("THREE.WebGLShadowMap:",s,"has no shadow.");continue}u.copy(d.mapSize);const h=d.getFrameExtents();if(u.multiply(h),m.copy(d.mapSize),(u.x>r||u.y>r)&&(u.x>r&&(m.x=Do(r/h.x),u.x=m.x*h.x,d.mapSize.x=m.x),u.y>r&&(m.y=Do(r/h.y),u.y=m.y*h.y,d.mapSize.y=m.y)),null===d.map&&!d.isPointLightShadow&&this.type===Ho){const e={minFilter:Ws,magFilter:Ws,format:sl};d.map=new l(u.x,u.y,e),d.map.texture.name=s.name+".shadowMap",d.mapPass=new l(u.x,u.y,e),d.camera.updateProjectionMatrix()}if(null===d.map){d.map=new l(u.x,u.y,{minFilter:Hs,magFilter:Hs,format:sl}),d.map.texture.name=s.name+".shadowMap",d.camera.updateProjectionMatrix()}e.setRenderTarget(d.map),e.clear();const y=d.getViewportCount();for(let e=0;e<y;e++){const t=d.getViewport(e);g.set(m.x*t.x,m.y*t.y,m.x*t.z,m.y*t.w),f.viewport(g),d.updateMatrices(s,e),c=d.getFrustum(),p(i,n,d.camera,s,this.type)}d.isPointLightShadow||this.type!==Ho||a(d,n),d.needsUpdate=!1}M.needsUpdate=!1,e.setRenderTarget(o,s,d)}}}function Yt(e,t,r){function a(t,r,a){const n=new Uint8Array(4),i=e.createTexture();e.bindTexture(t,i),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let o=0;o<a;o++)e.texImage2D(r+o,0,6408,1,1,0,6408,5121,n);return i}function i(t){!0!==S[t]&&(e.enable(t),S[t]=!0)}function n(t){!1!==S[t]&&(e.disable(t),S[t]=!1)}function o(t){return M!==t&&(e.useProgram(t),M=t,!0)}function l(t,r,a,o,s,l,d,p){return t===qo?void(T&&(n(3042),T=!1)):(T||(i(3042),T=!0),t===Qo?void(s=s||r,l=l||a,d=d||o,(r!==w||s!==R)&&(e.blendEquationSeparate(X[r],X[s]),w=r,R=s),(a!==L||o!==A||l!==P||d!==C)&&(e.blendFuncSeparate(Y[a],Y[o],Y[l],Y[d]),L=a,A=o,P=l,C=d),E=t,I=null):void((t!==E||p!==I)&&((w!==Ko||R!==Ko)&&(e.blendEquation(32774),w=Ko,R=Ko),p?t===Xo?e.blendFuncSeparate(1,771,1,771):t===Yo?e.blendFunc(1,1):t===Zo?e.blendFuncSeparate(0,0,769,771):t===Jo?e.blendFuncSeparate(0,768,0,770):console.error("THREE.WebGLState: Invalid blending: ",t):t===Xo?e.blendFuncSeparate(770,771,1,771):t===Yo?e.blendFunc(770,1):t===Zo?e.blendFunc(0,769):t===Jo?e.blendFunc(0,768):console.error("THREE.WebGLState: Invalid blending: ",t),L=null,A=null,P=null,C=null,E=t,I=p)))}function d(t){D!==t&&(t?e.frontFace(2304):e.frontFace(2305),D=t)}function p(t){t===Bo?n(2884):(i(2884),t!==N&&(t===Uo?e.cullFace(1029):t===Fo?e.cullFace(1028):e.cullFace(1032))),N=t}function c(t){t!==z&&(G&&e.lineWidth(t),z=t)}function u(t,r,a){t?(i(32823),(B!==r||U!==a)&&(e.polygonOffset(r,a),B=r,U=a)):n(32823)}function m(t){void 0===t&&(t=33984+F-1),V!==t&&(e.activeTexture(t),V=t)}function g(t,r){null===V&&m();let a=k[V];void 0===a&&(a={type:void 0,texture:void 0},k[V]=a),(a.type!==t||a.texture!==r)&&(e.bindTexture(t,r||q[t]),a.type=t,a.texture=r)}function f(){const t=k[V];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)}function h(t){!1===W.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),W.copy(t))}function y(t){!1===j.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),j.copy(t))}const v=r.isWebGL2,x=new function(){let t=!1;const i=new s;let r=null;const n=new s(0,0,0,0);return{setMask:function(a){r===a||t||(e.colorMask(a,a,a,a),r=a)},setLocked:function(e){t=e},setClear:function(t,r,o,s,a){!0===a&&(t*=s,r*=s,o*=s),i.set(t,r,o,s),!1===n.equals(i)&&(e.clearColor(t,r,o,s),n.copy(i))},reset:function(){t=!1,r=null,n.set(-1,0,0,0)}}},_=new function(){let t=!1,r=null,a=null,o=null;return{setTest:function(e){e?i(2929):n(2929)},setMask:function(a){r===a||t||(e.depthMask(a),r=a)},setFunc:function(t){a!==t&&(t?t===gs?e.depthFunc(512):t===fs?e.depthFunc(519):t===hs?e.depthFunc(513):t===ys?e.depthFunc(515):t===vs?e.depthFunc(514):t===xs?e.depthFunc(518):t===_s?e.depthFunc(516):t===bs?e.depthFunc(517):e.depthFunc(515):e.depthFunc(515),a=t)},setLocked:function(e){t=e},setClear:function(t){o!==t&&(e.clearDepth(t),o=t)},reset:function(){t=!1,r=null,a=null,o=null}}},b=new function(){let t=!1,r=null,a=null,o=null,s=null,l=null,d=null,p=null,c=null;return{setTest:function(e){t||(e?i(2960):n(2960))},setMask:function(a){r===a||t||(e.stencilMask(a),r=a)},setFunc:function(t,r,i){(a!==t||o!==r||s!==i)&&(e.stencilFunc(t,r,i),a=t,o=r,s=i)},setOp:function(t,r,a){(l!==t||d!==r||p!==a)&&(e.stencilOp(t,r,a),l=t,d=r,p=a)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,r=null,a=null,o=null,s=null,l=null,d=null,p=null,c=null}}};let S={},M=null,T=null,E=null,w=null,L=null,A=null,R=null,P=null,C=null,I=!1,D=null,N=null,z=null,B=null,U=null;const F=e.getParameter(35661);let G=!1,O=0;const H=e.getParameter(7938);-1===H.indexOf("WebGL")?-1!==H.indexOf("OpenGL ES")&&(O=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(H)[1]),G=2<=O):(O=parseFloat(/^WebGL\ ([0-9])/.exec(H)[1]),G=1<=O);let V=null,k={};const W=new s,j=new s,q={};q[3553]=a(3553,3553,1),q[34067]=a(34067,34069,6),x.setClear(0,0,0,1),_.setClear(1),b.setClear(0),i(2929),_.setFunc(ys),d(!1),p(Uo),i(2884),l(qo);const X={[Ko]:32774,[$o]:32778,[es]:32779};if(v)X[ts]=32775,X[rs]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(X[ts]=e.MIN_EXT,X[rs]=e.MAX_EXT)}const Y={[as]:0,[is]:1,[ns]:768,[ss]:770,[ms]:776,[cs]:774,[ds]:772,[os]:769,[ls]:771,[us]:775,[ps]:773};return{buffers:{color:x,depth:_,stencil:b},enable:i,disable:n,useProgram:o,setBlending:l,setMaterial:function(e,t){e.side===Wo?n(2884):i(2884);let r=e.side===ko;t&&(r=!r),d(r),e.blending===Xo&&!1===e.transparent?l(qo):l(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),_.setFunc(e.depthFunc),_.setTest(e.depthTest),_.setMask(e.depthWrite),x.setMask(e.colorWrite);const a=e.stencilWrite;b.setTest(a),a&&(b.setMask(e.stencilWriteMask),b.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),b.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),u(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:d,setCullFace:p,setLineWidth:c,setPolygonOffset:u,setScissorTest:function(e){e?i(3089):n(3089)},activeTexture:m,bindTexture:g,unbindTexture:f,compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:h,viewport:y,reset:function(){S={},V=null,k={},M=null,E=null,D=null,N=null,x.reset(),_.reset(),b.reset()}}}function Zt(e,t,r,a,i,n,o){function s(e,t){return O?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function l(e,t,r,a){let i=1;if((e.width>a||e.height>a)&&(i=a/Ro(e.width,e.height)),1>i||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?Pd.floorPowerOfTwo:Do,n=a(i*e.width),o=a(i*e.height);void 0===H&&(H=s(n,o));const l=r?s(n,o):H;l.width=n,l.height=o;const d=l.getContext("2d");return d.drawImage(e,0,0,n,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+n+"x"+o+")."),l}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function d(e){return Pd.isPowerOfTwo(e.width)&&Pd.isPowerOfTwo(e.height)}function p(e){return!N&&(e.wrapS!==Gs||e.wrapT!==Gs||e.minFilter!==Hs&&e.minFilter!==Ws)}function c(e,t){return e.generateMipmaps&&t&&e.minFilter!==Hs&&e.minFilter!==Ws}function u(t,r,i,n){e.generateMipmap(t);const o=a.get(r);o.__maxMipLevel=Ao(Ro(i,n))*Math.LOG2E}function m(r,a,i){if(!1===N)return a;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}let n=a;return 6403===a&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===a&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===a&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),(33325===n||33326===n||34842===n||34836===n)&&t.get("EXT_color_buffer_float"),n}function g(e){return e===Hs||e===Vs||e===ks?9728:9729}function f(e){const t=e.target;t.removeEventListener("dispose",f),y(t),t.isVideoTexture&&G.delete(t),o.memory.textures--}function h(e){const t=e.target;t.removeEventListener("dispose",h),v(t),o.memory.textures--}function y(t){const r=a.get(t);void 0===r.__webglInit||(e.deleteTexture(r.__webglTexture),a.remove(t))}function v(t){const r=a.get(t),i=a.get(t.texture);if(t){if(void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;6>t;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);a.remove(t.texture),a.remove(t)}}function x(){const e=V;return e>=z&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+z),V+=1,e}function _(e,t){const i=a.get(e);if(e.isVideoTexture&&C(e),0<e.version&&i.__version!==e.version){const r=e.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===r.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else return void E(i,e,t)}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function b(t,i){if(6===t.image.length){const o=a.get(t);if(0<t.version&&o.__version!==t.version){T(o,t),r.activeTexture(33984+i),r.bindTexture(34067,o.__webglTexture),e.pixelStorei(37440,t.flipY);const a=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),s=t.image[0]&&t.image[0].isDataTexture,p=[];for(let e=0;6>e;e++)p[e]=a||s?s?t.image[e].image:t.image[e]:l(t.image[e],!1,!0,B);const g=p[0],f=d(g)||N,h=n.convert(t.format),y=n.convert(t.type),v=m(t.internalFormat,h,y);M(34067,t,f);let x;if(a){for(let e=0;6>e;e++){x=p[e].mipmaps;for(let a=0;a<x.length;a++){const i=x[a];t.format!==sl&&t.format!==ol?null===h?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.compressedTexImage2D(34069+e,a,v,i.width,i.height,0,i.data):r.texImage2D(34069+e,a,v,i.width,i.height,0,h,y,i.data)}}o.__maxMipLevel=x.length-1}else{x=t.mipmaps;for(let e=0;6>e;e++)if(s){r.texImage2D(34069+e,0,v,p[e].width,p[e].height,0,h,y,p[e].data);for(let t=0;t<x.length;t++){const a=x[t],i=a.image[e].image;r.texImage2D(34069+e,t+1,v,i.width,i.height,0,h,y,i.data)}}else{r.texImage2D(34069+e,0,v,h,y,p[e]);for(let t=0;t<x.length;t++){const a=x[t];r.texImage2D(34069+e,t+1,v,h,y,a.image[e])}}o.__maxMipLevel=x.length}c(t,f)&&u(34067,t,g.width,g.height),o.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(33984+i),r.bindTexture(34067,o.__webglTexture)}}function S(e,t){r.activeTexture(33984+t),r.bindTexture(34067,a.get(e).__webglTexture)}function M(r,n,o){o?(e.texParameteri(r,10242,k[n.wrapS]),e.texParameteri(r,10243,k[n.wrapT]),(32879===r||35866===r)&&e.texParameteri(r,32882,k[n.wrapR]),e.texParameteri(r,10240,W[n.magFilter]),e.texParameteri(r,10241,W[n.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),(32879===r||35866===r)&&e.texParameteri(r,32882,33071),(n.wrapS!==Gs||n.wrapT!==Gs)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,g(n.magFilter)),e.texParameteri(r,10241,g(n.minFilter)),n.minFilter!==Hs&&n.minFilter!==Ws&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const s=t.get("EXT_texture_filter_anisotropic");if(s){if(n.type===$s&&null===t.get("OES_texture_float_linear"))return;if(n.type===el&&null===(N||t.get("OES_texture_half_float_linear")))return;(1<n.anisotropy||a.get(n).__currentAnisotropy)&&(e.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Po(n.anisotropy,i.getMaxAnisotropy())),a.get(n).__currentAnisotropy=n.anisotropy)}}function T(t,r){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",f),t.__webglTexture=e.createTexture(),o.memory.textures++)}function E(t,a,i){let o=3553;a.isDataTexture2DArray&&(o=35866),a.isDataTexture3D&&(o=32879),T(t,a),r.activeTexture(33984+i),r.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment);const s=p(a)&&!1===d(a.image),g=l(a.image,s,!1,U),f=d(g)||N,h=n.convert(a.format);let y=n.convert(a.type),v=m(a.internalFormat,h,y);M(o,a,f);let x;const _=a.mipmaps;if(a.isDepthTexture)v=6402,N?a.type===$s?v=36012:a.type===Ks?v=33190:a.type===il?v=35056:v=33189:a.type===$s&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===pl&&6402===v&&a.type!==Js&&a.type!==Ks&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=Js,y=n.convert(a.type)),a.format===cl&&6402===v&&(v=34041,a.type!==il&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=il,y=n.convert(a.type))),r.texImage2D(3553,0,v,g.width,g.height,0,h,y,null);else if(a.isDataTexture){if(0<_.length&&f){for(let e=0,t=_.length;e<t;e++)x=_[e],r.texImage2D(3553,e,v,x.width,x.height,0,h,y,x.data);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,v,g.width,g.height,0,h,y,g.data),t.__maxMipLevel=0;}else if(a.isCompressedTexture){for(let e=0,t=_.length;e<t;e++)x=_[e],a.format!==sl&&a.format!==ol?null===h?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.compressedTexImage2D(3553,e,v,x.width,x.height,0,x.data):r.texImage2D(3553,e,v,x.width,x.height,0,h,y,x.data);t.__maxMipLevel=_.length-1}else if(a.isDataTexture2DArray)r.texImage3D(35866,0,v,g.width,g.height,g.depth,0,h,y,g.data),t.__maxMipLevel=0;else if(a.isDataTexture3D)r.texImage3D(32879,0,v,g.width,g.height,g.depth,0,h,y,g.data),t.__maxMipLevel=0;else if(0<_.length&&f){for(let e=0,t=_.length;e<t;e++)x=_[e],r.texImage2D(3553,e,v,h,y,x);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,v,h,y,g),t.__maxMipLevel=0;c(a,f)&&u(o,a,g.width,g.height),t.__version=a.version,a.onUpdate&&a.onUpdate(a)}function w(t,i,o,s){const l=n.convert(i.texture.format),d=n.convert(i.texture.type),p=m(i.texture.internalFormat,l,d);r.texImage2D(s,0,p,i.width,i.height,0,l,d,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,a.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function L(t,r,a){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let i=33189;if(a){const t=r.depthTexture;t&&t.isDepthTexture&&(t.type===$s?i=36012:t.type===Ks&&(i=33190));const a=P(r);e.renderbufferStorageMultisample(36161,a,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(a){const t=P(r);e.renderbufferStorageMultisample(36161,t,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=n.convert(r.texture.format),i=n.convert(r.texture.type),o=m(r.texture.internalFormat,t,i);if(a){const t=P(r);e.renderbufferStorageMultisample(36161,t,o,r.width,r.height)}else e.renderbufferStorage(36161,o,r.width,r.height)}e.bindRenderbuffer(36161,null)}function A(t,r){const i=r&&r.isWebGLCubeRenderTarget;if(i)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");a.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),_(r.depthTexture,0);const n=a.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===pl)e.framebufferTexture2D(36160,36096,3553,n,0);else if(r.depthTexture.format===cl)e.framebufferTexture2D(36160,33306,3553,n,0);else throw new Error("Unknown depthTexture format")}function R(t){const r=a.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");A(r.__webglFramebuffer,t)}else if(i){r.__webglDepthbuffer=[];for(let a=0;6>a;a++)e.bindFramebuffer(36160,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=e.createRenderbuffer(),L(r.__webglDepthbuffer[a],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),L(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function P(e){return N&&e.isWebGLMultisampleRenderTarget?Po(F,e.samples):0}function C(e){const t=o.render.frame;G.get(e)!==t&&(G.set(e,t),e.update())}function I(e,t){e&&e.isWebGLRenderTarget&&(!1===j&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),j=!0),e=e.texture),_(e,t)}function D(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===q&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),q=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?b(e,t):S(e,t)}const N=i.isWebGL2,z=i.maxTextures,B=i.maxCubemapSize,U=i.maxTextureSize,F=i.maxSamples,G=new WeakMap;let O=!1,H;try{O="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}let V=0;const k={[Fs]:10497,[Gs]:33071,[Os]:33648},W={[Hs]:9728,[Vs]:9984,[ks]:9986,[Ws]:9729,[js]:9985,[qs]:9987};let j=!1,q=!1;this.allocateTextureUnit=x,this.resetTextureUnits=function(){V=0},this.setTexture2D=_,this.setTexture2DArray=function(e,t){const i=a.get(e);return 0<e.version&&i.__version!==e.version?void E(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=a.get(e);return 0<e.version&&i.__version!==e.version?void E(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=b,this.setTextureCubeDynamic=S,this.setupRenderTarget=function(t){const s=a.get(t),i=a.get(t.texture);t.addEventListener("dispose",h),i.__webglTexture=e.createTexture(),o.memory.textures++;const l=!0===t.isWebGLCubeRenderTarget,p=!0===t.isWebGLMultisampleRenderTarget,g=d(t)||N;if(N&&t.texture.format===ol&&(t.texture.type===$s||t.texture.type===el)&&(t.texture.format=sl,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),l){s.__webglFramebuffer=[];for(let t=0;6>t;t++)s.__webglFramebuffer[t]=e.createFramebuffer()}else if(s.__webglFramebuffer=e.createFramebuffer(),p)if(N){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer);const r=n.convert(t.texture.format),a=n.convert(t.texture.type),i=m(t.texture.internalFormat,r,a),o=P(t);e.renderbufferStorageMultisample(36161,o,i,t.width,t.height),e.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),L(s.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(l){r.bindTexture(34067,i.__webglTexture),M(34067,t.texture,g);for(let e=0;6>e;e++)w(s.__webglFramebuffer[e],t,36064,34069+e);c(t.texture,g)&&u(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,i.__webglTexture),M(3553,t.texture,g),w(s.__webglFramebuffer,t,36064,3553),c(t.texture,g)&&u(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);t.depthBuffer&&R(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture,i=d(e)||N;if(c(t,i)){const i=e.isWebGLCubeRenderTarget?34067:3553,n=a.get(t).__webglTexture;r.bindTexture(i,n),u(i,t,e.width,e.height),r.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(N){const r=a.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);const i=t.width,n=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024),e.blitFramebuffer(0,0,i,n,0,0,i,n,o,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=I,this.safeSetTextureCube=D}function Jt(e,t,r){const a=r.isWebGL2;return{convert:function(e){let r;if(e===Xs)return 5121;if(e===tl)return 32819;if(e===rl)return 32820;if(e===al)return 33635;if(e===Ys)return 5120;if(e===Zs)return 5122;if(e===Js)return 5123;if(e===Qs)return 5124;if(e===Ks)return 5125;if(e===$s)return 5126;if(e===el)return a?5131:(r=t.get("OES_texture_half_float"),null===r?null:r.HALF_FLOAT_OES);if(e===nl)return 6406;if(e===ol)return 6407;if(e===sl)return 6408;if(e===ll)return 6409;if(e===dl)return 6410;if(e===pl)return 6402;if(e===cl)return 34041;if(e===ul)return 6403;if(e===ml)return 36244;if(e===gl)return 33319;if(e===fl)return 33320;if(e===hl)return 36248;if(e===yl)return 36249;if(e===vl||e===xl||e===_l||e===bl)if(r=t.get("WEBGL_compressed_texture_s3tc"),null!==r){if(e===vl)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===xl)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===_l)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===bl)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Sl||e===Ml||e===Tl||e===El)if(r=t.get("WEBGL_compressed_texture_pvrtc"),null!==r){if(e===Sl)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ml)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Tl)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===El)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===wl)return r=t.get("WEBGL_compressed_texture_etc1"),null===r?null:r.COMPRESSED_RGB_ETC1_WEBGL;if((e===Ll||e===Al)&&(r=t.get("WEBGL_compressed_texture_etc"),null!==r)){if(e===Ll)return r.COMPRESSED_RGB8_ETC2;if(e===Al)return r.COMPRESSED_RGBA8_ETC2_EAC}return e===Rl||e===Pl||e===Cl||e===Il||e===Dl||e===Nl||e===zl||e===Bl||e===Ul||e===Fl||e===Gl||e===Ol||e===Hl||e===Vl||e===Wl||e===jl||e===ql||e===Xl||e===Yl||e===Zl||e===Jl||e===Ql||e===Kl||e===$l||e===ed||e===td||e===rd||e===ad?(r=t.get("WEBGL_compressed_texture_astc"),null===r?null:e):e===kl?(r=t.get("EXT_texture_compression_bptc"),null===r?null:e):e===il?a?34042:(r=t.get("WEBGL_depth_texture"),null===r?null:r.UNSIGNED_INT_24_8_WEBGL):void 0}}}function Qt(e){Q.call(this),this.cameras=e||[]}function Kt(){f.call(this),this.type="Group"}function $t(){this._targetRay=null,this._grip=null}function er(e,t){function r(e){const t=v.get(e.inputSource);t&&t.dispatchEvent({type:e.type})}function a(){v.forEach(function(e,t){e.disconnect(t)}),v.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),A.stop(),p.isPresenting=!1,p.dispatchEvent({type:"sessionend"})}function i(e){g=e,A.setContext(c),A.start(),p.isPresenting=!0,p.dispatchEvent({type:"sessionstart"})}function n(e){const t=c.inputSources;for(let r=0;r<y.length;r++)v.set(t[r],y[r]);for(let t=0;t<e.removed.length;t++){const r=e.removed[t],a=v.get(r);a&&(a.dispatchEvent({type:"disconnected",data:r}),v.delete(r))}for(let t=0;t<e.added.length;t++){const r=e.added[t],a=v.get(r);a&&a.dispatchEvent({type:"connected",data:r})}}function o(e,t,r){E.setFromMatrixPosition(t.matrixWorld),w.setFromMatrixPosition(r.matrixWorld);const a=E.distanceTo(w),i=t.projectionMatrix.elements,n=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],d=(i[9]-1)/i[5],p=(i[8]-1)/i[0],c=(n[8]+1)/n[0],u=a/(-p+c),m=u*-p;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(u),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);const g=o+u,f=s+u;e.projectionMatrix.makePerspective(o*p-m,o*c+(a-m),l*s/f*g,d*s/f*g,g,f)}function l(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}function d(t,r){if(h=r.getViewerPose(g),null!==h){const t=h.views,r=c.renderState.baseLayer;e.setFramebuffer(r.framebuffer);let a=!1;t.length!==S.cameras.length&&(S.cameras.length=0,a=!0);for(let e=0;e<t.length;e++){const i=t[e],n=r.getViewport(i),o=b[e];o.matrix.fromArray(i.transform.matrix),o.projectionMatrix.fromArray(i.projectionMatrix),o.viewport.set(n.x,n.y,n.width,n.height),0===e&&S.matrix.copy(o.matrix),!0==a&&S.cameras.push(o)}}const a=c.inputSources;for(let e=0;e<y.length;e++){const t=y[e],i=a[e];t.update(i,r,g)}L&&L(t,r)}const p=this;let c=null,u=1,g=null,f="local-floor",h=null;const y=[],v=new Map,x=new Q;x.layers.enable(1),x.viewport=new s;const _=new Q;_.layers.enable(2),_.viewport=new s;const b=[x,_],S=new Qt;S.layers.enable(1),S.layers.enable(2);let M=null,T=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=y[e];return void 0===t&&(t=new $t,y[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=y[e];return void 0===t&&(t=new $t,y[e]=t),t.getGripSpace()},this.setFramebufferScaleFactor=function(e){u=e,!0===p.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){f=e,!0===p.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return g},this.getSession=function(){return c},this.setSession=function(e){if(c=e,null!==c){c.addEventListener("select",r),c.addEventListener("selectstart",r),c.addEventListener("selectend",r),c.addEventListener("squeeze",r),c.addEventListener("squeezestart",r),c.addEventListener("squeezeend",r),c.addEventListener("end",a);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const o={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:u},s=new XRWebGLLayer(c,t,o);c.updateRenderState({baseLayer:s}),c.requestReferenceSpace(f).then(i),c.addEventListener("inputsourceschange",n)}};const E=new m,w=new m;this.getCamera=function(e){S.near=_.near=x.near=e.near,S.far=_.far=x.far=e.far,(M!==S.near||T!==S.far)&&(c.updateRenderState({depthNear:S.near,depthFar:S.far}),M=S.near,T=S.far);const t=e.parent,r=S.cameras;l(S,t);for(let a=0;a<r.length;a++)l(r[a],t);e.matrixWorld.copy(S.matrixWorld);const a=e.children;for(let t=0,r=a.length;t<r;t++)a[t].updateMatrixWorld(!0);return 2===r.length?o(S,x,_):S.projectionMatrix.copy(x.projectionMatrix),S};let L=null;const A=new re;A.setAnimationLoop(d),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}function tr(e){function t(t,r,a){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.specularMap&&(t.specularMap.value=r.specularMap);const i=r.envMap||a;i&&(t.envMap.value=i,t.flipEnvMap.value=i.isCubeTexture?-1:1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio,t.maxMipLevel.value=e.get(i).__maxMipLevel),r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity);let n;r.map?n=r.map:r.specularMap?n=r.specularMap:r.displacementMap?n=r.displacementMap:r.normalMap?n=r.normalMap:r.bumpMap?n=r.bumpMap:r.roughnessMap?n=r.roughnessMap:r.metalnessMap?n=r.metalnessMap:r.alphaMap?n=r.alphaMap:r.emissiveMap&&(n=r.emissiveMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix));let o;r.aoMap?o=r.aoMap:r.lightMap&&(o=r.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uv2Transform.value.copy(o.matrix))}function r(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}function a(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function i(e,t,r,a){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*a,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}function n(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}function o(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function s(e,t){e.specular.value.copy(t.specular),e.shininess.value=Ro(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ko&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ko&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function l(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ko&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ko&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function d(e,t,r){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ko&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ko&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||r)&&(e.envMapIntensity.value=t.envMapIntensity)}function p(e,t,r){d(e,t,r),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===ko&&e.clearcoatNormalScale.value.negate()),e.transparency.value=t.transparency}function c(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ko&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ko&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function u(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function m(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}function g(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ko&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ko&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,f,h,y,v){f.isMeshBasicMaterial?t(e,f):f.isMeshLambertMaterial?(t(e,f),o(e,f)):f.isMeshToonMaterial?(t(e,f),l(e,f)):f.isMeshPhongMaterial?(t(e,f),s(e,f)):f.isMeshStandardMaterial?(t(e,f,h),f.isMeshPhysicalMaterial?p(e,f,h):d(e,f,h)):f.isMeshMatcapMaterial?(t(e,f),c(e,f)):f.isMeshDepthMaterial?(t(e,f),u(e,f)):f.isMeshDistanceMaterial?(t(e,f),m(e,f)):f.isMeshNormalMaterial?(t(e,f),g(e,f)):f.isLineBasicMaterial?(r(e,f),f.isLineDashedMaterial&&a(e,f)):f.isPointsMaterial?i(e,f,y,v):f.isSpriteMaterial?n(e,f):f.isShadowMaterial?(e.color.value.copy(f.color),e.opacity.value=f.opacity):f.isShaderMaterial&&(f.uniformsNeedUpdate=!1)}}}function rr(e){function t(){return null===G?Z:1}function r(e,t){for(let r=0;r<e.length;r++){const a=e[r],i=S.getContext(a,t);if(null!==i)return i}return null}function a(){Te=new ce(Me),Ee=new de(Me,Te,e),!1===Ee.isWebGL2&&(Te.get("WEBGL_depth_texture"),Te.get("OES_texture_float"),Te.get("OES_texture_half_float"),Te.get("OES_texture_half_float_linear"),Te.get("OES_standard_derivatives"),Te.get("OES_element_index_uint"),Te.get("OES_vertex_array_object"),Te.get("ANGLE_instanced_arrays")),Te.get("OES_texture_float_linear"),He=new Jt(Me,Te,Ee),we=new Yt(Me,Te,Ee),we.scissor(j.copy($).multiplyScalar(Z).floor()),we.viewport(W.copy(K).multiplyScalar(Z).floor()),Le=new ge(Me),Ae=new Nt,Re=new Zt(Me,Te,we,Ae,Ee,He,Le),Pe=new ae(Me,Ee),Ve=new se(Me,Te,Pe,Ee),Ce=new ue(Me,Pe,Le,Ve),Ie=new ve(Me,Ce,Pe,Le),Fe=new ye(Me),De=new Dt(N,Te,Ee,Ve),Ne=new tr(Ae),ze=new Ft,Be=new Wt,Ue=new oe(N,we,Ie,A),Ge=new le(Me,Te,Le,Ee),Oe=new me(Me,Te,Le,Ee),Le.programs=De.programs,N.capabilities=Ee,N.extensions=Te,N.properties=Ae,N.renderLists=ze,N.state=we,N.info=Le}function i(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),z=!0}function o(){console.log("THREE.WebGLRenderer: Context Restored."),z=!1,a()}function l(e){const t=e.target;t.removeEventListener("dispose",l),d(t)}function d(e){p(e),Ae.remove(e)}function p(e){const t=Ae.get(e).program;e.program=void 0,void 0!==t&&De.releaseProgram(t)}function u(e,t){e.render(function(e){N.renderBufferImmediate(e,t)})}function g(e){ke.isPresenting||je&&je(e)}function f(e,t,r,a){if(!1!==e.visible){const i=e.layers.test(t.layers);if(i)if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)D.pushLight(e),e.castShadow&&D.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||ne.intersectsSprite(e)){a&&be.setFromMatrixPosition(e.matrixWorld).applyMatrix4(_e);const t=Ie.update(e),i=e.material;i.visible&&I.push(e,t,i,r,be.z,null)}}else if(e.isImmediateRenderObject)a&&be.setFromMatrixPosition(e.matrixWorld).applyMatrix4(_e),I.push(e,null,e.material,r,be.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Le.render.frame&&(e.skeleton.update(),e.skeleton.frame=Le.render.frame),!e.frustumCulled||ne.intersectsObject(e))){a&&be.setFromMatrixPosition(e.matrixWorld).applyMatrix4(_e);const t=Ie.update(e),n=e.material;if(Array.isArray(n)){const a=t.groups;for(let o=0,i=a.length;o<i;o++){const i=a[o],s=n[i.materialIndex];s&&s.visible&&I.push(e,t,s,r,be.z,i)}}else n.visible&&I.push(e,t,n,r,be.z,null)}const n=e.children;for(let e=0,i=n.length;e<i;e++)f(n[e],t,r,a)}}function h(e,t,r){const a=!0===t.isScene?t.overrideMaterial:null;for(let n=0,i=e.length;n<i;n++){const i=e[n],o=i.object,s=i.geometry,l=null===a?i.material:a,d=i.group;if(r.isArrayCamera){k=r;const e=r.cameras;for(let r=0,a=e.length;r<a;r++){const a=e[r];o.layers.test(a.layers)&&(we.viewport(W.copy(a.viewport)),D.setupLights(a),y(o,t,a,s,l,d))}}else k=null,y(o,t,r,s,l,d)}}function y(e,t,r,a,i,n){if(e.onBeforeRender(N,t,r,a,i,n),D=Be.get(t,k||r),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const a=x(r,t,i,e);we.setMaterial(i),Ve.reset(),u(e,a)}else N.renderBufferDirect(r,t,a,i,e,n);e.onAfterRender(N,t,r,a,i,n),D=Be.get(t,k||r)}function v(e,t,r){!0!==t.isScene&&(t=Se);const a=Ae.get(e),i=D.state.lights,n=D.state.shadowsArray,o=i.state.version,s=De.getParameters(e,i.state,n,t,fe.numPlanes,fe.numIntersection,r),d=De.getProgramCacheKey(s);let c=a.program,u=!0;if(void 0===c)e.addEventListener("dispose",l);else if(c.cacheKey!==d)p(e);else if(a.lightsStateVersion!==o)a.lightsStateVersion=o,u=!1;else{if(void 0!==s.shaderID)return;u=!1}u&&(c=De.acquireProgram(s,d),a.program=c,a.uniforms=s.uniforms,a.outputEncoding=s.outputEncoding,e.program=c);const m=c.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(let t=0;t<N.maxMorphTargets;t++)0<=m["morphTarget"+t]&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(let t=0;t<N.maxMorphNormals;t++)0<=m["morphNormal"+t]&&e.numSupportedMorphNormals++}const g=a.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(a.numClippingPlanes=fe.numPlanes,a.numIntersection=fe.numIntersection,g.clippingPlanes=fe.uniform),a.environment=e.isMeshStandardMaterial?t.environment:null,a.fog=t.fog,a.needsLights=b(e),a.lightsStateVersion=o,a.needsLights&&(g.ambientLightColor.value=i.state.ambient,g.lightProbe.value=i.state.probe,g.directionalLights.value=i.state.directional,g.directionalLightShadows.value=i.state.directionalShadow,g.spotLights.value=i.state.spot,g.spotLightShadows.value=i.state.spotShadow,g.rectAreaLights.value=i.state.rectArea,g.pointLights.value=i.state.point,g.pointLightShadows.value=i.state.pointShadow,g.hemisphereLights.value=i.state.hemi,g.directionalShadowMap.value=i.state.directionalShadowMap,g.directionalShadowMatrix.value=i.state.directionalShadowMatrix,g.spotShadowMap.value=i.state.spotShadowMap,g.spotShadowMatrix.value=i.state.spotShadowMatrix,g.pointShadowMap.value=i.state.pointShadowMap,g.pointShadowMatrix.value=i.state.pointShadowMatrix);const f=a.program.getUniforms(),h=lt.seqWithValue(f.seq,g);a.uniformsList=h}function x(e,t,r,a){!0!==t.isScene&&(t=Se),Re.resetTextureUnits();const i=t.fog,n=r.isMeshStandardMaterial?t.environment:null,o=null===G?N.outputEncoding:G.texture.encoding,s=Ae.get(r),l=D.state.lights;if(!0===he&&(!0===xe||e!==V)){const t=e===V&&r.id===H;fe.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,s,t)}r.version===s.__version?void 0===s.program?v(r,t,a):r.fog&&s.fog!==i?v(r,t,a):s.environment===n?s.needsLights&&s.lightsStateVersion!==l.state.version?v(r,t,a):void 0!==s.numClippingPlanes&&(s.numClippingPlanes!==fe.numPlanes||s.numIntersection!==fe.numIntersection)?v(r,t,a):s.outputEncoding!==o&&v(r,t,a):v(r,t,a):(v(r,t,a),s.__version=r.version);let d=!1,p=!1,c=!1;const u=s.program,m=u.getUniforms(),g=s.uniforms;if(we.useProgram(u.program)&&(d=!0,p=!0,c=!0),r.id!==H&&(H=r.id,p=!0),d||V!==e){if(m.setValue(Me,"projectionMatrix",e.projectionMatrix),Ee.logarithmicDepthBuffer&&m.setValue(Me,"logDepthBufFC",2/(Ao(e.far+1)/Lo)),V!==e&&(V=e,p=!0,c=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=m.map.cameraPosition;void 0!==t&&t.setValue(Me,be.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&m.setValue(Me,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||r.skinning)&&m.setValue(Me,"viewMatrix",e.matrixWorldInverse)}if(r.skinning){m.setOptional(Me,a,"bindMatrix"),m.setOptional(Me,a,"bindMatrixInverse");const e=a.skeleton;if(e){const t=e.bones;if(Ee.floatVertexTextures){if(void 0===e.boneTexture){let r=bo(4*t.length);r=Pd.ceilPowerOfTwo(r),r=Ro(r,4);const a=new Float32Array(4*(r*r));a.set(e.boneMatrices);const i=new ee(a,r,r,sl,$s);e.boneMatrices=a,e.boneTexture=i,e.boneTextureSize=r}m.setValue(Me,"boneTexture",e.boneTexture,Re),m.setValue(Me,"boneTextureSize",e.boneTextureSize)}else m.setOptional(Me,e,"boneMatrices")}}return(p||s.receiveShadow!==a.receiveShadow)&&(s.receiveShadow=a.receiveShadow,m.setValue(Me,"receiveShadow",a.receiveShadow)),p&&(m.setValue(Me,"toneMappingExposure",N.toneMappingExposure),s.needsLights&&_(g,c),i&&r.fog&&Ne.refreshFogUniforms(g,i),Ne.refreshMaterialUniforms(g,r,n,Z,Y),void 0!==g.ltc_1&&(g.ltc_1.value=wc.LTC_1),void 0!==g.ltc_2&&(g.ltc_2.value=wc.LTC_2),lt.upload(Me,s.uniformsList,g,Re)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(lt.upload(Me,s.uniformsList,g,Re),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&m.setValue(Me,"center",a.center),m.setValue(Me,"modelViewMatrix",a.modelViewMatrix),m.setValue(Me,"normalMatrix",a.normalMatrix),m.setValue(Me,"modelMatrix",a.matrixWorld),u}function _(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function b(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}e=e||{};const S=void 0===e.canvas?document.createElementNS("http://www.w3.org/1999/xhtml","canvas"):e.canvas,M=void 0===e.context?null:e.context,T=void 0!==e.alpha&&e.alpha,E=void 0===e.depth||e.depth,w=void 0===e.stencil||e.stencil,L=void 0!==e.antialias&&e.antialias,A=void 0===e.premultipliedAlpha||e.premultipliedAlpha,R=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,P=void 0===e.powerPreference?"default":e.powerPreference,C=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let I=null,D=null;this.domElement=S,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=md,this.physicallyCorrectLights=!1,this.toneMapping=Es,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const N=this;let z=!1,B=null,U=0,F=0,G=null,O=null,H=-1,V=null,k=null;const W=new s,j=new s;let q=null,X=S.width,Y=S.height,Z=1,J=null,Q=null;const K=new s(0,0,X,Y),$=new s(0,0,X,Y);let ie=!1;const ne=new te,fe=new pe;let he=!1,xe=!1;const _e=new c,be=new m,Se={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Me=M;try{if(S.addEventListener("webglcontextlost",i,!1),S.addEventListener("webglcontextrestored",o,!1),null===Me){const e=["webgl2","webgl","experimental-webgl"];if(!0===N.isWebGL1Renderer&&e.shift(),Me=r(e,{alpha:T,depth:E,stencil:w,antialias:L,premultipliedAlpha:A,preserveDrawingBuffer:R,powerPreference:P,failIfMajorPerformanceCaveat:C}),null===Me)if(r(e))throw new Error("Error creating WebGL context with your selected attributes.");else throw new Error("Error creating WebGL context.")}void 0===Me.getShaderPrecisionFormat&&(Me.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let Te,Ee,we,Le,Ae,Re,Pe,Ce,Ie,De,Ne,ze,Be,Ue,Fe,Ge,Oe,He,Ve;a();const ke=new er(N,Me);this.xr=ke;const We=new Xt(N,Ie,Ee.maxTextureSize);this.shadowMap=We,this.getContext=function(){return Me},this.getContextAttributes=function(){return Me.getContextAttributes()},this.forceContextLoss=function(){const e=Te.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=Te.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(e){void 0===e||(Z=e,this.setSize(X,Y,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new n),e.set(X,Y)},this.setSize=function(e,t,r){return ke.isPresenting?void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):void(X=e,Y=t,S.width=Do(e*Z),S.height=Do(t*Z),!1!==r&&(S.style.width=e+"px",S.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new n),e.set(X*Z,Y*Z).floor()},this.setDrawingBufferSize=function(e,t,r){X=e,Y=t,Z=r,S.width=Do(e*r),S.height=Do(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new s),e.copy(W)},this.getViewport=function(e){return e.copy(K)},this.setViewport=function(e,t,r,a){e.isVector4?K.set(e.x,e.y,e.z,e.w):K.set(e,t,r,a),we.viewport(W.copy(K).multiplyScalar(Z).floor())},this.getScissor=function(e){return e.copy($)},this.setScissor=function(e,t,r,a){e.isVector4?$.set(e.x,e.y,e.z,e.w):$.set(e,t,r,a),we.scissor(j.copy($).multiplyScalar(Z).floor())},this.getScissorTest=function(){return ie},this.setScissorTest=function(e){we.setScissorTest(ie=e)},this.setOpaqueSort=function(e){J=e},this.setTransparentSort=function(e){Q=e},this.getClearColor=function(){return Ue.getClearColor()},this.setClearColor=function(){Ue.setClearColor.apply(Ue,arguments)},this.getClearAlpha=function(){return Ue.getClearAlpha()},this.setClearAlpha=function(){Ue.setClearAlpha.apply(Ue,arguments)},this.clear=function(e,t,r){let a=0;(void 0===e||e)&&(a|=16384),(void 0===t||t)&&(a|=256),(void 0===r||r)&&(a|=1024),Me.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){S.removeEventListener("webglcontextlost",i,!1),S.removeEventListener("webglcontextrestored",o,!1),ze.dispose(),Be.dispose(),Ae.dispose(),Ie.dispose(),Ve.dispose(),ke.dispose(),qe.stop()},this.renderBufferImmediate=function(e,t){Ve.initAttributes();const r=Ae.get(e);e.hasPositions&&!r.position&&(r.position=Me.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=Me.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=Me.createBuffer()),e.hasColors&&!r.color&&(r.color=Me.createBuffer());const a=t.getAttributes();e.hasPositions&&(Me.bindBuffer(34962,r.position),Me.bufferData(34962,e.positionArray,35048),Ve.enableAttribute(a.position),Me.vertexAttribPointer(a.position,3,5126,!1,0,0)),e.hasNormals&&(Me.bindBuffer(34962,r.normal),Me.bufferData(34962,e.normalArray,35048),Ve.enableAttribute(a.normal),Me.vertexAttribPointer(a.normal,3,5126,!1,0,0)),e.hasUvs&&(Me.bindBuffer(34962,r.uv),Me.bufferData(34962,e.uvArray,35048),Ve.enableAttribute(a.uv),Me.vertexAttribPointer(a.uv,2,5126,!1,0,0)),e.hasColors&&(Me.bindBuffer(34962,r.color),Me.bufferData(34962,e.colorArray,35048),Ve.enableAttribute(a.color),Me.vertexAttribPointer(a.color,3,5126,!1,0,0)),Ve.disableUnusedAttributes(),Me.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,r,a,i,n,o){null===r&&(r=Se);const s=n.isMesh&&0>n.matrixWorld.determinant(),l=x(e,r,i,n);we.setMaterial(i,s);let d=a.index;const p=a.attributes.position;if(null===d){if(void 0===p||0===p.count)return;}else if(0===d.count)return;let c=1;!0===i.wireframe&&(d=Ce.getWireframeAttribute(a),c=2),(i.morphTargets||i.morphNormals)&&Fe.update(n,a,i,l),Ve.setup(n,i,l,a,d);let u=Ge,m;null!==d&&(m=Pe.get(d),u=Oe,u.setIndex(m));const g=null===d?p.count:d.count,f=a.drawRange.start*c,h=a.drawRange.count*c,y=null===o?0:o.start*c,v=null===o?Infinity:o.count*c,_=Ro(f,y),b=Po(g,f+h,y+v)-1,S=Ro(0,b-_+1);if(0!==S){if(n.isMesh)!0===i.wireframe?(we.setLineWidth(i.wireframeLinewidth*t()),u.setMode(1)):u.setMode(4);else if(n.isLine){let e=i.linewidth;void 0===e&&(e=1),we.setLineWidth(e*t()),n.isLineSegments?u.setMode(1):n.isLineLoop?u.setMode(2):u.setMode(3)}else n.isPoints?u.setMode(0):n.isSprite&&u.setMode(4);if(n.isInstancedMesh)u.renderInstances(a,_,S,n.count);else if(a.isInstancedBufferGeometry){const e=Po(a.instanceCount,a._maxInstanceCount);u.renderInstances(a,_,S,e)}else u.render(_,S)}},this.compile=function(e,t){D=Be.get(e,t),D.init(),e.traverse(function(e){e.isLight&&(D.pushLight(e),e.castShadow&&D.pushShadow(e))}),D.setupLights(t);const r=new WeakMap;e.traverse(function(t){let a=t.material;if(a)if(Array.isArray(a))for(let n=0,i;n<a.length;n++)i=a[n],!1===r.has(i)&&(v(i,e,t),r.set(i));else!1===r.has(a)&&(v(a,e,t),r.set(a))})};let je=null;const qe=new re;qe.setAnimationLoop(g),"undefined"!=typeof window&&qe.setContext(window),this.setAnimationLoop=function(e){je=e,ke.setAnimationLoop(e),null===e?qe.stop():qe.start()},this.render=function(e,t){let r,a;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),a=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0!=z){Ve.resetDefaultState(),H=-1,V=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ke.enabled&&!0===ke.isPresenting&&(t=ke.getCamera(t)),!0===e.isScene&&e.onBeforeRender(N,e,t,r||G),D=Be.get(e,t),D.init(),_e.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ne.setFromProjectionMatrix(_e),xe=this.localClippingEnabled,he=fe.init(this.clippingPlanes,xe,t),I=ze.get(e,t),I.init(),f(e,t,0,N.sortObjects),I.finish(),!0===N.sortObjects&&I.sort(J,Q),!0===he&&fe.beginShadows();const i=D.state.shadowsArray;We.render(i,e,t),D.setupLights(t),!0===he&&fe.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),Ue.render(I,e,t,a);const n=I.opaque,o=I.transparent;0<n.length&&h(n,e,t),0<o.length&&h(o,e,t),!0===e.isScene&&e.onAfterRender(N,e,t),null!==G&&(Re.updateRenderTargetMipmap(G),Re.updateMultisampleRenderTarget(G)),we.buffers.depth.setTest(!0),we.buffers.depth.setMask(!0),we.buffers.color.setMask(!0),we.setPolygonOffset(!1),I=null,D=null}},this.setFramebuffer=function(e){B!==e&&null===G&&Me.bindFramebuffer(36160,e),B=e},this.getActiveCubeFace=function(){return U},this.getActiveMipmapLevel=function(){return F},this.getRenderTarget=function(){return G},this.setRenderTarget=function(e,t,r){G=e,U=t,F=r,e&&void 0===Ae.get(e).__webglFramebuffer&&Re.setupRenderTarget(e);let a=B,i=!1;if(e){const r=Ae.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=r[t||0],i=!0):e.isWebGLMultisampleRenderTarget?a=Ae.get(e).__webglMultisampledFramebuffer:a=r,W.copy(e.viewport),j.copy(e.scissor),q=e.scissorTest}else W.copy(K).multiplyScalar(Z).floor(),j.copy($).multiplyScalar(Z).floor(),q=ie;if(O!==a&&(Me.bindFramebuffer(36160,a),O=a),we.viewport(W),we.scissor(j),we.setScissorTest(q),i){const a=Ae.get(e.texture);Me.framebufferTexture2D(36160,36064,34069+(t||0),a.__webglTexture,r||0)}},this.readRenderTargetPixels=function(e,t,r,a,i,n,o){if(!(e&&e.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=Ae.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){let o=!1;s!==O&&(Me.bindFramebuffer(36160,s),o=!0);try{const o=e.texture,s=o.format,l=o.type;if(s!==sl&&He.convert(s)!==Me.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(l!==Xs&&He.convert(l)!==Me.getParameter(35738)&&!(l===$s&&(Ee.isWebGL2||Te.get("OES_texture_float")||Te.get("WEBGL_color_buffer_float")))&&!(l===el&&(Ee.isWebGL2?Te.get("EXT_color_buffer_float"):Te.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===Me.checkFramebufferStatus(36160)?0<=t&&t<=e.width-a&&0<=r&&r<=e.height-i&&Me.readPixels(t,r,a,i,He.convert(s),He.convert(l),n):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{o&&Me.bindFramebuffer(36160,O)}}},this.copyFramebufferToTexture=function(e,t,r){void 0===r&&(r=0);const a=Eo(2,-r),i=Do(t.image.width*a),n=Do(t.image.height*a),o=He.convert(t.format);Re.setTexture2D(t,0),Me.copyTexImage2D(3553,r,o,e.x,e.y,i,n,0),we.unbindTexture()},this.copyTextureToTexture=function(e,t,r,a){void 0===a&&(a=0);const i=t.image.width,n=t.image.height,o=He.convert(r.format),s=He.convert(r.type);Re.setTexture2D(r,0),Me.pixelStorei(37440,r.flipY),Me.pixelStorei(37441,r.premultiplyAlpha),Me.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?Me.texSubImage2D(3553,a,e.x,e.y,i,n,o,s,t.image.data):t.isCompressedTexture?Me.compressedTexSubImage2D(3553,a,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):Me.texSubImage2D(3553,a,e.x,e.y,o,s,t.image),0===a&&r.generateMipmaps&&Me.generateMipmap(3553),we.unbindTexture()},this.initTexture=function(e){Re.setTexture2D(e,0),we.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function ar(e){rr.call(this,e)}function ir(e,t){this.name="",this.color=new M(e),this.density=void 0===t?25e-5:t}function nr(e,t,r){this.name="",this.color=new M(e),this.near=void 0===t?1:t,this.far=void 0===r?1e3:r}function or(e,t){this.array=e,this.stride=t,this.count=void 0===e?0:e.length/t,this.usage=Ld,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Pd.generateUUID()}function sr(e,t,r,a){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===a}function lr(e){A.call(this),this.type="SpriteMaterial",this.color=new M(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}function dr(e){if(f.call(this),this.type="Sprite",void 0===Xc){Xc=new V;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new or(e,5);Xc.setIndex([0,1,2,0,2,3]),Xc.setAttribute("position",new sr(t,3,0,!1)),Xc.setAttribute("uv",new sr(t,2,3,!1))}this.geometry=Xc,this.material=void 0===e?new lr:e,this.center=new n(.5,.5)}function pr(e,t,r,a,i,n){Qc.subVectors(e,r).addScalar(.5).multiply(a),void 0===i?Kc.copy(Qc):(Kc.x=n*Qc.x-i*Qc.y,Kc.y=i*Qc.x+n*Qc.y),e.copy(t),e.x+=Kc.x,e.y+=Kc.y,e.applyMatrix4($c)}function cr(){f.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function ur(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),k.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new c,this.bindMatrixInverse=new c}function mr(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new c)}}function gr(){f.call(this),this.type="Bone"}function fr(e,t,r){k.call(this,e,t),this.instanceMatrix=new P(new Float32Array(16*r),16),this.count=r,this.frustumCulled=!1}function hr(e){A.call(this),this.type="LineBasicMaterial",this.color=new M(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}function yr(e,t,r){1===r&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),f.call(this),this.type="Line",this.geometry=void 0===e?new V:e,this.material=void 0===t?new hr:t,this.updateMorphTargets()}function vr(e,t){yr.call(this,e,t),this.type="LineSegments"}function xr(e,t){yr.call(this,e,t),this.type="LineLoop"}function _r(e){A.call(this),this.type="PointsMaterial",this.color=new M(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}function br(e,t){f.call(this),this.type="Points",this.geometry=void 0===e?new V:e,this.material=void 0===t?new _r:t,this.updateMorphTargets()}function Sr(e,t,r,a,i,n,o){const s=Su.distanceSqToPoint(e);if(s<r){const r=new m;Su.closestPointToPoint(e,r),r.applyMatrix4(a);const l=i.ray.origin.distanceTo(r);if(l<i.near||l>i.far)return;n.push({distance:l,distanceToRay:bo(s),point:r,index:t,face:null,object:o})}}function Mr(e,t,r,a,i,n,s,l,d){o.call(this,e,t,r,a,i,n,s,l,d),this.format=void 0===s?ol:s,this.minFilter=void 0===n?Ws:n,this.magFilter=void 0===i?Ws:i,this.generateMipmaps=!1}function Tr(e,t,r,a,i,n,s,l,d,p,c,u){o.call(this,null,n,s,l,d,p,a,i,c,u),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function Er(e,t,r,a,i,n,s,l,d){o.call(this,e,t,r,a,i,n,s,l,d),this.needsUpdate=!0}function wr(e,t,r,a,i,n,s,l,d,p){if(p=void 0===p?pl:p,p!==pl&&p!==cl)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&p===pl&&(r=Js),void 0===r&&p===cl&&(r=il),o.call(this,null,a,i,n,s,l,p,r,d),this.image={width:e,height:t},this.magFilter=void 0===s?Hs:s,this.minFilter=void 0===l?Hs:l,this.flipY=!1,this.generateMipmaps=!1}function Lr(t){V.call(this),this.type="WireframeGeometry";const r=[],e=[0,0],a={},i=["a","b","c"];if(t&&t.isGeometry){const n=t.faces;for(let t=0,r=n.length;t<r;t++){const r=n[t];for(let t=0;3>t;t++){const n=r[i[t]],o=r[i[(t+1)%3]];e[0]=Po(n,o),e[1]=Ro(n,o);const s=e[0]+","+e[1];void 0===a[s]&&(a[s]={index1:e[0],index2:e[1]})}}for(const i in a){const n=a[i];let e=t.vertices[n.index1];r.push(e.x,e.y,e.z),e=t.vertices[n.index2],r.push(e.x,e.y,e.z)}}else if(t&&t.isBufferGeometry){let n=new m;if(null!==t.index){const i=t.attributes.position,o=t.index;let s=t.groups;0===s.length&&(s=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,r=s.length;t<r;++t){const r=s[t],n=r.start,l=r.count;for(let t=n;t<n+l;t+=3)for(let r=0;3>r;r++){const i=o.getX(t+r),n=o.getX(t+(r+1)%3);e[0]=Po(i,n),e[1]=Ro(i,n);const s=e[0]+","+e[1];void 0===a[s]&&(a[s]={index1:e[0],index2:e[1]})}}for(const t in a){const o=a[t];n.fromBufferAttribute(i,o.index1),r.push(n.x,n.y,n.z),n.fromBufferAttribute(i,o.index2),r.push(n.x,n.y,n.z)}}else{const e=t.attributes.position;for(let t=0,a=e.count/3;t<a;t++)for(let a=0;3>a;a++){const i=3*t+a;n.fromBufferAttribute(e,i),r.push(n.x,n.y,n.z);const o=3*t+(a+1)%3;n.fromBufferAttribute(e,o),r.push(n.x,n.y,n.z)}}}this.setAttribute("position",new F(r,3))}function Ar(e,t,r){j.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new Rr(e,t,r)),this.mergeVertices()}function Rr(e,t,r){V.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:r};const n=[],a=[],i=[],o=[],s=1e-5,l=new m,d=new m,p=new m,c=new m,g=new m;3>e.length&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const u=t+1;for(let n=0;n<=r;n++){const m=n/r;for(let r=0;r<=t;r++){const n=r/t;e(n,m,d),a.push(d.x,d.y,d.z),0<=n-s?(e(n-s,m,p),c.subVectors(d,p)):(e(n+s,m,p),c.subVectors(p,d)),0<=m-s?(e(n,m-s,p),g.subVectors(d,p)):(e(n,m+s,p),g.subVectors(p,d)),l.crossVectors(c,g).normalize(),i.push(l.x,l.y,l.z),o.push(n,m)}}for(let o=0;o<r;o++)for(let e=0;e<t;e++){const t=o*u+e,r=o*u+e+1,a=(o+1)*u+e+1,i=(o+1)*u+e;n.push(t,r,i),n.push(r,a,i)}this.setIndex(n),this.setAttribute("position",new F(a,3)),this.setAttribute("normal",new F(i,3)),this.setAttribute("uv",new F(o,2))}function Pr(e,t,r,a){j.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:a},this.fromBufferGeometry(new Cr(e,t,r,a)),this.mergeVertices()}function Cr(e,t,r,a){function i(e){const r=new m,a=new m,n=new m;for(let s=0;s<t.length;s+=3)p(t[s+0],r),p(t[s+1],a),p(t[s+2],n),o(r,a,n,e)}function o(e,t,r,a){const n=Eo(2,a),o=[];for(let s=0;s<=n;s++){o[s]=[];const a=e.clone().lerp(r,s/n),i=t.clone().lerp(r,s/n),l=n-s;for(let e=0;e<=l;e++)o[s][e]=0===e&&s===n?a:a.clone().lerp(i,e/l)}for(let s=0;s<n;s++)for(let e=0;e<2*(n-s)-1;e++){const t=Do(e/2);0==e%2?(d(o[s][t+1]),d(o[s+1][t]),d(o[s][t])):(d(o[s][t+1]),d(o[s+1][t+1]),d(o[s+1][t]))}}function s(e){const t=new m;for(let r=0;r<h.length;r+=3)t.x=h[r+0],t.y=h[r+1],t.z=h[r+2],t.normalize().multiplyScalar(e),h[r+0]=t.x,h[r+1]=t.y,h[r+2]=t.z}function l(){for(let e=0;e<y.length;e+=6){const t=y[e+0],r=y[e+2],a=y[e+4],i=Ro(t,r,a),n=Po(t,r,a);.9<i&&.1>n&&(.2>t&&(y[e+0]+=1),.2>r&&(y[e+2]+=1),.2>a&&(y[e+4]+=1))}}function d(e){h.push(e.x,e.y,e.z)}function p(t,r){const a=3*t;r.x=e[a+0],r.y=e[a+1],r.z=e[a+2]}function c(){const e=new m,t=new m,r=new m,a=new m,o=new n,s=new n,l=new n;for(let n=0,i=0;n<h.length;n+=9,i+=6){e.set(h[n+0],h[n+1],h[n+2]),t.set(h[n+3],h[n+4],h[n+5]),r.set(h[n+6],h[n+7],h[n+8]),o.set(y[i+0],y[i+1]),s.set(y[i+2],y[i+3]),l.set(y[i+4],y[i+5]),a.copy(e).add(t).add(r).divideScalar(3);const d=g(a);u(o,i+0,e,d),u(s,i+2,t,d),u(l,i+4,r,d)}}function u(e,t,r,a){0>a&&1===e.x&&(y[t]=e.x-1),0===r.x&&0===r.z&&(y[t]=a/2/Co+.5)}function g(e){return xo(e.z,-e.x)}function f(e){return xo(-e.y,bo(e.x*e.x+e.z*e.z))}V.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:a},r=r||1,a=a||0;const h=[],y=[];i(a),s(r),function(){const e=new m;for(let t=0;t<h.length;t+=3){e.x=h[t+0],e.y=h[t+1],e.z=h[t+2];const r=g(e)/2/Co+.5,a=f(e)/Co+.5;y.push(r,1-a)}c(),l()}(),this.setAttribute("position",new F(h,3)),this.setAttribute("normal",new F(h.slice(),3)),this.setAttribute("uv",new F(y,2)),0===a?this.computeVertexNormals():this.normalizeNormals()}function Ir(e,t){j.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Dr(e,t)),this.mergeVertices()}function Dr(e,t){Cr.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function Nr(e,t){j.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new zr(e,t)),this.mergeVertices()}function zr(e,t){Cr.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function Br(e,t){j.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Ur(e,t)),this.mergeVertices()}function Ur(e,r){const a=(1+2.23606797749979)/2;Cr.call(this,[-1,a,0,1,a,0,-1,-a,0,1,-a,0,0,-1,a,0,1,a,0,-1,-a,0,1,-a,a,0,-1,a,0,1,-a,0,-1,-a,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,r),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:r}}function Fr(e,t){j.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Gr(e,t)),this.mergeVertices()}function Gr(e,a){const i=(1+2.23606797749979)/2,n=1/i;Cr.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,a),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:a}}function Or(e,t,r,a,i,n){j.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:a,closed:i},void 0!==n&&console.warn("THREE.TubeGeometry: taper has been removed.");const o=new Hr(e,t,r,a,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function Hr(e,t,r,o,a){function i(){for(let e=0;e<t;e++)s(e);s(!1===a?t:0),d(),l()}function s(a){f=e.getPointAt(a/t,f);const i=p.normals[a],n=p.binormals[a];for(let e=0;e<=o;e++){const t=2*(e/o*Co),a=Mo(t),s=-To(t);u.x=s*i.x+a*n.x,u.y=s*i.y+a*n.y,u.z=s*i.z+a*n.z,u.normalize(),y.push(u.x,u.y,u.z),c.x=f.x+r*u.x,c.y=f.y+r*u.y,c.z=f.z+r*u.z,h.push(c.x,c.y,c.z)}}function l(){for(let e=1;e<=t;e++)for(let t=1;t<=o;t++){const r=(o+1)*(e-1)+(t-1),a=(o+1)*e+(t-1),i=(o+1)*e+t,n=(o+1)*(e-1)+t;x.push(r,a,n),x.push(a,i,n)}}function d(){for(let e=0;e<=t;e++)for(let r=0;r<=o;r++)g.x=e/t,g.y=r/o,v.push(g.x,g.y)}V.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:o,closed:a},t=t||64,r=r||1,o=o||8,a=a||!1;const p=e.computeFrenetFrames(t,a);this.tangents=p.tangents,this.normals=p.normals,this.binormals=p.binormals;const c=new m,u=new m,g=new n;let f=new m;const h=[],y=[],v=[],x=[];i(),this.setIndex(x),this.setAttribute("position",new F(h,3)),this.setAttribute("normal",new F(y,3)),this.setAttribute("uv",new F(v,2))}function Vr(e,t,r,a,i,n,o){j.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:a,p:i,q:n},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new kr(e,t,r,a,i,n)),this.mergeVertices()}function kr(e,t,r,n,a,o){function s(e,t,r,a,i){const n=To(e),o=Mo(e),s=r/t*e,l=To(s);i.x=.5*(a*(2+l))*n,i.y=.5*(a*(2+l)*o),i.z=.5*(a*Mo(s))}V.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:a,q:o},e=e||1,t=t||.4,r=Do(r)||64,n=Do(n)||8,a=a||2,o=o||3;const l=[],d=[],c=[],u=[],g=new m,f=new m,h=new m,y=new m,x=new m,v=new m,_=new m;for(let l=0;l<=r;++l){const i=2*(l/r*a*Co);s(i,a,o,e,h),s(i+.01,a,o,e,y),v.subVectors(y,h),_.addVectors(y,h),x.crossVectors(v,_),_.crossVectors(x,v),x.normalize(),_.normalize();for(let e=0;e<=n;++e){const a=2*(e/n*Co),i=-t*To(a),o=t*Mo(a);g.x=h.x+(i*_.x+o*x.x),g.y=h.y+(i*_.y+o*x.y),g.z=h.z+(i*_.z+o*x.z),d.push(g.x,g.y,g.z),f.subVectors(g,h).normalize(),c.push(f.x,f.y,f.z),u.push(l/r),u.push(e/n)}}for(let s=1;s<=r;s++)for(let e=1;e<=n;e++){const t=(n+1)*(s-1)+(e-1),r=(n+1)*s+(e-1),a=(n+1)*s+e,i=(n+1)*(s-1)+e;l.push(t,r,i),l.push(r,a,i)}this.setIndex(l),this.setAttribute("position",new F(d,3)),this.setAttribute("normal",new F(c,3)),this.setAttribute("uv",new F(u,2))}function Wr(e,t,r,a,i){j.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:a,arc:i},this.fromBufferGeometry(new jr(e,t,r,a,i)),this.mergeVertices()}function jr(e,t,r,n,a){V.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:a},e=e||1,t=t||.4,r=Do(r)||8,n=Do(n)||6,a=a||2*Co;const o=[],s=[],l=[],d=[],p=new m,c=new m,g=new m;for(let o=0;o<=r;o++)for(let m=0;m<=n;m++){const i=m/n*a,u=2*(o/r*Co);c.x=(e+t*To(u))*To(i),c.y=(e+t*To(u))*Mo(i),c.z=t*Mo(u),s.push(c.x,c.y,c.z),p.x=e*To(i),p.y=e*Mo(i),g.subVectors(c,p).normalize(),l.push(g.x,g.y,g.z),d.push(m/n),d.push(o/r)}for(let s=1;s<=r;s++)for(let e=1;e<=n;e++){const t=(n+1)*s+e-1,r=(n+1)*(s-1)+e-1,a=(n+1)*(s-1)+e,i=(n+1)*s+e;o.push(t,r,i),o.push(r,a,i)}this.setIndex(o),this.setAttribute("position",new F(s,3)),this.setAttribute("normal",new F(l,3)),this.setAttribute("uv",new F(d,2))}function qr(e,t,r,a,n){let o,i;if(n===0<Sa(e,t,r,a))for(o=t;o<r;o+=a)i=xa(o,e[o],e[o+1],i);else for(o=r-a;o>=t;o-=a)i=xa(o,e[o],e[o+1],i);return i&&ca(i,i.next)&&(_a(i),i=i.next),i}function Xr(e,t){if(!e)return e;t||(t=e);let r=e,a;do if(a=!1,!r.steiner&&(ca(r,r.next)||0===pa(r.prev,r,r.next))){if(_a(r),r=t=r.prev,r===r.next)break;a=!0}else r=r.next;while(a||r!==t);return t}function Yr(e,t,r,a,i,n,o){if(e){!o&&n&&ia(e,a,i,n);for(let s=e,l,d;e.prev!==e.next;){if(l=e.prev,d=e.next,n?Jr(e,a,i,n):Zr(e)){t.push(l.i/r),t.push(e.i/r),t.push(d.i/r),_a(e),e=d.next,s=d.next;continue}if(e=d,e===s){o?1===o?(e=Qr(Xr(e),t,r),Yr(e,t,r,a,i,n,2)):2==o&&Kr(e,t,r,a,i,n):Yr(Xr(e),t,r,a,i,n,1);break}}}}function Zr(e){let t=e.prev,r=e,a=e.next;if(0<=pa(t,r,a))return!1;for(let i=e.next.next;i!==e.prev;){if(la(t.x,t.y,r.x,r.y,a.x,a.y,i.x,i.y)&&0<=pa(i.prev,i,i.next))return!1;i=i.next}return!0}function Jr(e,t,r,i){let o=e.prev,a=e,s=e.next;if(0<=pa(o,a,s))return!1;let l=o.x<a.x?o.x<s.x?o.x:s.x:a.x<s.x?a.x:s.x,d=o.y<a.y?o.y<s.y?o.y:s.y:a.y<s.y?a.y:s.y,c=o.x>a.x?o.x>s.x?o.x:s.x:a.x>s.x?a.x:s.x,u=o.y>a.y?o.y>s.y?o.y:s.y:a.y>s.y?a.y:s.y,m=oa(l,d,t,r,i),g=oa(c,u,t,r,i),f=e.prevZ,p=e.nextZ;for(;f&&f.z>=m&&p&&p.z<=g;){if(f!==e.prev&&f!==e.next&&la(o.x,o.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=pa(f.prev,f,f.next))return!1;if(f=f.prevZ,p!==e.prev&&p!==e.next&&la(o.x,o.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=pa(p.prev,p,p.next))return!1;p=p.nextZ}for(;f&&f.z>=m;){if(f!==e.prev&&f!==e.next&&la(o.x,o.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=pa(f.prev,f,f.next))return!1;f=f.prevZ}for(;p&&p.z<=g;){if(p!==e.prev&&p!==e.next&&la(o.x,o.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=pa(p.prev,p,p.next))return!1;p=p.nextZ}return!0}function Qr(e,t,r){let i=e;do{let n=i.prev,a=i.next.next;!ca(n,a)&&ua(n,i,i.next,a)&&ha(n,a)&&ha(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),_a(i),_a(i.next),i=e=a),i=i.next}while(i!==e);return Xr(i)}function Kr(e,t,r,i,n,o){let s=e;do{for(let e=s.next.next;e!==s.prev;){if(s.i!==e.i&&da(s,e)){let a=va(s,e);return s=Xr(s,s.next),a=Xr(a,a.next),Yr(s,t,r,i,n,o),void Yr(a,t,r,i,n,o)}e=e.next}s=s.next}while(s!==e)}function $r(e,t,r,a){let n=[],o,i,s,l,d;for(o=0,i=t.length;o<i;o++)s=t[o]*a,l=o<i-1?t[o+1]*a:e.length,d=qr(e,s,l,a,!1),d===d.next&&(d.steiner=!0),n.push(sa(d));for(n.sort(ea),o=0;o<n.length;o++)ta(n[o],r),r=Xr(r,r.next);return r}function ea(e,t){return e.x-t.x}function ta(e,t){if(t=ra(e,t),t){const r=va(t,e);Xr(t,t.next),Xr(r,r.next)}}function ra(e,t){let r=t,a=e.x,i=e.y,n=-Infinity,o;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){let e=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(e<=a&&e>n){if(n=e,e===a){if(i===r.y)return r;if(i===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!o)return null;if(a===n)return o;let s=o,l=o.x,d=o.y,p=Infinity,c;r=o;do a>=r.x&&r.x>=l&&a!==r.x&&la(i<d?a:n,i,l,d,i<d?n:a,i,r.x,r.y)&&(c=_o(i-r.y)/(a-r.x),ha(r,e)&&(c<p||c===p&&(r.x>o.x||r.x===o.x&&aa(o,r)))&&(o=r,p=c)),r=r.next;while(r!==s);return o}function aa(e,t){return 0>pa(e.prev,e,t.prev)&&0>pa(t.next,e,e.next)}function ia(e,t,r,a){let i=e;do null===i.z&&(i.z=oa(i.x,i.y,t,r,a)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,na(i)}function na(t){let r=1,a,i,n,o,e,s,l,d;do{for(i=t,t=null,e=null,s=0;i;){for(s++,n=i,l=0,a=0;a<r&&(l++,n=n.nextZ,!!n);a++);for(d=r;0<l||0<d&&n;)0!==l&&(0===d||!n||i.z<=n.z)?(o=i,i=i.nextZ,l--):(o=n,n=n.nextZ,d--),e?e.nextZ=o:t=o,o.prevZ=e,e=o;i=n}e.nextZ=null,r*=2}while(1<s);return t}function oa(e,t,r,a,i){return e=32767*(e-r)*i,t=32767*(t-a)*i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function sa(e){let t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e);return r}function la(e,t,r,a,i,n,o,s){return 0<=(i-o)*(t-s)-(e-o)*(n-s)&&0<=(e-o)*(a-s)-(r-o)*(t-s)&&0<=(r-o)*(n-s)-(i-o)*(a-s)}function da(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!fa(e,t)&&(ha(e,t)&&ha(t,e)&&ya(e,t)&&(pa(e.prev,e,t.prev)||pa(e,t.prev,t))||ca(e,t)&&0<pa(e.prev,e,e.next)&&0<pa(t.prev,t,t.next))}function pa(e,t,a){return(t.y-e.y)*(a.x-t.x)-(t.x-e.x)*(a.y-t.y)}function ca(e,t){return e.x===t.x&&e.y===t.y}function ua(e,t,r,a){const i=ga(pa(e,t,r)),n=ga(pa(e,t,a)),o=ga(pa(r,a,e)),s=ga(pa(r,a,t));return i!==n&&o!==s||!!(0===i&&ma(e,r,t))||!!(0===n&&ma(e,a,t))||!!(0===o&&ma(r,e,a))||!!(0===s&&ma(r,t,a))}function ma(e,t,a){return t.x<=Ro(e.x,a.x)&&t.x>=Po(e.x,a.x)&&t.y<=Ro(e.y,a.y)&&t.y>=Po(e.y,a.y)}function ga(e){return 0<e?1:0>e?-1:0}function fa(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&ua(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function ha(e,t){return 0>pa(e.prev,e,e.next)?0<=pa(e,t,e.next)&&0<=pa(e,e.prev,t):0>pa(e,t,e.prev)||0>pa(e,e.next,t)}function ya(e,t){let r=e,a=!1,i=(e.x+t.x)/2,n=(e.y+t.y)/2;do r.y>n!=r.next.y>n&&r.next.y!==r.y&&i<(r.next.x-r.x)*(n-r.y)/(r.next.y-r.y)+r.x&&(a=!a),r=r.next;while(r!==e);return a}function va(e,t){let r=new ba(e.i,e.x,e.y),a=new ba(t.i,t.x,t.y),i=e.next,n=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,a.next=r,r.prev=a,n.next=a,a.prev=n,a}function xa(e,t,r,a){const i=new ba(e,t,r);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function _a(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function ba(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Sa(e,t,r,a){let n=0;for(let o=t,i=r-a;o<r;o+=a)n+=(e[i]-e[o])*(e[o+1]+e[i+1]),i=o;return n}function Ma(e){const t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Ta(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}function Ea(e,t){j.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new wa(e,t)),this.mergeVertices()}function wa(e,t){function r(e){function r(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}function s(e,t,r){let a,i,o;const s=e.x-t.x,l=e.y-t.y,d=r.x-e.x,p=r.y-e.y,c=s*s+l*l;if(_o(s*p-l*d)>zo){const u=bo(c),m=bo(d*d+p*p),g=t.x-l/u,f=t.y+s/u,h=r.x-p/m,y=r.y+d/m,v=((h-g)*p-(y-f)*d)/(s*p-l*d);a=g+s*v-e.x,i=f+l*v-e.y;const x=a*a+i*i;if(2>=x)return new n(a,i);o=bo(x/2)}else{let e=!1;s>zo?d>zo&&(e=!0):s<-zo?d<-zo&&(e=!0):Io(l)===Io(p)&&(e=!0),e?(a=-l,i=s,o=bo(c)):(a=s,i=l,o=bo(c/2))}return new n(a/o,i/o)}function l(){const e=o.length/3;if(_){let e=0,t=G*e;for(let e=0;e<O;e++){const r=U[e];c(r[2]+t,r[1]+t,r[0]+t)}e=v+2*E,t=G*e;for(let e=0;e<O;e++){const r=U[e];c(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<O;e++){const t=U[e];c(t[2],t[1],t[0])}for(let e=0;e<O;e++){const t=U[e];c(t[0]+G*v,t[1]+G*v,t[2]+G*v)}}i.addGroup(e,o.length/3-e,0)}function d(e,t){for(let r=e.length;0<=--r;){const a=r;let i=r-1;0>i&&(i=e.length-1);for(let e=0,r=v+2*E;e<r;e++){const r=G*e,n=G*(e+1),o=t+i+r,s=t+i+n;u(t+a+r,o,s,t+a+n)}}}function p(e,t,r){h.push(e),h.push(t),h.push(r)}function c(e,t,r){g(e),g(t),g(r);const a=o.length/3,n=w.generateTopUV(i,o,a-3,a-2,a-1);f(n[0]),f(n[1]),f(n[2])}function u(e,t,r,a){g(e),g(t),g(a),g(t),g(r),g(a);const n=o.length/3,s=w.generateSideWallUV(i,o,n-6,n-3,n-2,n-1);f(s[0]),f(s[1]),f(s[3]),f(s[1]),f(s[2]),f(s[3])}function g(e){o.push(h[3*e+0]),o.push(h[3*e+1]),o.push(h[3*e+2])}function f(e){a.push(e.x),a.push(e.y)}const h=[],y=void 0===t.curveSegments?12:t.curveSegments,v=void 0===t.steps?1:t.steps;let x=void 0===t.depth?100:t.depth,_=void 0===t.bevelEnabled||t.bevelEnabled,S=void 0===t.bevelThickness?6:t.bevelThickness,M=void 0===t.bevelSize?S-2:t.bevelSize,T=void 0===t.bevelOffset?0:t.bevelOffset,E=void 0===t.bevelSegments?3:t.bevelSegments;const b=t.extrudePath,w=void 0===t.UVGenerator?Lu:t.UVGenerator;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),x=t.amount);let L=!1,A,R,P,C,I;b&&(A=b.getSpacedPoints(v),L=!0,_=!1,R=b.computeFrenetFrames(v,!1),P=new m,C=new m,I=new m),_||(E=0,S=0,M=0,T=0);const D=e.extractPoints(y);let N=D.shape;const B=D.holes,z=!wu.isClockWise(N);if(z){N=N.reverse();for(let e=0,t=B.length;e<t;e++){const t=B[e];wu.isClockWise(t)&&(B[e]=t.reverse())}}const U=wu.triangulateShape(N,B),F=N;for(let t=0,r=B.length;t<r;t++){const e=B[t];N=N.concat(e)}const G=N.length,O=U.length,H=[];for(let t=0,r=F.length,a=r-1,i=t+1;t<r;t++,a++,i++)a===r&&(a=0),i===r&&(i=0),H[t]=s(F[t],F[a],F[i]);const V=[];let k=H.concat(),W;for(let t=0,r=B.length;t<r;t++){const e=B[t];W=[];for(let t=0,r=e.length,a=r-1,i=t+1;t<r;t++,a++,i++)a===r&&(a=0),i===r&&(i=0),W[t]=s(e[t],e[a],e[i]);V.push(W),k=k.concat(W)}for(let a=0;a<E;a++){const e=a/E,t=S*To(e*Co/2),n=M*Mo(e*Co/2)+T;for(let e=0,a=F.length;e<a;e++){const a=r(F[e],H[e],n);p(a.x,a.y,-t)}for(let e=0,a=B.length;e<a;e++){const a=B[e];W=V[e];for(let e=0,i=a.length;e<i;e++){const i=r(a[e],W[e],n);p(i.x,i.y,-t)}}}const j=M+T;for(let t=0;t<G;t++){const e=_?r(N[t],k[t],j):N[t];L?(C.copy(R.normals[0]).multiplyScalar(e.x),P.copy(R.binormals[0]).multiplyScalar(e.y),I.copy(A[0]).add(C).add(P),p(I.x,I.y,I.z)):p(e.x,e.y,0)}for(let t=1;t<=v;t++)for(let e=0;e<G;e++){const a=_?r(N[e],k[e],j):N[e];L?(C.copy(R.normals[t]).multiplyScalar(a.x),P.copy(R.binormals[t]).multiplyScalar(a.y),I.copy(A[t]).add(C).add(P),p(I.x,I.y,I.z)):p(a.x,a.y,x/v*t)}for(let a=E-1;0<=a;a--){const e=a/E,t=S*To(e*Co/2),n=M*Mo(e*Co/2)+T;for(let e=0,a=F.length;e<a;e++){const a=r(F[e],H[e],n);p(a.x,a.y,x+t)}for(let e=0,a=B.length;e<a;e++){const a=B[e];W=V[e];for(let e=0,i=a.length;e<i;e++){const i=r(a[e],W[e],n);L?p(i.x,i.y+A[v-1].y,A[v-1].x+t):p(i.x,i.y,x+t)}}}l(),function(){const e=o.length/3;let t=0;d(F,t),t+=F.length;for(let e=0,r=B.length;e<r;e++){const r=B[e];d(r,t),t+=r.length}i.addGroup(e,o.length/3-e,1)}()}V.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,o=[],a=[];for(let a=0,i=e.length;a<i;a++){const t=e[a];r(t)}this.setAttribute("position",new F(o,3)),this.setAttribute("uv",new F(a,2)),this.computeVertexNormals()}function La(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,a=e.length;t<a;t++){const a=e[t];r.shapes.push(a.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}function Aa(e,t){j.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new Ra(e,t)),this.mergeVertices()}function Ra(e,t){t=t||{};const r=t.font;if(!(r&&r.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new j;const a=r.generateShapes(e,t.size);t.depth=void 0===t.height?50:t.height,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),wa.call(this,a,t),this.type="TextBufferGeometry"}function Pa(e,t,r,a,i,n,o){j.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new Ca(e,t,r,a,i,n,o)),this.mergeVertices()}function Ca(e,t,r,a,i,n,o){V.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},e=e||1,t=Ro(3,Do(t)||8),r=Ro(2,Do(r)||6),a=void 0===a?0:a,i=void 0===i?2*Co:i,n=void 0===n?0:n,o=void 0===o?Co:o;const s=Po(n+o,Math.PI);let l=0;const p=[],d=new m,c=new m,u=[],g=[],f=[],h=[];for(let u=0;u<=r;u++){const m=[],y=u/r;let v=0;0==u&&0==n?v=.5/t:u==r&&s==Co&&(v=-.5/t);for(let r=0;r<=t;r++){const s=r/t;d.x=-e*To(a+s*i)*Mo(n+y*o),d.y=e*To(n+y*o),d.z=e*Mo(a+s*i)*Mo(n+y*o),g.push(d.x,d.y,d.z),c.copy(d).normalize(),f.push(c.x,c.y,c.z),h.push(s+v,1-y),m.push(l++)}p.push(m)}for(let l=0;l<r;l++)for(let e=0;e<t;e++){const t=p[l][e+1],a=p[l][e],i=p[l+1][e],o=p[l+1][e+1];(0!==l||0<n)&&u.push(t,a,o),(l!==r-1||s<Co)&&u.push(a,i,o)}this.setIndex(u),this.setAttribute("position",new F(g,3)),this.setAttribute("normal",new F(f,3)),this.setAttribute("uv",new F(h,2))}function Ia(e,t,r,a,i,n){j.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new Da(e,t,r,a,i,n)),this.mergeVertices()}function Da(e,t,r,a,o,s){V.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:o,thetaLength:s},e=e||.5,t=t||1,o=void 0===o?0:o,s=void 0===s?2*Co:s,r=void 0===r?8:Ro(3,r),a=void 0===a?1:Ro(1,a);const l=[],d=[],p=[],c=[];let u=e;const i=(t-e)/a,g=new m,f=new n;for(let n=0;n<=a;n++){for(let e=0;e<=r;e++){const a=o+e/r*s;g.x=u*To(a),g.y=u*Mo(a),d.push(g.x,g.y,g.z),p.push(0,0,1),f.x=(g.x/t+1)/2,f.y=(g.y/t+1)/2,c.push(f.x,f.y)}u+=i}for(let i=0;i<a;i++){const e=i*(r+1);for(let t=0;t<r;t++){const a=t+e,i=a+r+1,n=a+r+2,o=a+1;l.push(a,i,o),l.push(i,n,o)}}this.setIndex(l),this.setAttribute("position",new F(d,3)),this.setAttribute("normal",new F(p,3)),this.setAttribute("uv",new F(c,2))}function Na(e,t,r,a){j.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:a},this.fromBufferGeometry(new za(e,t,r,a)),this.mergeVertices()}function za(e,t,r,a){V.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:a},t=Do(t)||12,r=r||0,a=a||2*Co,a=Pd.clamp(a,0,2*Co);const o=[],s=[],l=[],d=1/t,p=new m,c=new n;for(let n=0;n<=t;n++){const i=r+n*d*a,o=Mo(i),u=To(i);for(let r=0;r<=e.length-1;r++)p.x=e[r].x*o,p.y=e[r].y,p.z=e[r].x*u,s.push(p.x,p.y,p.z),c.x=n/t,c.y=r/(e.length-1),l.push(c.x,c.y)}for(let n=0;n<t;n++)for(let t=0;t<e.length-1;t++){const r=t+n*e.length,a=r+e.length,i=r+e.length+1,s=r+1;o.push(r,a,s),o.push(a,i,s)}if(this.setIndex(o),this.setAttribute("position",new F(s,3)),this.setAttribute("uv",new F(l,2)),this.computeVertexNormals(),a===2*Co){const r=this.attributes.normal.array,a=new m,o=new m,s=new m,n=3*(t*e.length);for(let t=0,i=0;t<e.length;t++,i+=3)a.x=r[i+0],a.y=r[i+1],a.z=r[i+2],o.x=r[n+i+0],o.y=r[n+i+1],o.z=r[n+i+2],s.addVectors(a,o).normalize(),r[i+0]=r[n+i+0]=s.x,r[i+1]=r[n+i+1]=s.y,r[i+2]=r[n+i+2]=s.z}}function Ba(e,t){j.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Ua(e,t)),this.mergeVertices()}function Ua(e,t){function r(e){const r=a.length/3,i=e.extractPoints(t);let p=i.shape;const c=i.holes;!1===wu.isClockWise(p)&&(p=p.reverse());for(let t=0,r=c.length;t<r;t++){const e=c[t];!0===wu.isClockWise(e)&&(c[t]=e.reverse())}const u=wu.triangulateShape(p,c);for(let t=0,r=c.length;t<r;t++){const e=c[t];p=p.concat(e)}for(let t=0,r=p.length;t<r;t++){const e=p[t];a.push(e.x,e.y,0),o.push(0,0,1),s.push(e.x,e.y)}for(let t=0,a=u.length;t<a;t++){const e=u[t],i=e[0]+r,a=e[1]+r,o=e[2]+r;n.push(i,a,o),d+=3}}V.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const n=[],a=[],o=[],s=[];let l=0,d=0;if(!1===Array.isArray(e))r(e);else for(let t=0;t<e.length;t++)r(e[t]),this.addGroup(l,d,t),l+=d,d=0;this.setIndex(n),this.setAttribute("position",new F(a,3)),this.setAttribute("normal",new F(o,3)),this.setAttribute("uv",new F(s,2))}function Fa(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,a=e.length;r<a;r++){const a=e[r];t.shapes.push(a.uuid)}else t.shapes.push(e.uuid);return t}function Ga(e,t){V.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0===t?1:t;const r=[],a=To(Pd.DEG2RAD*t),n=[0,0],o={};let s,l,d;const p=["a","b","c"];let i;e.isBufferGeometry?(i=new j,i.fromBufferGeometry(e)):i=e.clone(),i.mergeVertices(),i.computeFaceNormals();const c=i.vertices,u=i.faces;for(let r=0,a=u.length;r<a;r++){const e=u[r];for(let t=0;3>t;t++)s=e[p[t]],l=e[p[(t+1)%3]],n[0]=Po(s,l),n[1]=Ro(s,l),d=n[0]+","+n[1],void 0===o[d]?o[d]={index1:n[0],index2:n[1],face1:r,face2:void 0}:o[d].face2=r}for(d in o){const t=o[d];if(void 0===t.face2||u[t.face1].normal.dot(u[t.face2].normal)<=a){let e=c[t.index1];r.push(e.x,e.y,e.z),e=c[t.index2],r.push(e.x,e.y,e.z)}}this.setAttribute("position",new F(r,3))}function Oa(e,t,r,a,i,n,o,s){j.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:a,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Ha(e,t,r,a,i,n,o,s)),this.mergeVertices()}function Ha(e,t,r,a,i,o,s,l){function d(){const n=new m,o=new m;let p=0;const d=(t-e)/r;for(let p=0;p<=i;p++){const c=[],m=p/i,S=m*(t-e)+e;for(let e=0;e<=a;e++){const t=e/a,i=t*l+s,p=Mo(i),u=To(i);o.x=S*p,o.y=-m*r+b,o.z=S*u,g.push(o.x,o.y,o.z),n.set(p,d,u).normalize(),f.push(n.x,n.y,n.z),h.push(t,1-m),c.push(y++)}_.push(c)}for(let e=0;e<a;e++)for(let t=0;t<i;t++){const r=_[t][e],a=_[t+1][e],i=_[t+1][e+1],n=_[t][e+1];u.push(r,a,n),u.push(a,i,n),p+=6}c.addGroup(v,p,0),v+=p}function p(r){let o,d;const i=new n,p=new m;let _=0;const S=!0===r?e:t,M=!0===r?1:-1;o=y;for(let e=1;e<=a;e++)g.push(0,b*M,0),f.push(0,M,0),h.push(.5,.5),y++;d=y;for(let e=0;e<=a;e++){const t=e/a,r=t*l+s,n=To(r),o=Mo(r);p.x=S*o,p.y=b*M,p.z=S*n,g.push(p.x,p.y,p.z),f.push(0,M,0),i.x=.5*n+.5,i.y=.5*o*M+.5,h.push(i.x,i.y),y++}for(let e=0;e<a;e++){const t=o+e,a=d+e;!0===r?u.push(a,a+1,t):u.push(a+1,a,t),_+=3}c.addGroup(v,_,!0===r?1:2),v+=_}V.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:a,heightSegments:i,openEnded:o,thetaStart:s,thetaLength:l};const c=this;e=void 0===e?1:e,t=void 0===t?1:t,r=r||1,a=Do(a)||8,i=Do(i)||1,o=void 0!==o&&o,s=void 0===s?0:s,l=void 0===l?2*Co:l;const u=[],g=[],f=[],h=[];let y=0;const _=[],b=r/2;let v=0;d(),!1===o&&(0<e&&p(!0),0<t&&p(!1)),this.setIndex(u),this.setAttribute("position",new F(g,3)),this.setAttribute("normal",new F(f,3)),this.setAttribute("uv",new F(h,2))}function Va(e,t,r,a,i,n,o){Oa.call(this,0,e,t,r,a,i,n,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}function ka(e,t,r,a,i,n,o){Ha.call(this,0,e,t,r,a,i,n,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}function Wa(e,t,r,a){j.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new ja(e,t,r,a)),this.mergeVertices()}function ja(e,t,r,a){V.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},e=e||1,t=void 0===t?8:Ro(3,t),r=void 0===r?0:r,a=void 0===a?2*Co:a;const o=[],l=[],d=[],p=[],c=new m,u=new n;l.push(0,0,0),d.push(0,0,1),p.push(.5,.5);for(let n=0,o=3;n<=t;n++,o+=3){const i=r+n/t*a;c.x=e*To(i),c.y=e*Mo(i),l.push(c.x,c.y,c.z),d.push(0,0,1),u.x=(l[o]/e+1)/2,u.y=(l[o+1]/e+1)/2,p.push(u.x,u.y)}for(let n=1;n<=t;n++)o.push(n,n+1,0);this.setIndex(o),this.setAttribute("position",new F(l,3)),this.setAttribute("normal",new F(d,3)),this.setAttribute("uv",new F(p,2))}function qa(e){A.call(this),this.type="ShadowMaterial",this.color=new M(0),this.transparent=!0,this.setValues(e)}function Xa(e){Z.call(this,e),this.type="RawShaderMaterial"}function Ya(e){A.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new M(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new M(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Md,this.normalScale=new n(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function Za(e){Ya.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new n(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}function Ja(e){A.call(this),this.type="MeshPhongMaterial",this.color=new M(16777215),this.specular=new M(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new M(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Md,this.normalScale=new n(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ss,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Qa(e){A.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new M(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new M(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Md,this.normalScale=new n(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Ka(e){A.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Md,this.normalScale=new n(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function $a(e){A.call(this),this.type="MeshLambertMaterial",this.color=new M(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new M(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ss,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function ei(e){A.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new M(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Md,this.normalScale=new n(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function ti(e){hr.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}function ri(e,t,r,a){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0===a?new t.constructor(r):a,this.sampleValues=t,this.valueSize=r}function ai(e,t,r,a){ri.call(this,e,t,r,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function ii(e,t,r,a){ri.call(this,e,t,r,a)}function ni(e,t,r,a){ri.call(this,e,t,r,a)}function oi(e,t,r,a){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Pu.convertArray(t,this.TimeBufferType),this.values=Pu.convertArray(r,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}function si(e,t,r){oi.call(this,e,t,r)}function li(e,t,r,a){oi.call(this,e,t,r,a)}function di(e,t,r,a){oi.call(this,e,t,r,a)}function pi(e,t,r,a){ri.call(this,e,t,r,a)}function ci(e,t,r,a){oi.call(this,e,t,r,a)}function ui(e,t,r,a){oi.call(this,e,t,r,a)}function mi(e,t,r,a){oi.call(this,e,t,r,a)}function gi(e,t,r,a){this.name=e,this.tracks=r,this.duration=void 0===t?-1:t,this.blendMode=void 0===a?cd:a,this.uuid=Pd.generateUUID(),0>this.duration&&this.resetDuration()}function fi(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return di;case"vector":case"vector2":case"vector3":case"vector4":return mi;case"color":return li;case"quaternion":return ci;case"bool":case"boolean":return si;case"string":return ui;}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function hi(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=fi(e.type);if(void 0===e.times){const t=[],r=[];Pu.flattenJSON(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0===t.parse?new t(e.name,e.times,e.values,e.interpolation):t.parse(e)}function yi(e,t,r){const a=this;let i=!1,n=0,o=0,s;const d=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1==i&&void 0!==a.onStart&&a.onStart(e,n,o),i=!0},this.itemEnd=function(e){n++,void 0!==a.onProgress&&a.onProgress(e,n,o),n==o&&(i=!1,void 0!==a.onLoad&&a.onLoad())},this.itemError=function(e){void 0!==a.onError&&a.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return d.push(e,t),this},this.removeHandler=function(e){const t=d.indexOf(e);return-1!==t&&d.splice(t,2),this},this.getHandler=function(e){for(let t=0,r=d.length;t<r;t+=2){const r=d[t],a=d[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return a}return null}}function vi(e){this.manager=void 0===e?Iu:e,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}function xi(e){vi.call(this,e)}function _i(e){vi.call(this,e)}function bi(e){vi.call(this,e)}function Si(e){vi.call(this,e)}function Mi(e){vi.call(this,e)}function Ti(e){vi.call(this,e)}function Ei(e){vi.call(this,e)}function wi(){this.type="Curve",this.arcLengthDivisions=200}function Li(e,t,r,a,i,n,o,s){wi.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=a||1,this.aStartAngle=i||0,this.aEndAngle=n||2*Co,this.aClockwise=o||!1,this.aRotation=s||0}function Ai(e,t,r,a,i,n){Li.call(this,e,t,r,r,a,i,n),this.type="ArcCurve"}function Ri(){function e(e,t,o,s){r=e,a=o,i=-3*e+3*t-2*o-s,n=2*e-2*t+o+s}let r=0,a=0,i=0,n=0;return{initCatmullRom:function(t,r,a,i,n){e(r,a,n*(a-t),n*(i-r))},initNonuniformCatmullRom:function(t,r,a,i,n,o,s){let l=(r-t)/n-(a-t)/(n+o)+(a-r)/o,d=(a-r)/o-(i-r)/(o+s)+(i-a)/s;l*=o,d*=o,e(r,a,l,d)},calc:function(e){const t=e*e;return r+a*e+i*t+n*(t*e)}}}function Pi(e,t,r,a){wi.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=r||"centripetal",this.tension=a||.5}function Ci(e,t,r,a,i){const n=.5*(a-t),o=.5*(i-r),s=e*e;return(2*r-2*a+n+o)*(e*s)+(-3*r+3*a-2*n-o)*s+n*e+r}function Ii(e,t){const r=1-e;return r*r*t}function Di(e,t){return 2*(1-e)*e*t}function Ni(e,t){return e*e*t}function zi(e,t,r,a){return Ii(e,t)+Di(e,r)+Ni(e,a)}function Bi(e,t){const r=1-e;return r*r*r*t}function Ui(e,t){const r=1-e;return 3*r*r*e*t}function Fi(e,t){return 3*(1-e)*e*e*t}function Gi(e,t){return e*e*e*t}function Oi(e,t,r,a,i){return Bi(e,t)+Ui(e,r)+Fi(e,a)+Gi(e,i)}function Hi(e,t,r,a){wi.call(this),this.type="CubicBezierCurve",this.v0=e||new n,this.v1=t||new n,this.v2=r||new n,this.v3=a||new n}function Vi(e,t,r,a){wi.call(this),this.type="CubicBezierCurve3",this.v0=e||new m,this.v1=t||new m,this.v2=r||new m,this.v3=a||new m}function ki(e,t){wi.call(this),this.type="LineCurve",this.v1=e||new n,this.v2=t||new n}function Wi(e,t){wi.call(this),this.type="LineCurve3",this.v1=e||new m,this.v2=t||new m}function ji(e,t,r){wi.call(this),this.type="QuadraticBezierCurve",this.v0=e||new n,this.v1=t||new n,this.v2=r||new n}function qi(e,t,r){wi.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new m,this.v1=t||new m,this.v2=r||new m}function Xi(e){wi.call(this),this.type="SplineCurve",this.points=e||[]}function Yi(){wi.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Zi(e){Yi.call(this),this.type="Path",this.currentPoint=new n,e&&this.setFromPoints(e)}function Ji(e){Zi.call(this,e),this.uuid=Pd.generateUUID(),this.type="Shape",this.holes=[]}function Qi(e,t){f.call(this),this.type="Light",this.color=new M(e),this.intensity=void 0===t?1:t,this.receiveShadow=void 0}function Ki(e,t,r){Qi.call(this,e,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(f.DefaultUp),this.updateMatrix(),this.groundColor=new M(t)}function $i(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new n(512,512),this.map=null,this.mapPass=null,this.matrix=new c,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new te,this._frameExtents=new n(1,1),this._viewportCount=1,this._viewports=[new s(0,0,1,1)]}function en(){$i.call(this,new Q(50,1,.5,500))}function tn(e,t,r,a,i,n){Qi.call(this,e,t),this.type="SpotLight",this.position.copy(f.DefaultUp),this.updateMatrix(),this.target=new f,Object.defineProperty(this,"power",{get:function(){return this.intensity*Co},set:function(e){this.intensity=e/Co}}),this.distance=void 0===r?0:r,this.angle=void 0===a?Co/3:a,this.penumbra=void 0===i?0:i,this.decay=void 0===n?1:n,this.shadow=new en}function rn(){$i.call(this,new Q(90,1,.5,500)),this._frameExtents=new n(4,2),this._viewportCount=6,this._viewports=[new s(2,1,1,1),new s(0,1,1,1),new s(3,1,1,1),new s(1,1,1,1),new s(3,0,1,1),new s(1,0,1,1)],this._cubeDirections=[new m(1,0,0),new m(-1,0,0),new m(0,0,1),new m(0,0,-1),new m(0,1,0),new m(0,-1,0)],this._cubeUps=[new m(0,1,0),new m(0,1,0),new m(0,1,0),new m(0,1,0),new m(0,0,1),new m(0,0,-1)]}function an(e,t,r,a){Qi.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Co},set:function(e){this.intensity=e/(4*Co)}}),this.distance=void 0===r?0:r,this.decay=void 0===a?1:a,this.shadow=new rn}function nn(e,t,r,a,i,n){J.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0===e?-1:e,this.right=void 0===t?1:t,this.top=void 0===r?1:r,this.bottom=void 0===a?-1:a,this.near=void 0===i?.1:i,this.far=void 0===n?2e3:n,this.updateProjectionMatrix()}function on(){$i.call(this,new nn(-5,5,5,-5,.5,500))}function sn(e,t){Qi.call(this,e,t),this.type="DirectionalLight",this.position.copy(f.DefaultUp),this.updateMatrix(),this.target=new f,this.shadow=new on}function ln(e,t){Qi.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function dn(e,t,r,a){Qi.call(this,e,t),this.type="RectAreaLight",this.width=void 0===r?10:r,this.height=void 0===a?10:a}function pn(){this.coefficients=[];for(let e=0;9>e;e++)this.coefficients.push(new m)}function cn(e,t){Qi.call(this,void 0,t),this.type="LightProbe",this.sh=void 0===e?new pn:e}function un(e){vi.call(this,e),this.textures={}}function mn(){V.call(this),this.type="InstancedBufferGeometry",this.instanceCount=Infinity}function gn(e,t,r,a){"number"==typeof r&&(a=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),P.call(this,e,t,r),this.meshPerAttribute=a||1}function fn(e){vi.call(this,e)}function hn(e){vi.call(this,e)}function yn(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),vi.call(this,e),this.options={premultiplyAlpha:"none"}}function vn(){this.type="ShapePath",this.color=new M,this.subPaths=[],this.currentPath=null}function xn(e){this.type="Font",this.data=e}function _n(e,t,r){const a=Array.from?Array.from(e):(e+"").split(""),i=t/r.resolution,n=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,o=[];let s=0,l=0;for(let d=0;d<a.length;d++){const e=a[d];if("\n"===e)s=0,l-=n;else{const t=bn(e,i,s,l,r);s+=t.offsetX,o.push(t.path)}}return o}function bn(e,t,r,a,i){const n=i.glyphs[e]||i.glyphs["?"];if(!n)return void console.error("THREE.Font: character \""+e+"\" does not exists in font family "+i.familyName+".");const o=new vn;let s,l,d,p,c,u,m,g;if(n.o){const e=n._cachedOutline||(n._cachedOutline=n.o.split(" "));for(let n=0,i=e.length;n<i;){const i=e[n++];"m"===i?(s=e[n++]*t+r,l=e[n++]*t+a,o.moveTo(s,l)):"l"===i?(s=e[n++]*t+r,l=e[n++]*t+a,o.lineTo(s,l)):"q"===i?(d=e[n++]*t+r,p=e[n++]*t+a,c=e[n++]*t+r,u=e[n++]*t+a,o.quadraticCurveTo(c,u,d,p)):"b"===i?(d=e[n++]*t+r,p=e[n++]*t+a,c=e[n++]*t+r,u=e[n++]*t+a,m=e[n++]*t+r,g=e[n++]*t+a,o.bezierCurveTo(c,u,m,g,d,p)):void 0}}return{offsetX:n.ha*t,path:o}}function Sn(e){vi.call(this,e)}function Mn(e){vi.call(this,e)}function Tn(e,t,r){cn.call(this,void 0,r);const a=new M().set(e),i=new M().set(t),n=new m(a.r,a.g,a.b),o=new m(i.r,i.g,i.b),s=bo(Math.PI);this.sh.coefficients[0].copy(n).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(n).sub(o).multiplyScalar(0.8660254037844386*s)}function En(e,t){cn.call(this,void 0,t);const r=new M().set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*bo(Math.PI))}function wn(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function Ln(){f.call(this),this.type="AudioListener",this.context=ju.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new wn}function An(e){f.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._progress=0,this.filters=[]}function Rn(e){An.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Pn(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0===t?2048:t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}function Cn(e,t,r){this.binding=e,this.valueSize=r;let a,i,n;"quaternion"===t?(a=this._slerp,i=this._slerpAdditive,n=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5):"string"===t||"bool"===t?(a=this._select,i=this._select,n=this._setAdditiveIdentityOther,this.buffer=Array(5*r)):(a=this._lerp,i=this._lerpAdditive,n=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)),this._mixBufferRegion=a,this._mixBufferRegionAdditive=i,this._setIdentity=n,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}function In(e,t,r){const a=r||Dn.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,a)}function Dn(e,t,r){this.path=t,this.parsedPath=r||Dn.parseTrackName(t),this.node=Dn.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function Nn(e,t,r,a){this._mixer=e,this._clip=t,this._localRoot=r||null,this.blendMode=a||t.blendMode;const n=t.tracks,o=n.length,s=Array(o),l={endingStart:ld,endingEnd:ld};for(let d=0;d!==o;++d){const e=n[d].createInterpolant(null);s[d]=e,e.settings=l}this._interpolantSettings=l,this._interpolants=s,this._propertyBindings=Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=id,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=Infinity,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function zn(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Bn(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}function Un(e,t,r){or.call(this,e,t),this.meshPerAttribute=r||1}function Fn(e,t,r,a){this.ray=new _(e,t),this.near=r||0,this.far=a||Infinity,this.camera=null,this.layers=new g,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Gn(e,t){return e.distance-t.distance}function On(e,t,r,a){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===a){const a=e.children;for(let e=0,i=a.length;e<i;e++)On(a[e],t,r,!0)}}function Hn(e,t){this.min=void 0===e?new n(+Infinity,+Infinity):e,this.max=void 0===t?new n(-Infinity,-Infinity):t}function Vn(e,t){this.start=void 0===e?new m:e,this.end=void 0===t?new m:t}function kn(e){f.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}function Wn(e,t){f.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const r=new V,a=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,i=1,n=32;r<n;r++,i++){const e=2*(r/n*Co),t=2*(i/n*Co);a.push(To(e),Mo(e),1,To(t),Mo(t),1)}r.setAttribute("position",new F(a,3));const i=new hr({fog:!1,toneMapped:!1});this.cone=new vr(r,i),this.add(this.cone),this.update()}function jn(e){const t=[];e&&e.isBone&&t.push(e);for(let r=0;r<e.children.length;r++)t.push.apply(t,jn(e.children[r]));return t}function qn(e){const t=jn(e),r=new V,a=[],n=[],o=new M(0,0,1),s=new M(0,1,0);for(let r=0;r<t.length;r++){const e=t[r];e.parent&&e.parent.isBone&&(a.push(0,0,0),a.push(0,0,0),n.push(o.r,o.g,o.b),n.push(s.r,s.g,s.b))}r.setAttribute("position",new F(a,3)),r.setAttribute("color",new F(n,3));const i=new hr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});vr.call(this,r,i),this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}function Xn(e,t,r){this.light=e,this.light.updateMatrixWorld(),this.color=r;const a=new Ca(t,4,2),i=new R({wireframe:!0,fog:!1,toneMapped:!1});k.call(this,a,i),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function Yn(e,t,r){f.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;const a=new zr(t);a.rotateY(.5*Co),this.material=new R({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=a.getAttribute("position"),n=new Float32Array(3*i.count);a.setAttribute("color",new P(n,3)),this.add(new k(a,this.material)),this.update()}function Zn(e,t,r,a){e=e||10,t=t||10,r=new M(void 0===r?4473924:r),a=new M(void 0===a?8947848:a);const n=t/2,o=e/t,s=e/2,l=[],d=[];for(let p=0,i=0,c=-s;p<=t;p++,c+=o){l.push(-s,0,c,s,0,c),l.push(c,0,-s,c,0,s);const e=p===n?r:a;e.toArray(d,i),i+=3,e.toArray(d,i),i+=3,e.toArray(d,i),i+=3,e.toArray(d,i),i+=3}const i=new V;i.setAttribute("position",new F(l,3)),i.setAttribute("color",new F(d,3));const p=new hr({vertexColors:!0,toneMapped:!1});vr.call(this,i,p),this.type="GridHelper"}function Jn(e,t,a,i,n,o){e=e||10,t=t||16,a=a||8,i=i||64,n=new M(void 0===n?4473924:n),o=new M(void 0===o?8947848:o);const s=[],l=[];for(let r=0;r<=t;r++){const a=r/t*(2*Co),i=Mo(a)*e,d=To(a)*e;s.push(0,0,0),s.push(i,0,d);const p=1&r?n:o;l.push(p.r,p.g,p.b),l.push(p.r,p.g,p.b)}for(let d=0;d<=a;d++){const t=1&d?n:o,p=e-e/a*d;for(let e=0;e<i;e++){let r=e/i*(2*Co),a=Mo(r)*p,n=To(r)*p;s.push(a,0,n),l.push(t.r,t.g,t.b),r=(e+1)/i*(2*Co),a=Mo(r)*p,n=To(r)*p,s.push(a,0,n),l.push(t.r,t.g,t.b)}}const r=new V;r.setAttribute("position",new F(s,3)),r.setAttribute("color",new F(l,3));const d=new hr({vertexColors:!0,toneMapped:!1});vr.call(this,r,d),this.type="PolarGridHelper"}function Qn(e,t,r){f.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let a=new V;a.setAttribute("position",new F([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const i=new hr({fog:!1,toneMapped:!1});this.lightPlane=new yr(a,i),this.add(this.lightPlane),a=new V,a.setAttribute("position",new F([0,0,0,0,0,1],3)),this.targetLine=new yr(a,i),this.add(this.targetLine),this.update()}function Kn(e){function t(e,t,a){r(e,a),r(t,a)}function r(e,t){n.push(0,0,0),o.push(t.r,t.g,t.b),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}const a=new V,i=new hr({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],o=[],s={},l=new M(16755200),d=new M(16711680),p=new M(43775),c=new M(16777215),u=new M(3355443);t("n1","n2",l),t("n2","n4",l),t("n4","n3",l),t("n3","n1",l),t("f1","f2",l),t("f2","f4",l),t("f4","f3",l),t("f3","f1",l),t("n1","f1",l),t("n2","f2",l),t("n3","f3",l),t("n4","f4",l),t("p","n1",d),t("p","n2",d),t("p","n3",d),t("p","n4",d),t("u1","u2",p),t("u2","u3",p),t("u3","u1",p),t("c","t",c),t("p","c",u),t("cn1","cn2",u),t("cn3","cn4",u),t("cf1","cf2",u),t("cf3","cf4",u),a.setAttribute("position",new F(n,3)),a.setAttribute("color",new F(o,3)),vr.call(this,a,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function $n(e,t,r,a,i,n,o){Em.set(i,n,o).unproject(a);const s=t[e];if(void 0!==s){const e=r.getAttribute("position");for(let t=0,r=s.length;t<r;t++)e.setXYZ(s[t],Em.x,Em.y,Em.z)}}function eo(e,t){this.object=e,void 0===t&&(t=16776960);const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new Float32Array(24),i=new V;i.setIndex(new P(r,1)),i.setAttribute("position",new P(a,3)),vr.call(this,i,new hr({color:t,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}function to(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new V;a.setIndex(new P(r,1)),a.setAttribute("position",new F([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),vr.call(this,a,new hr({color:t,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}function ro(e,t,r){this.plane=e,this.size=void 0===t?1:t;const a=void 0===r?16776960:r,i=new V;i.setAttribute("position",new F([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),yr.call(this,i,new hr({color:a,toneMapped:!1})),this.type="PlaneHelper";const n=new V;n.setAttribute("position",new F([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),n.computeBoundingSphere(),this.add(new k(n,new R({color:a,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}function ao(e,t,r,a,i,n){f.call(this),this.type="ArrowHelper",void 0===e&&(e=new m(0,0,1)),void 0===t&&(t=new m(0,0,0)),void 0===r&&(r=1),void 0===a&&(a=16776960),void 0===i&&(i=.2*r),void 0===n&&(n=.2*i),void 0===Rm&&(Rm=new V,Rm.setAttribute("position",new F([0,0,0,0,1,0],3)),Pm=new Ha(0,.5,1,5,1),Pm.translate(0,-.5,0)),this.position.copy(t),this.line=new yr(Rm,new hr({color:a,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new k(Pm,new R({color:a,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,n)}function io(e){e=e||1;const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],r=new V;r.setAttribute("position",new F(t,3)),r.setAttribute("color",new F([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const a=new hr({vertexColors:!0,toneMapped:!1});vr.call(this,r,a),this.type="AxesHelper"}function no(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=po(Bm),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}function oo(e){return void 0!==e&&e.type===Xs&&(e.encoding===md||e.encoding===gd||e.encoding===fd)}function so(e){const t=new l(3*Dm,3*Dm,e);return t.texture.mapping=Bs,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function lo(e,t,r,a,i){e.viewport.set(t,r,a,i),e.scissor.set(t,r,a,i)}function po(e){const t=new Float32Array(e),r=new m(0,1,0),a=new Xa({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r},inputEncoding:{value:Um[md]},outputEncoding:{value:Um[md]}},vertexShader:mo(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${go()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

vec3 getSample(float theta, vec3 axis) {
	float cosTheta = cos(theta);
	// Rodrigues' axis-angle rotation
	vec3 sampleDirection = vOutputDirection * cosTheta
		+ cross(axis, vOutputDirection) * sin(theta)
		+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
	return bilinearCubeUV(envMap, sampleDirection, mipInt);
}

void main() {
	vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
	if (all(equal(axis, vec3(0.0))))
		axis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);
	axis = normalize(axis);
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb += weights[0] * getSample(0.0, axis);
	for (int i = 1; i < n; i++) {
		if (i >= samples)
			break;
		float theta = dTheta * float(i);
		gl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);
		gl_FragColor.rgb += weights[i] * getSample(theta, axis);
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:qo,depthTest:!1,depthWrite:!1});return a}function co(){const e=new n(1,1),t=new Xa({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Um[md]},outputEncoding:{value:Um[md]}},vertexShader:mo(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${go()}

#include <common>

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv = equirectUv( outputDirection );
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:qo,depthTest:!1,depthWrite:!1});return t}function uo(){const e=new Xa({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Um[md]},outputEncoding:{value:Um[md]}},vertexShader:mo(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${go()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:qo,depthTest:!1,depthWrite:!1});return e}function mo(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;

// RH coordinate system; PMREM face-indexing convention
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx; // ( 1, v, u ) pos x
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.xz *= -1.0; // ( -u, 1, -v ) pos y
	} else if (face == 2.0) {
		direction.x *= -1.0; // ( -u, v, 1 ) pos z
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.xz *= -1.0; // ( -1, v, -u ) neg x
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.xy *= -1.0; // ( -u, -1, v ) neg y
	} else if (face == 5.0) {
		direction.z *= -1.0; // ( u, v, -1 ) neg z
	}
	return direction;
}

void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`}function go(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`}function fo(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Pi.call(this,e),this.type="catmullrom"}var ho=Math.tan,yo=Math.atan,vo=Math.acos,xo=Math.atan2,_o=Math.abs,bo=Math.sqrt,So=Math.round,Mo=Math.sin,To=Math.cos,Eo=Math.pow,wo=Math.ceil,Lo=Math.LN2,Ao=Math.log,Ro=Math.max,Po=Math.min,Co=Math.PI,Io=Math.sign,Do=Math.floor,No=Number.isInteger,zo=Number.EPSILON;r.d(t,"a",function(){return Q}),r.d(t,"b",function(){return h}),r.d(t,"c",function(){return rr}),void 0===zo&&(zo=2.220446049250313e-16),void 0===No&&(No=function(e){return"number"==typeof e&&isFinite(e)&&Do(e)===e}),void 0===Io&&(Io=function(e){return 0>e?-1:0<e?1:+e}),!1=="name"in Function.prototype&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){if(void 0===e||null===e)throw new TypeError("Cannot convert undefined or null to object");const t=Object(e);for(let r=1;r<arguments.length;r++){const e=arguments[r];if(void 0!==e&&null!==e)for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t});const Bo=0,Uo=1,Fo=2,Go=1,Oo=2,Ho=3,Vo=0,ko=1,Wo=2,jo=1,qo=0,Xo=1,Yo=2,Zo=3,Jo=4,Qo=5,Ko=100,$o=101,es=102,ts=103,rs=104,as=200,is=201,ns=202,os=203,ss=204,ls=205,ds=206,ps=207,cs=208,us=209,ms=210,gs=0,fs=1,hs=2,ys=3,vs=4,xs=5,_s=6,bs=7,Ss=0,Ms=1,Ts=2,Es=0,ws=1,Ls=2,As=3,Rs=4,Ps=5,Cs=300,Is=301,Ds=302,Ns=303,zs=304,Bs=306,Us=307,Fs=1e3,Gs=1001,Os=1002,Hs=1003,Vs=1004,ks=1005,Ws=1006,js=1007,qs=1008,Xs=1009,Ys=1010,Zs=1011,Js=1012,Qs=1013,Ks=1014,$s=1015,el=1016,tl=1017,rl=1018,al=1019,il=1020,nl=1021,ol=1022,sl=1023,ll=1024,dl=1025,pl=1026,cl=1027,ul=1028,ml=1029,gl=1030,fl=1031,hl=1032,yl=1033,vl=33776,xl=33777,_l=33778,bl=33779,Sl=35840,Ml=35841,Tl=35842,El=35843,wl=36196,Ll=37492,Al=37496,Rl=37808,Pl=37809,Cl=37810,Il=37811,Dl=37812,Nl=37813,zl=37814,Bl=37815,Ul=37816,Fl=37817,Gl=37818,Ol=37819,Hl=37820,Vl=37821,kl=36492,Wl=37840,jl=37841,ql=37842,Xl=37843,Yl=37844,Zl=37845,Jl=37846,Ql=37847,Kl=37848,$l=37849,ed=37850,td=37851,rd=37852,ad=37853,id=2201,nd=2300,od=2301,sd=2302,ld=2400,dd=2401,pd=2402,cd=2500,ud=2501,md=3e3,gd=3001,fd=3007,hd=3002,yd=3003,vd=3004,xd=3005,_d=3006,bd=3200,Sd=3201,Md=0,Td=1,Ed=7680,wd=519,Ld=35044,Ad=35048;Object.assign(a.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){const r=this._listeners,a=r[e];if(void 0!==a){const e=a.indexOf(t);-1!==e&&a.splice(e,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){const t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;const t=r.slice(0);for(let r=0,a=t.length;r<a;r++)t[r].call(this,e)}}}});const Rd=[];for(let a=0;256>a;a++)Rd[a]=(16>a?"0":"")+a.toString(16);const Pd={DEG2RAD:Co/180,RAD2DEG:180/Co,generateUUID:function(){const e=0|4294967295*Math.random(),t=0|4294967295*Math.random(),r=0|4294967295*Math.random(),a=0|4294967295*Math.random(),i=Rd[255&e]+Rd[255&e>>8]+Rd[255&e>>16]+Rd[255&e>>24]+"-"+Rd[255&t]+Rd[255&t>>8]+"-"+Rd[64|15&t>>16]+Rd[255&t>>24]+"-"+Rd[128|63&r]+Rd[255&r>>8]+"-"+Rd[255&r>>16]+Rd[255&r>>24]+Rd[255&a]+Rd[255&a>>8]+Rd[255&a>>16]+Rd[255&a>>24];return i.toUpperCase()},clamp:function(e,t,r){return Ro(t,Po(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,a,i){return a+(e-t)*(i-a)/(r-t)},lerp:function(e,r,a){return(1-a)*e+a*r},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},randInt:function(e,t){return e+Do(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Pd.DEG2RAD},radToDeg:function(e){return e*Pd.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Eo(2,wo(Ao(e)/Lo))},floorPowerOfTwo:function(e){return Eo(2,Do(Ao(e)/Lo))},setQuaternionFromProperEuler:function(e,t,r,a,i){const n=To,o=Mo,s=n(r/2),l=o(r/2),d=n((t+a)/2),p=o((t+a)/2),c=n((t-a)/2),u=o((t-a)/2),m=n((a-t)/2),g=o((a-t)/2);"XYX"===i?e.set(s*p,l*c,l*u,s*d):"YZY"===i?e.set(l*u,s*p,l*c,s*d):"ZXZ"===i?e.set(l*c,l*u,s*p,s*d):"XZX"===i?e.set(s*p,l*g,l*m,s*d):"YXY"===i?e.set(l*m,s*p,l*g,s*d):"ZYZ"===i?e.set(l*g,l*m,s*p,s*d):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}};Object.defineProperties(n.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(n.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(t){const r=this.x,a=this.y,i=t.elements;return this.x=i[0]*r+i[3]*a+i[6],this.y=i[1]*r+i[4]*a+i[7],this},min:function(e){return this.x=Po(this.x,e.x),this.y=Po(this.y,e.y),this},max:function(e){return this.x=Ro(this.x,e.x),this.y=Ro(this.y,e.y),this},clamp:function(e,t){return this.x=Ro(e.x,Po(t.x,this.x)),this.y=Ro(e.y,Po(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Ro(e,Po(t,this.x)),this.y=Ro(e,Po(t,this.y)),this},clampLength:function(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Ro(e,Po(t,r)))},floor:function(){return this.x=Do(this.x),this.y=Do(this.y),this},ceil:function(){return this.x=wo(this.x),this.y=wo(this.y),this},round:function(){return this.x=So(this.x),this.y=So(this.y),this},roundToZero:function(){return this.x=0>this.x?wo(this.x):Do(this.x),this.y=0>this.y?wo(this.y):Do(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return bo(this.x*this.x+this.y*this.y)},manhattanLength:function(){return _o(this.x)+_o(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){const e=xo(-this.y,-this.x)+Co;return e},distanceTo:function(e){return bo(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r},manhattanDistanceTo:function(e){return _o(this.x-e.x)+_o(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){const r=To(t),a=Mo(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*a+e.x,this.y=i*a+n*r+e.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}}),Object.assign(i.prototype,{isMatrix3:!0,set:function(e,t,r,a,i,n,o,s,l){const d=this.elements;return d[0]=e,d[1]=a,d[2]=o,d[3]=t,d[4]=i,d[5]=s,d[6]=r,d[7]=n,d[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this},extractBasis:function(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[3],s=r[6],l=r[1],d=r[4],p=r[7],c=r[2],u=r[5],m=r[8],g=a[0],f=a[3],h=a[6],y=a[1],v=a[4],x=a[7],_=a[2],b=a[5],S=a[8];return i[0]=n*g+o*y+s*_,i[3]=n*f+o*v+s*b,i[6]=n*h+o*x+s*S,i[1]=l*g+d*y+p*_,i[4]=l*f+d*v+p*b,i[7]=l*h+d*x+p*S,i[2]=c*g+u*y+m*_,i[5]=c*f+u*v+m*b,i[8]=c*h+u*x+m*S,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){const t=this.elements,r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],e=t[5],l=t[6],d=t[7],p=t[8];return r*s*p-r*e*d-a*o*p+a*e*l+n*o*d-n*s*l},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const r=e.elements,a=this.elements,i=r[0],n=r[1],o=r[2],s=r[3],l=r[4],d=r[5],p=r[6],c=r[7],u=r[8],m=u*l-d*c,g=d*p-u*s,f=c*s-l*p,h=i*m+n*g+o*f;if(0==h)return this.set(0,0,0,0,0,0,0,0,0);const y=1/h;return a[0]=m*y,a[1]=(o*c-u*n)*y,a[2]=(d*n-o*l)*y,a[3]=g*y,a[4]=(u*i-o*p)*y,a[5]=(o*s-d*i)*y,a[6]=f*y,a[7]=(n*p-c*i)*y,a[8]=(l*i-n*s)*y,this},transpose:function(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,r,a,i,n,o){const l=To(i),d=Mo(i);this.set(r*l,r*d,-r*(l*n+d*o)+n+e,-a*d,a*l,-a*(-d*n+l*o)+o+t,0,0,1)},scale:function(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this},rotate:function(e){const t=To(e),r=Mo(e),a=this.elements,i=a[0],n=a[3],o=a[6],l=a[1],d=a[4],p=a[7];return a[0]=t*i+r*l,a[3]=t*n+r*d,a[6]=t*o+r*p,a[1]=-r*i+t*l,a[4]=-r*n+t*d,a[7]=-r*o+t*p,this},translate:function(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this},equals:function(e){const t=this.elements,r=e.elements;for(let a=0;9>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(let r=0;9>r;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}});let Cd;const Id={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Cd&&(Cd=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Cd.width=e.width,Cd.height=e.height;const r=Cd.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=Cd}return 2048<t.width||2048<t.height?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let Dd=0;o.DEFAULT_IMAGE=void 0,o.DEFAULT_MAPPING=Cs,o.prototype=Object.assign(Object.create(a.prototype),{constructor:o,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const a=this.image;if(void 0===a.uuid&&(a.uuid=Pd.generateUUID()),!t&&void 0===e.images[a.uuid]){let t;if(Array.isArray(a)){t=[];for(let e=0,r=a.length;e<r;e++)t.push(Id.getDataURL(a[e]))}else t=Id.getDataURL(a);e.images[a.uuid]={uuid:a.uuid,url:t}}r.image=a.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==Cs)return e;if(e.applyMatrix3(this.matrix),0>e.x||1<e.x)switch(this.wrapS){case Fs:e.x-=Do(e.x);break;case Gs:e.x=0>e.x?0:1;break;case Os:1===_o(Do(e.x)%2)?e.x=wo(e.x)-e.x:e.x-=Do(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case Fs:e.y-=Do(e.y);break;case Gs:e.y=0>e.y?0:1;break;case Os:1===_o(Do(e.y)%2)?e.y=wo(e.y)-e.y:e.y-=Do(e.y);}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(o.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.defineProperties(s.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(s.prototype,{isVector4:!0,set:function(e,t,r,a){return this.x=e,this.y=t,this.z=r,this.w=a,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(t){const r=this.x,a=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*r+o[4]*a+o[8]*i+o[12]*n,this.y=o[1]*r+o[5]*a+o[9]*i+o[13]*n,this.z=o[2]*r+o[6]*a+o[10]*i+o[14]*n,this.w=o[3]*r+o[7]*a+o[11]*i+o[15]*n,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*vo(e.w);const t=bo(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){let t,r,a,i;const n=.01,o=.1,l=e.elements,d=l[0],p=l[4],c=l[8],u=l[1],m=l[5],g=l[9],f=l[2],h=l[6],y=l[10];if(_o(p-u)<n&&_o(c-f)<n&&_o(g-h)<n){if(_o(p+u)<o&&_o(c+f)<o&&_o(g+h)<o&&_o(d+m+y-3)<o)return this.set(1,0,0,0),this;t=Co;const e=(d+1)/2,s=(m+1)/2,l=(y+1)/2,v=(p+u)/4,x=(c+f)/4,_=(g+h)/4;return e>s&&e>l?e<n?(r=0,a=.707106781,i=.707106781):(r=bo(e),a=v/r,i=x/r):s>l?s<n?(r=.707106781,a=0,i=.707106781):(a=bo(s),r=v/a,i=_/a):l<n?(r=.707106781,a=.707106781,i=0):(i=bo(l),r=x/i,a=_/i),this.set(r,a,i,t),this}let v=bo((h-g)*(h-g)+(c-f)*(c-f)+(u-p)*(u-p));return .001>_o(v)&&(v=1),this.x=(h-g)/v,this.y=(c-f)/v,this.z=(u-p)/v,this.w=vo((d+m+y-1)/2),this},min:function(e){return this.x=Po(this.x,e.x),this.y=Po(this.y,e.y),this.z=Po(this.z,e.z),this.w=Po(this.w,e.w),this},max:function(e){return this.x=Ro(this.x,e.x),this.y=Ro(this.y,e.y),this.z=Ro(this.z,e.z),this.w=Ro(this.w,e.w),this},clamp:function(e,t){return this.x=Ro(e.x,Po(t.x,this.x)),this.y=Ro(e.y,Po(t.y,this.y)),this.z=Ro(e.z,Po(t.z,this.z)),this.w=Ro(e.w,Po(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Ro(e,Po(t,this.x)),this.y=Ro(e,Po(t,this.y)),this.z=Ro(e,Po(t,this.z)),this.w=Ro(e,Po(t,this.w)),this},clampLength:function(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Ro(e,Po(t,r)))},floor:function(){return this.x=Do(this.x),this.y=Do(this.y),this.z=Do(this.z),this.w=Do(this.w),this},ceil:function(){return this.x=wo(this.x),this.y=wo(this.y),this.z=wo(this.z),this.w=wo(this.w),this},round:function(){return this.x=So(this.x),this.y=So(this.y),this.z=So(this.z),this.w=So(this.w),this},roundToZero:function(){return this.x=0>this.x?wo(this.x):Do(this.x),this.y=0>this.y?wo(this.y):Do(this.y),this.z=0>this.z?wo(this.z):Do(this.z),this.w=0>this.w?wo(this.w):Do(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return bo(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return _o(this.x)+_o(this.y)+_o(this.z)+_o(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}),l.prototype=Object.assign(Object.create(a.prototype),{constructor:l,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),d.prototype=Object.assign(Object.create(l.prototype),{constructor:d,isWebGLMultisampleRenderTarget:!0,copy:function(e){return l.prototype.copy.call(this,e),this.samples=e.samples,this}}),Object.assign(p,{slerp:function(e,r,a,i){return a.copy(e).slerp(r,i)},slerpFlat:function(e,r,a,i,n,o,l){let t=a[i+0],d=a[i+1],p=a[i+2],c=a[i+3];const u=n[o+0],m=n[o+1],g=n[o+2],f=n[o+3];if(c!==f||t!==u||d!==m||p!==g){let e=1-l,r=t*u+d*m+p*g+c*f,a=0<=r?1:-1,i=1-r*r;if(i>zo){const t=bo(i),n=xo(t,r*a);e=Mo(e*n)/t,l=Mo(l*n)/t}const n=l*a;if(t=t*e+u*n,d=d*e+m*n,p=p*e+g*n,c=c*e+f*n,e==1-l){const e=1/bo(t*t+d*d+p*p+c*c);t*=e,d*=e,p*=e,c*=e}}e[r]=t,e[r+1]=d,e[r+2]=p,e[r+3]=c},multiplyQuaternionsFlat:function(e,t,r,a,i,n){const o=r[a],s=r[a+1],l=r[a+2],d=r[a+3],p=i[n],c=i[n+1],u=i[n+2],m=i[n+3];return e[t]=o*m+d*p+s*u-l*c,e[t+1]=s*m+d*c+l*p-o*u,e[t+2]=l*m+d*u+o*c-s*p,e[t+3]=d*m-o*p-s*c-l*u,e}}),Object.defineProperties(p.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(p.prototype,{isQuaternion:!0,set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._w=a,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const r=e._x,a=e._y,i=e._z,n=e.order,o=To,s=Mo,l=o(r/2),d=o(a/2),p=o(i/2),c=s(r/2),u=s(a/2),m=s(i/2);return"XYZ"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p-c*u*m):"YXZ"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p+c*u*m):"ZXY"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p-c*u*m):"ZYX"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p+c*u*m):"YZX"===n?(this._x=c*d*p+l*u*m,this._y=l*u*p+c*d*m,this._z=l*d*m-c*u*p,this._w=l*d*p-c*u*m):"XZY"===n?(this._x=c*d*p-l*u*m,this._y=l*u*p-c*d*m,this._z=l*d*m+c*u*p,this._w=l*d*p+c*u*m):console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n),!1!==t&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){const r=t/2,a=Mo(r);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=To(r),this._onChangeCallback(),this},setFromRotationMatrix:function(e){const t=e.elements,r=t[0],a=t[4],i=t[8],n=t[1],o=t[5],l=t[9],d=t[2],p=t[6],c=t[10],u=r+o+c;if(0<u){const e=.5/bo(u+1);this._w=.25/e,this._x=(p-l)*e,this._y=(i-d)*e,this._z=(n-a)*e}else if(r>o&&r>c){const e=2*bo(1+r-o-c);this._w=(p-l)/e,this._x=.25*e,this._y=(a+n)/e,this._z=(i+d)/e}else if(o>c){const e=2*bo(1+o-r-c);this._w=(i-d)/e,this._x=(a+n)/e,this._y=.25*e,this._z=(l+p)/e}else{const e=2*bo(1+c-r-o);this._w=(n-a)/e,this._x=(i+d)/e,this._y=(l+p)/e,this._z=.25*e}return this._onChangeCallback(),this},setFromUnitVectors:function(e,t){let a=e.dot(t)+1;return a<1e-6?(a=0,_o(e.x)>_o(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=a),this.normalize()},angleTo:function(e){return 2*vo(_o(Pd.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,r){const a=this.angleTo(e);if(0===a)return this;const i=Po(1,r/a);return this.slerp(e,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return bo(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this._onChangeCallback(),this},multiply:function(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t))},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){const r=e._x,a=e._y,i=e._z,n=e._w,o=t._x,s=t._y,l=t._z,d=t._w;return this._x=r*d+n*o+a*l-i*s,this._y=a*d+n*s+i*o-r*l,this._z=i*d+n*l+r*s-a*o,this._w=n*d-r*o-a*s-i*l,this._onChangeCallback(),this},slerp:function(e,r){if(0===r)return this;if(1===r)return this.copy(e);const t=this._x,a=this._y,i=this._z,n=this._w;let o=n*e._w+t*e._x+a*e._y+i*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),1<=o)return this._w=n,this._x=t,this._y=a,this._z=i,this;const s=1-o*o;if(s<=zo){const e=1-r;return this._w=e*n+r*this._w,this._x=e*t+r*this._x,this._y=e*a+r*this._y,this._z=e*i+r*this._z,this.normalize(),this._onChangeCallback(),this}const l=bo(s),d=xo(l,o),p=Mo((1-r)*d)/l,c=Mo(r*d)/l;return this._w=n*p+this._w*c,this._x=t*p+this._x*c,this._y=a*p+this._y*c,this._z=i*p+this._z*c,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});const Nd=new m,zd=new p;Object.assign(m.prototype,{isVector3:!0,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(zd.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(zd.setFromAxisAngle(e,t))},applyMatrix3:function(t){const r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[3]*a+n[6]*i,this.y=n[1]*r+n[4]*a+n[7]*i,this.z=n[2]*r+n[5]*a+n[8]*i,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(t){const r=this.x,a=this.y,i=this.z,n=t.elements,e=1/(n[3]*r+n[7]*a+n[11]*i+n[15]);return this.x=(n[0]*r+n[4]*a+n[8]*i+n[12])*e,this.y=(n[1]*r+n[5]*a+n[9]*i+n[13])*e,this.z=(n[2]*r+n[6]*a+n[10]*i+n[14])*e,this},applyQuaternion:function(e){const t=this.x,r=this.y,a=this.z,i=e.x,n=e.y,o=e.z,s=e.w,l=s*t+n*a-o*r,d=s*r+o*t-i*a,p=s*a+i*r-n*t,c=-i*t-n*r-o*a;return this.x=l*s+c*-i+d*-o-p*-n,this.y=d*s+c*-n+p*-i-l*-o,this.z=p*s+c*-o+l*-n-d*-i,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(t){const r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[4]*a+n[8]*i,this.y=n[1]*r+n[5]*a+n[9]*i,this.z=n[2]*r+n[6]*a+n[10]*i,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Po(this.x,e.x),this.y=Po(this.y,e.y),this.z=Po(this.z,e.z),this},max:function(e){return this.x=Ro(this.x,e.x),this.y=Ro(this.y,e.y),this.z=Ro(this.z,e.z),this},clamp:function(e,t){return this.x=Ro(e.x,Po(t.x,this.x)),this.y=Ro(e.y,Po(t.y,this.y)),this.z=Ro(e.z,Po(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Ro(e,Po(t,this.x)),this.y=Ro(e,Po(t,this.y)),this.z=Ro(e,Po(t,this.z)),this},clampLength:function(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Ro(e,Po(t,r)))},floor:function(){return this.x=Do(this.x),this.y=Do(this.y),this.z=Do(this.z),this},ceil:function(){return this.x=wo(this.x),this.y=wo(this.y),this.z=wo(this.z),this},round:function(){return this.x=So(this.x),this.y=So(this.y),this.z=So(this.z),this},roundToZero:function(){return this.x=0>this.x?wo(this.x):Do(this.x),this.y=0>this.y?wo(this.y):Do(this.y),this.z=0>this.z?wo(this.z):Do(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return bo(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return _o(this.x)+_o(this.y)+_o(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this},cross:function(e,t){return void 0===t?this.crossVectors(this,e):(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t))},crossVectors:function(e,t){const r=e.x,a=e.y,i=e.z,n=t.x,o=t.y,s=t.z;return this.x=a*s-i*o,this.y=i*n-r*s,this.z=r*o-a*n,this},projectOnVector:function(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)},projectOnPlane:function(e){return Nd.copy(this).projectOnVector(e),this.sub(Nd)},reflect:function(e){return this.sub(Nd.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){const t=bo(this.lengthSq()*e.lengthSq());if(0===t)return Co/2;const r=this.dot(e)/t;return vo(Pd.clamp(r,-1,1))},distanceTo:function(e){return bo(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,r=this.y-e.y,a=this.z-e.z;return t*t+r*r+a*a},manhattanDistanceTo:function(e){return _o(this.x-e.x)+_o(this.y-e.y)+_o(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,r){const a=Mo(t)*e;return this.x=a*Mo(r),this.y=To(t)*e,this.z=a*To(r),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,r){return this.x=e*Mo(t),this.y=r,this.z=e*To(t),this},setFromMatrixPosition:function(t){const r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this},setFromMatrixScale:function(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=a,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,3*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const Bd=new m,Ud=new c,Fd=new m(0,0,0),Gd=new m(1,1,1),Od=new m,Hd=new m,Vd=new m;Object.assign(c.prototype,{isMatrix4:!0,set:function(e,t,r,a,i,n,o,s,l,d,p,c,u,m,g,f){const h=this.elements;return h[0]=e,h[4]=t,h[8]=r,h[12]=a,h[1]=i,h[5]=n,h[9]=o,h[13]=s,h[2]=l,h[6]=d,h[10]=p,h[14]=c,h[3]=u,h[7]=m,h[11]=g,h[15]=f,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new c().fromArray(this.elements)},copy:function(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this},copyPosition:function(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(e){const t=this.elements,r=e.elements,a=1/Bd.setFromMatrixColumn(e,0).length(),i=1/Bd.setFromMatrixColumn(e,1).length(),n=1/Bd.setFromMatrixColumn(e,2).length();return t[0]=r[0]*a,t[1]=r[1]*a,t[2]=r[2]*a,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const r=this.elements,i=t.x,n=t.y,o=t.z,s=To(i),l=Mo(i),p=To(n),u=Mo(n),m=To(o),e=Mo(o);if("XYZ"===t.order){const t=s*m,a=s*e,i=l*m,n=l*e;r[0]=p*m,r[4]=-p*e,r[8]=u,r[1]=a+i*u,r[5]=t-n*u,r[9]=-l*p,r[2]=n-t*u,r[6]=i+a*u,r[10]=s*p}else if("YXZ"===t.order){const t=p*m,a=p*e,i=u*m,n=u*e;r[0]=t+n*l,r[4]=i*l-a,r[8]=s*u,r[1]=s*e,r[5]=s*m,r[9]=-l,r[2]=a*l-i,r[6]=n+t*l,r[10]=s*p}else if("ZXY"===t.order){const t=p*m,i=p*e,n=u*m,o=u*e;r[0]=t-o*l,r[4]=-s*e,r[8]=n+i*l,r[1]=i+n*l,r[5]=s*m,r[9]=o-t*l,r[2]=-s*u,r[6]=l,r[10]=s*p}else if("ZYX"===t.order){const t=s*m,a=s*e,i=l*m,n=l*e;r[0]=p*m,r[4]=i*u-a,r[8]=t*u+n,r[1]=p*e,r[5]=n*u+t,r[9]=a*u-i,r[2]=-u,r[6]=l*p,r[10]=s*p}else if("YZX"===t.order){const t=s*p,a=s*u,i=l*p,n=l*u;r[0]=p*m,r[4]=n-t*e,r[8]=i*e+a,r[1]=e,r[5]=s*m,r[9]=-l*m,r[2]=-u*m,r[6]=a*e+i,r[10]=t-n*e}else if("XZY"===t.order){const t=s*p,a=s*u,i=l*p,n=l*u;r[0]=p*m,r[4]=-e,r[8]=u*m,r[1]=t*e+n,r[5]=s*m,r[9]=a*e-i,r[2]=i*e-a,r[6]=l*m,r[10]=n*e+t}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(Fd,e,Gd)},lookAt:function(e,t,r){const a=this.elements;return Vd.subVectors(e,t),0===Vd.lengthSq()&&(Vd.z=1),Vd.normalize(),Od.crossVectors(r,Vd),0===Od.lengthSq()&&(1===_o(r.z)?Vd.x+=1e-4:Vd.z+=1e-4,Vd.normalize(),Od.crossVectors(r,Vd)),Od.normalize(),Hd.crossVectors(Vd,Od),a[0]=Od.x,a[4]=Hd.x,a[8]=Vd.x,a[1]=Od.y,a[5]=Hd.y,a[9]=Vd.y,a[2]=Od.z,a[6]=Hd.z,a[10]=Vd.z,this},multiply:function(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t))},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[4],s=r[8],l=r[12],d=r[1],p=r[5],c=r[9],u=r[13],m=r[2],g=r[6],f=r[10],h=r[14],y=r[3],v=r[7],x=r[11],_=r[15],b=a[0],S=a[4],M=a[8],T=a[12],E=a[1],w=a[5],L=a[9],A=a[13],R=a[2],P=a[6],C=a[10],I=a[14],D=a[3],N=a[7],z=a[11],B=a[15];return i[0]=n*b+o*E+s*R+l*D,i[4]=n*S+o*w+s*P+l*N,i[8]=n*M+o*L+s*C+l*z,i[12]=n*T+o*A+s*I+l*B,i[1]=d*b+p*E+c*R+u*D,i[5]=d*S+p*w+c*P+u*N,i[9]=d*M+p*L+c*C+u*z,i[13]=d*T+p*A+c*I+u*B,i[2]=m*b+g*E+f*R+h*D,i[6]=m*S+g*w+f*P+h*N,i[10]=m*M+g*L+f*C+h*z,i[14]=m*T+g*A+f*I+h*B,i[3]=y*b+v*E+x*R+_*D,i[7]=y*S+v*w+x*P+_*N,i[11]=y*M+v*L+x*C+_*z,i[15]=y*T+v*A+x*I+_*B,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){const e=this.elements,t=e[0],r=e[4],a=e[8],i=e[12],n=e[1],o=e[5],s=e[9],l=e[13],d=e[2],p=e[6],c=e[10],u=e[14],m=e[3],g=e[7],f=e[11],h=e[15];return m*(+i*s*p-a*l*p-i*o*c+r*l*c+a*o*u-r*s*u)+g*(+t*s*u-t*l*c+i*n*c-a*n*u+a*l*d-i*s*d)+f*(+t*l*p-t*o*u-i*n*p+r*n*u+i*o*d-r*l*d)+h*(-a*o*d-t*s*p+t*o*c+a*n*p-r*n*c+r*s*d)},transpose:function(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,r){const a=this.elements;return e.isVector3?(a[12]=e.x,a[13]=e.y,a[14]=e.z):(a[12]=e,a[13]=t,a[14]=r),this},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const r=this.elements,a=e.elements,i=a[0],n=a[1],o=a[2],s=a[3],l=a[4],d=a[5],p=a[6],c=a[7],u=a[8],m=a[9],g=a[10],f=a[11],h=a[12],y=a[13],v=a[14],x=a[15],_=m*v*c-y*g*c+y*p*f-d*v*f-m*p*x+d*g*x,b=h*g*c-u*v*c-h*p*f+l*v*f+u*p*x-l*g*x,S=u*y*c-h*m*c+h*d*f-l*y*f-u*d*x+l*m*x,M=h*m*p-u*y*p-h*d*g+l*y*g+u*d*v-l*m*v,T=i*_+n*b+o*S+s*M;if(0==T)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/T;return r[0]=_*E,r[1]=(y*g*s-m*v*s-y*o*f+n*v*f+m*o*x-n*g*x)*E,r[2]=(d*v*s-y*p*s+y*o*c-n*v*c-d*o*x+n*p*x)*E,r[3]=(m*p*s-d*g*s-m*o*c+n*g*c+d*o*f-n*p*f)*E,r[4]=b*E,r[5]=(u*v*s-h*g*s+h*o*f-i*v*f-u*o*x+i*g*x)*E,r[6]=(h*p*s-l*v*s-h*o*c+i*v*c+l*o*x-i*p*x)*E,r[7]=(l*g*s-u*p*s+u*o*c-i*g*c-l*o*f+i*p*f)*E,r[8]=S*E,r[9]=(h*m*s-u*y*s-h*n*f+i*y*f+u*n*x-i*m*x)*E,r[10]=(l*y*s-h*d*s+h*n*c-i*y*c-l*n*x+i*d*x)*E,r[11]=(u*d*s-l*m*s-u*n*c+i*m*c+l*n*f-i*d*f)*E,r[12]=M*E,r[13]=(u*y*o-h*m*o+h*n*g-i*y*g-u*n*v+i*m*v)*E,r[14]=(h*d*o-l*y*o-h*n*p+i*y*p+l*n*v-i*d*v)*E,r[15]=(l*m*o-u*d*o+u*n*p-i*m*p-l*n*g+i*d*g)*E,this},scale:function(e){const t=this.elements,r=e.x,a=e.y,i=e.z;return t[0]*=r,t[4]*=a,t[8]*=i,t[1]*=r,t[5]*=a,t[9]*=i,t[2]*=r,t[6]*=a,t[10]*=i,t[3]*=r,t[7]*=a,t[11]*=i,this},getMaxScaleOnAxis:function(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return bo(Ro(t,r,a))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){const t=To(e),r=Mo(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){const t=To(e),r=Mo(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){const t=To(e),r=Mo(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,r){const a=To(r),i=Mo(r),n=1-a,t=e.x,o=e.y,s=e.z,l=n*t,d=n*o;return this.set(l*t+a,l*o-i*s,l*s+i*o,0,l*o+i*s,d*o+a,d*s-i*t,0,l*s-i*o,d*s+i*t,n*s*s+a,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,r){const a=this.elements,i=t._x,n=t._y,o=t._z,s=t._w,l=i+i,d=n+n,p=o+o,c=i*l,u=i*d,m=i*p,g=n*d,f=n*p,h=o*p,y=s*l,v=s*d,x=s*p,_=r.x,b=r.y,S=r.z;return a[0]=(1-(g+h))*_,a[1]=(u+x)*_,a[2]=(m-v)*_,a[3]=0,a[4]=(u-x)*b,a[5]=(1-(c+h))*b,a[6]=(f+y)*b,a[7]=0,a[8]=(m+v)*S,a[9]=(f-y)*S,a[10]=(1-(c+g))*S,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this},decompose:function(e,t,r){const a=this.elements;let i=Bd.set(a[0],a[1],a[2]).length(),n=Bd.set(a[4],a[5],a[6]).length(),o=Bd.set(a[8],a[9],a[10]).length();const s=this.determinant();0>s&&(i=-i),e.x=a[12],e.y=a[13],e.z=a[14],Ud.copy(this);const l=1/i,d=1/n,p=1/o;return Ud.elements[0]*=l,Ud.elements[1]*=l,Ud.elements[2]*=l,Ud.elements[4]*=d,Ud.elements[5]*=d,Ud.elements[6]*=d,Ud.elements[8]*=p,Ud.elements[9]*=p,Ud.elements[10]*=p,t.setFromRotationMatrix(Ud),r.x=i,r.y=n,r.z=o,this},makePerspective:function(e,t,r,a,i,n){void 0===n&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-a),o[9]=(r+a)/(r-a),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+i)/(n-i),o[14]=-2*n*i/(n-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,r,a,i,n){const o=this.elements,s=1/(t-e),l=1/(r-a),d=1/(n-i);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-((t+e)*s),o[1]=0,o[5]=2*l,o[9]=0,o[13]=-((r+a)*l),o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-((n+i)*d),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){const t=this.elements,r=e.elements;for(let a=0;16>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(let r=0;16>r;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}});const kd=new c,Wd=new p;u.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],u.DefaultOrder="XYZ",Object.defineProperties(u.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(u.prototype,{isEuler:!0,set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._order=a||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var a=Math.asin;const i=Pd.clamp,n=e.elements,o=n[0],s=n[4],l=n[8],d=n[1],p=n[5],c=n[9],u=n[2],m=n[6],g=n[10];return t=t||this._order,"XYZ"===t?(this._y=a(i(l,-1,1)),.9999999>_o(l)?(this._x=xo(-c,g),this._z=xo(-s,o)):(this._x=xo(m,p),this._z=0)):"YXZ"===t?(this._x=a(-i(c,-1,1)),.9999999>_o(c)?(this._y=xo(l,g),this._z=xo(d,p)):(this._y=xo(-u,o),this._z=0)):"ZXY"===t?(this._x=a(i(m,-1,1)),.9999999>_o(m)?(this._y=xo(-u,g),this._z=xo(-s,p)):(this._y=0,this._z=xo(d,o))):"ZYX"===t?(this._y=a(-i(u,-1,1)),.9999999>_o(u)?(this._x=xo(m,g),this._z=xo(d,o)):(this._x=0,this._z=xo(-s,p))):"YZX"===t?(this._z=a(i(d,-1,1)),.9999999>_o(d)?(this._x=xo(-c,p),this._y=xo(-u,o)):(this._x=0,this._y=xo(l,g))):"XZY"===t?(this._z=a(-i(s,-1,1)),.9999999>_o(s)?(this._x=xo(m,p),this._y=xo(l,o)):(this._x=xo(-c,g),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t),(this._order=t,!1!==r&&this._onChangeCallback(),this)},setFromQuaternion:function(e,t,r){return kd.makeRotationFromQuaternion(e),this.setFromRotationMatrix(kd,t,r)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return Wd.setFromEuler(this),this.setFromQuaternion(Wd,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new m(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}}),Object.assign(g.prototype,{set:function(e){this.mask=0|1<<e},enable:function(e){this.mask|=0|1<<e},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=0|1<<e},disable:function(e){this.mask&=~(0|1<<e)},disableAll:function(){this.mask=0},test:function(e){return 0!=(this.mask&e.mask)}});let jd=0;const qd=new m,Xd=new p,Yd=new c,Zd=new m,Jd=new m,Qd=new m,Kd=new p,$d=new m(1,0,0),ep=new m(0,1,0),tp=new m(0,0,1),rp={type:"added"},ap={type:"removed"};f.DefaultUp=new m(0,1,0),f.DefaultMatrixAutoUpdate=!0,f.prototype=Object.assign(Object.create(a.prototype),{constructor:f,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Xd.setFromAxisAngle(e,t),this.quaternion.multiply(Xd),this},rotateOnWorldAxis:function(e,t){return Xd.setFromAxisAngle(e,t),this.quaternion.premultiply(Xd),this},rotateX:function(e){return this.rotateOnAxis($d,e)},rotateY:function(e){return this.rotateOnAxis(ep,e)},rotateZ:function(e){return this.rotateOnAxis(tp,e)},translateOnAxis:function(e,t){return qd.copy(e).applyQuaternion(this.quaternion),this.position.add(qd.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis($d,e)},translateY:function(e){return this.translateOnAxis(ep,e)},translateZ:function(e){return this.translateOnAxis(tp,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Yd.getInverse(this.matrixWorld))},lookAt:function(e,t,r){e.isVector3?Zd.copy(e):Zd.set(e,t,r);const a=this.parent;this.updateWorldMatrix(!0,!1),Jd.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yd.lookAt(Jd,Zd,this.up):Yd.lookAt(Zd,Jd,this.up),this.quaternion.setFromRotationMatrix(Yd),a&&(Yd.extractRotation(a.matrixWorld),Xd.setFromRotationMatrix(Yd),this.quaternion.premultiply(Xd.inverse()))},add:function(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(rp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ap)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),Yd.getInverse(this.matrixWorld),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Yd.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yd),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let r=0,a=this.children.length;r<a;r++){const a=this.children[r],i=a.getObjectByProperty(e,t);if(void 0!==i)return i}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new m),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new p),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Jd,e,Qd),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new m),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Jd,Kd,e),e},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new m),this.updateMatrixWorld(!0);const r=this.matrixWorld.elements;return t.set(r[8],r[9],r[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let r=0,a=t.length;r<a;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);const t=this.children;for(let r=0,a=t.length;r<a;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,a=t.length;r<a;r++)t[r].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,r=e.length;t<r;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){function t(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}function r(e){const t=[];for(const r in e){const a=e[r];delete a.metadata,t.push(a)}return t}const a=void 0===e||"string"==typeof e,i={};a&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=t(e.geometries,this.geometry);const r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){const a=r.shapes;if(Array.isArray(a))for(let r=0,i=a.length;r<i;r++){const i=a[r];t(e.shapes,i)}else t(e.shapes,a)}}if(void 0!==this.material)if(Array.isArray(this.material)){const r=[];for(let a=0,i=this.material.length;a<i;a++)r.push(t(e.materials,this.material[a]));n.material=r}else n.material=t(e.materials,this.material);if(0<this.children.length){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(a){const t=r(e.geometries),a=r(e.materials),n=r(e.textures),o=r(e.images),s=r(e.shapes);0<t.length&&(i.geometries=t),0<a.length&&(i.materials=a),0<n.length&&(i.textures=n),0<o.length&&(i.images=o),0<s.length&&(i.shapes=s)}return i.object=n,i},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const r=e.children[t];this.add(r.clone())}return this}}),h.prototype=Object.assign(Object.create(f.prototype),{constructor:h,isScene:!0,copy:function(e,t){return f.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){const t=f.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}});const ip=[new m,new m,new m,new m,new m,new m,new m,new m],np=new m,op=new y,sp=new m,lp=new m,dp=new m,pp=new m,cp=new m,up=new m,mp=new m,gp=new m,fp=new m,hp=new m;Object.assign(y.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){let t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity;for(let d=0,i=e.length;d<i;d+=3){const i=e[d],l=e[d+1],p=e[d+2];i<t&&(t=i),l<r&&(r=l),p<a&&(a=p),i>n&&(n=i),l>o&&(o=l),p>s&&(s=p)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromBufferAttribute:function(e){let t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity;for(let d=0,i=e.count;d<i;d++){const i=e.getX(d),l=e.getY(d),p=e.getZ(d);i<t&&(t=i),l<r&&(r=l),p<a&&(a=p),i>n&&(n=i),l>o&&(o=l),p>s&&(s=p)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const r=np.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new m),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new m),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),op.copy(t.boundingBox),op.applyMatrix4(e.matrixWorld),this.union(op));const r=e.children;for(let t=0,a=r.length;t<a;t++)this.expandByObject(r[t]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new m),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,np),np.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){let t,r;return 0<e.normal.x?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(mp),gp.subVectors(this.max,mp),sp.subVectors(e.a,mp),lp.subVectors(e.b,mp),dp.subVectors(e.c,mp),pp.subVectors(lp,sp),cp.subVectors(dp,lp),up.subVectors(sp,dp);let t=[0,-pp.z,pp.y,0,-cp.z,cp.y,0,-up.z,up.y,pp.z,0,-pp.x,cp.z,0,-cp.x,up.z,0,-up.x,-pp.y,pp.x,0,-cp.y,cp.x,0,-up.y,up.x,0];return!!v(t,sp,lp,dp,gp)&&(t=[1,0,0,0,1,0,0,0,1],!!v(t,sp,lp,dp,gp))&&(fp.crossVectors(pp,cp),t=[fp.x,fp.y,fp.z],v(t,sp,lp,dp,gp))},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new m),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){const t=np.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(np).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()?this:(ip[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ip[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ip[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ip[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ip[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ip[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ip[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ip[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ip),this)},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const yp=new y;Object.assign(x.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){const r=this.center;void 0===t?yp.setFromPoints(e).getCenter(r):r.copy(t);let a=0;for(let n=0,i=e.length;n<i;n++)a=Ro(a,r.distanceToSquared(e[n]));return this.radius=bo(a),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},isEmpty:function(){return 0>this.radius},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return _o(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){const r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new m),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return(void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new y),this.isEmpty())?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});const vp=new m,xp=new m,_p=new m,bp=new m,Sp=new m,Mp=new m,Tp=new m;Object.assign(_.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new m),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,vp)),this},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new m),t.subVectors(e,this.origin);const r=t.dot(this.direction);return 0>r?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return bo(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){const t=vp.subVectors(e,this.origin).dot(this.direction);return 0>t?this.origin.distanceToSquared(e):(vp.copy(this.direction).multiplyScalar(t).add(this.origin),vp.distanceToSquared(e))},distanceSqToSegment:function(e,t,r,a){xp.copy(e).add(t).multiplyScalar(.5),_p.copy(t).sub(e).normalize(),bp.copy(this.origin).sub(xp);const i=.5*e.distanceTo(t),n=-this.direction.dot(_p),o=bp.dot(this.direction),s=-bp.dot(_p),l=bp.lengthSq(),d=_o(1-n*n);let p,c,u,m;if(!(0<d))c=0<n?-i:i,p=Ro(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;else if(p=n*s-o,c=n*o-s,m=i*d,!(0<=p))c<=-m?(p=Ro(0,-(-n*i+o)),c=0<p?-i:Po(Ro(-i,-s),i),u=-p*p+c*(c+2*s)+l):c<=m?(p=0,c=Po(Ro(-i,-s),i),u=c*(c+2*s)+l):(p=Ro(0,-(n*i+o)),c=0<p?i:Po(Ro(-i,-s),i),u=-p*p+c*(c+2*s)+l);else if(!(c>=-m))c=-i,p=Ro(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;else if(c<=m){const e=1/d;p*=e,c*=e,u=p*(p+n*c+2*o)+c*(n*p+c+2*s)+l}else c=i,p=Ro(0,-(n*c+o)),u=-p*p+c*(c+2*s)+l;return r&&r.copy(this.direction).multiplyScalar(p).add(this.origin),a&&a.copy(_p).multiplyScalar(c).add(xp),u},intersectSphere:function(e,t){vp.subVectors(e.center,this.origin);const r=vp.dot(this.direction),a=vp.dot(vp)-r*r,i=e.radius*e.radius;if(a>i)return null;const n=bo(i-a),o=r-n,s=r+n;return 0>o&&0>s?null:0>o?this.at(s,t):this.at(o,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){const r=e.normal.dot(this.direction);if(0===r)return 0===e.distanceToPoint(this.origin)?0:null;const a=-(this.origin.dot(e.normal)+e.constant)/r;return 0<=a?a:null},intersectPlane:function(e,r){const a=this.distanceToPlane(e);return null===a?null:this.at(a,r)},intersectsPlane:function(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;const r=e.normal.dot(this.direction);return!!(0>r*t)},intersectBox:function(e,t){let r,a,i,n,o,s;const l=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,c=this.origin;return(0<=l?(r=(e.min.x-c.x)*l,a=(e.max.x-c.x)*l):(r=(e.max.x-c.x)*l,a=(e.min.x-c.x)*l),0<=d?(i=(e.min.y-c.y)*d,n=(e.max.y-c.y)*d):(i=(e.max.y-c.y)*d,n=(e.min.y-c.y)*d),r>n||i>a)?null:((i>r||r!=r)&&(r=i),(n<a||a!=a)&&(a=n),0<=p?(o=(e.min.z-c.z)*p,s=(e.max.z-c.z)*p):(o=(e.max.z-c.z)*p,s=(e.min.z-c.z)*p),r>s||o>a)?null:((o>r||r!=r)&&(r=o),(s<a||a!=a)&&(a=s),0>a?null:this.at(0<=r?r:a,t))},intersectsBox:function(e){return null!==this.intersectBox(e,vp)},intersectTriangle:function(e,t,r,a,i){Sp.subVectors(t,e),Mp.subVectors(r,e),Tp.crossVectors(Sp,Mp);let n=this.direction.dot(Tp),o;if(0<n){if(a)return null;o=1}else if(0>n)o=-1,n=-n;else return null;bp.subVectors(this.origin,e);const s=o*this.direction.dot(Mp.crossVectors(bp,Mp));if(0>s)return null;const l=o*this.direction.dot(Sp.cross(bp));if(0>l)return null;if(s+l>n)return null;const d=-o*bp.dot(Tp);return 0>d?null:this.at(d/n,i)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});const Ep=new m,wp=new m,Lp=new i;Object.assign(b.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,a){return this.normal.set(e,t,r),this.constant=a,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,r){const a=Ep.subVectors(r,t).cross(wp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(a,e),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new m),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,r){void 0===r&&(console.warn("THREE.Plane: .intersectLine() target is now required"),r=new m);const a=e.delta(Ep),i=this.normal.dot(a);if(0===i)return 0===this.distanceToPoint(e.start)?r.copy(e.start):void 0;const n=-(e.start.dot(this.normal)+this.constant)/i;return 0>n||1<n?void 0:r.copy(a).multiplyScalar(n).add(e.start)},intersectsLine:function(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&0<r||0>r&&0<t},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new m),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){const r=t||Lp.getNormalMatrix(e),a=this.coplanarPoint(Ep).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(i),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});const Ap=new m,Rp=new m,Pp=new m,Cp=new m,Ip=new m,Dp=new m,Np=new m,zp=new m,Bp=new m,Up=new m;Object.assign(S,{getNormal:function(e,t,r,a){void 0===a&&(console.warn("THREE.Triangle: .getNormal() target is now required"),a=new m),a.subVectors(r,t),Ap.subVectors(e,t),a.cross(Ap);const i=a.lengthSq();return 0<i?a.multiplyScalar(1/bo(i)):a.set(0,0,0)},getBarycoord:function(e,t,r,a,i){Ap.subVectors(a,t),Rp.subVectors(r,t),Pp.subVectors(e,t);const n=Ap.dot(Ap),o=Ap.dot(Rp),s=Ap.dot(Pp),l=Rp.dot(Rp),d=Rp.dot(Pp),p=n*l-o*o;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new m),0==p)return i.set(-2,-1,-1);const c=1/p,g=(l*s-o*d)*c,u=(n*d-o*s)*c;return i.set(1-g-u,u,g)},containsPoint:function(e,t,r,a){return S.getBarycoord(e,t,r,a,Cp),0<=Cp.x&&0<=Cp.y&&1>=Cp.x+Cp.y},getUV:function(e,t,r,a,i,n,o,s){return this.getBarycoord(e,t,r,a,Cp),s.set(0,0),s.addScaledVector(i,Cp.x),s.addScaledVector(n,Cp.y),s.addScaledVector(o,Cp.z),s},isFrontFacing:function(e,t,r,a){return Ap.subVectors(r,t),Rp.subVectors(e,t),!!(0>Ap.cross(Rp).dot(a))}}),Object.assign(S.prototype,{set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,a){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[a]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return Ap.subVectors(this.c,this.b),Rp.subVectors(this.a,this.b),.5*Ap.cross(Rp).length()},getMidpoint:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new m),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return S.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new b),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return S.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,r,a,i){return S.getUV(e,this.a,this.b,this.c,t,r,a,i)},containsPoint:function(e){return S.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return S.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new m);const r=this.a,a=this.b,i=this.c;let n,o;Ip.subVectors(a,r),Dp.subVectors(i,r),zp.subVectors(e,r);const s=Ip.dot(zp),l=Dp.dot(zp);if(0>=s&&0>=l)return t.copy(r);Bp.subVectors(e,a);const d=Ip.dot(Bp),p=Dp.dot(Bp);if(0<=d&&p<=d)return t.copy(a);const c=s*p-d*l;if(0>=c&&0<=s&&0>=d)return n=s/(s-d),t.copy(r).addScaledVector(Ip,n);Up.subVectors(e,i);const u=Ip.dot(Up),g=Dp.dot(Up);if(0<=g&&u<=g)return t.copy(i);const f=u*l-s*g;if(0>=f&&0<=l&&0>=g)return o=l/(l-g),t.copy(r).addScaledVector(Dp,o);const h=d*g-u*p;if(0>=h&&0<=p-d&&0<=u-g)return Np.subVectors(i,a),o=(p-d)/(p-d+(u-g)),t.copy(a).addScaledVector(Np,o);const y=1/(h+f+c);return n=f*y,o=c*y,t.copy(r).addScaledVector(Ip,n).addScaledVector(Dp,o)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});const Fp={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Gp={h:0,s:0,l:0},Op={h:0,s:0,l:0};Object.assign(M.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Do(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(e=Pd.euclideanModulo(e,1),t=Pd.clamp(t,0,1),r=Pd.clamp(r,0,1),0===t)this.r=this.g=this.b=r;else{const a=.5>=r?r*(1+t):r+t-r*t,i=2*r-a;this.r=T(i,a,e+1/3),this.g=T(i,a,e),this.b=T(i,a,e-1/3)}return this},setStyle:function(e){function t(t){void 0===t||1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const a=r[1],i=r[2];switch(a){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Po(255,parseInt(e[1],10))/255,this.g=Po(255,parseInt(e[2],10))/255,this.b=Po(255,parseInt(e[3],10))/255,t(e[5]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Po(100,parseInt(e[1],10))/100,this.g=Po(100,parseInt(e[2],10))/100,this.b=Po(100,parseInt(e[3],10))/100,t(e[5]),this;break;case"hsl":case"hsla":if(e=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){const r=parseFloat(e[1])/360,a=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100;return t(e[5]),this.setHSL(r,a,i)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){const e=r[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&0<e.length?this.setColorName(e):this},setColorName:function(e){const t=Fp[e];return void 0===t?console.warn("THREE.Color: Unknown color "+e):this.setHex(t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Eo(e.r,t),this.g=Eo(e.g,t),this.b=Eo(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);const r=0<t?1/t:1;return this.r=Eo(e.r,r),this.g=Eo(e.g,r),this.b=Eo(e.b,r),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=E(e.r),this.g=E(e.g),this.b=E(e.b),this},copyLinearToSRGB:function(e){return this.r=w(e.r),this.g=w(e.g),this.b=w(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,r=this.g,a=this.b,i=Ro(t,r,a),n=Po(t,r,a);let o,s;const l=(n+i)/2;if(n===i)o=0,s=0;else{const e=i-n;s=.5>=l?e/(i+n):e/(2-i-n),i===t?o=(r-a)/e+(r<a?6:0):i===r?o=(a-t)/e+2:i===a?o=(t-r)/e+4:void 0,o/=6}return e.h=o,e.s=s,e.l=l,e},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},offsetHSL:function(e,t,r){return this.getHSL(Gp),Gp.h+=e,Gp.s+=t,Gp.l+=r,this.setHSL(Gp.h,Gp.s,Gp.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Ro(0,this.r-e.r),this.g=Ro(0,this.g-e.g),this.b=Ro(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(Gp),e.getHSL(Op);const r=Pd.lerp(Gp.h,Op.h,t),a=Pd.lerp(Gp.s,Op.s,t),i=Pd.lerp(Gp.l,Op.l,t);return this.setHSL(r,a,i),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},fromBufferAttribute:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this},toJSON:function(){return this.getHex()}}),M.NAMES=Fp,Object.assign(L.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});let Hp=0;A.prototype=Object.assign(Object.create(a.prototype),{constructor:A,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const r=e[t];if(void 0===r){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"==t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===jo;continue}const a=this[t];if(void 0===a){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}a&&a.isColor?a.set(r):a&&a.isVector3&&r&&r.isVector3?a.copy(r):this[t]=r}},toJSON:function(e){function t(e){const t=[];for(const r in e){const a=e[r];delete a.metadata,t.push(a)}return t}const r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{}});const a={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),void 0!==this.roughness&&(a.roughness=this.roughness),void 0!==this.metalness&&(a.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(a.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),void 0!==this.shininess&&(a.shininess=this.shininess),void 0!==this.clearcoat&&(a.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(e).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,void 0!==this.combine&&(a.combine=this.combine),void 0!==this.envMapIntensity&&(a.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(a.size=this.size),void 0!==this.sizeAttenuation&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==Xo&&(a.blending=this.blending),!0===this.flatShading&&(a.flatShading=this.flatShading),this.side!==Vo&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),1>this.opacity&&(a.opacity=this.opacity),!0===this.transparent&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(a.rotation=this.rotation),!0===this.polygonOffset&&(a.polygonOffset=!0),0!==this.polygonOffsetFactor&&(a.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(a.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(a.linewidth=this.linewidth),void 0!==this.dashSize&&(a.dashSize=this.dashSize),void 0!==this.gapSize&&(a.gapSize=this.gapSize),void 0!==this.scale&&(a.scale=this.scale),!0===this.dithering&&(a.dithering=!0),0<this.alphaTest&&(a.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(a.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(a.wireframe=this.wireframe),1<this.wireframeLinewidth&&(a.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(a.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(a.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(a.morphTargets=!0),!0===this.morphNormals&&(a.morphNormals=!0),!0===this.skinning&&(a.skinning=!0),!1===this.visible&&(a.visible=!1),!1===this.toneMapped&&(a.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),r){const r=t(e.textures),i=t(e.images);0<r.length&&(a.textures=r),0<i.length&&(a.images=i)}return a},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){const e=t.length;r=Array(e);for(let a=0;a!==e;++a)r[a]=t[a].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(A.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),R.prototype=Object.create(A.prototype),R.prototype.constructor=R,R.prototype.isMeshBasicMaterial=!0,R.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Vp=new m,kp=new n;Object.defineProperty(P.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(P.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let a=0,i=this.itemSize;a<i;a++)this.array[e+a]=t.array[r+a];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",a),n=new M),t[r++]=n.r,t[r++]=n.g,t[r++]=n.b;return this},copyVector2sArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,o;a<i;a++)o=e[a],void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",a),o=new n),t[r++]=o.x,t[r++]=o.y;return this},copyVector3sArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",a),n=new m),t[r++]=n.x,t[r++]=n.y,t[r++]=n.z;return this},copyVector4sArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",a),n=new s),t[r++]=n.x,t[r++]=n.y,t[r++]=n.z,t[r++]=n.w;return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)kp.fromBufferAttribute(this,t),kp.applyMatrix3(e),this.setXY(t,kp.x,kp.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)Vp.fromBufferAttribute(this,t),Vp.applyMatrix3(e),this.setXYZ(t,Vp.x,Vp.y,Vp.z);return this},applyMatrix4:function(e){for(let t=0,r=this.count;t<r;t++)Vp.x=this.getX(t),Vp.y=this.getY(t),Vp.z=this.getZ(t),Vp.applyMatrix4(e),this.setXYZ(t,Vp.x,Vp.y,Vp.z);return this},applyNormalMatrix:function(e){for(let t=0,r=this.count;t<r;t++)Vp.x=this.getX(t),Vp.y=this.getY(t),Vp.z=this.getZ(t),Vp.applyNormalMatrix(e),this.setXYZ(t,Vp.x,Vp.y,Vp.z);return this},transformDirection:function(e){for(let t=0,r=this.count;t<r;t++)Vp.x=this.getX(t),Vp.y=this.getY(t),Vp.z=this.getZ(t),Vp.transformDirection(e),this.setXYZ(t,Vp.x,Vp.y,Vp.z);return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),C.prototype=Object.create(P.prototype),C.prototype.constructor=C,I.prototype=Object.create(P.prototype),I.prototype.constructor=I,D.prototype=Object.create(P.prototype),D.prototype.constructor=D,N.prototype=Object.create(P.prototype),N.prototype.constructor=N,z.prototype=Object.create(P.prototype),z.prototype.constructor=z,B.prototype=Object.create(P.prototype),B.prototype.constructor=B,U.prototype=Object.create(P.prototype),U.prototype.constructor=U,F.prototype=Object.create(P.prototype),F.prototype.constructor=F,G.prototype=Object.create(P.prototype),G.prototype.constructor=G,Object.assign(O.prototype,{computeGroups:function(e){const t=[];let r,a,i;const n=e.faces;for(a=0;a<n.length;a++){const e=n[a];e.materialIndex!==i&&(i=e.materialIndex,void 0!=r&&(r.count=3*a-r.start,t.push(r)),r={start:3*a,materialIndex:i})}void 0!==r&&(r.count=3*a-r.start,t.push(r)),this.groups=t},fromGeometry:function(e){const t=e.faces,r=e.vertices,a=e.faceVertexUvs,o=a[0]&&0<a[0].length,s=a[1]&&0<a[1].length,l=e.morphTargets,d=l.length;let p;if(0<d){p=[];for(let e=0;e<d;e++)p[e]={name:l[e].name,data:[]};this.morphTargets.position=p}const c=e.morphNormals,u=c.length;let m;if(0<u){m=[];for(let e=0;e<u;e++)m[e]={name:c[e].name,data:[]};this.morphTargets.normal=m}const g=e.skinIndices,f=e.skinWeights,h=g.length===r.length,y=f.length===r.length;0<r.length&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<t.length;v++){const e=t[v];this.vertices.push(r[e.a],r[e.b],r[e.c]);const i=e.vertexNormals;if(3===i.length)this.normals.push(i[0],i[1],i[2]);else{const t=e.normal;this.normals.push(t,t,t)}const x=e.vertexColors;if(3===x.length)this.colors.push(x[0],x[1],x[2]);else{const t=e.color;this.colors.push(t,t,t)}if(!0===o){const e=a[0][v];void 0===e?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new n,new n,new n)):this.uvs.push(e[0],e[1],e[2])}if(!0===s){const e=a[1][v];void 0===e?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new n,new n,new n)):this.uvs2.push(e[0],e[1],e[2])}for(let t=0;t<d;t++){const r=l[t].vertices;p[t].data.push(r[e.a],r[e.b],r[e.c])}for(let e=0;e<u;e++){const t=c[e].vertexNormals[v];m[e].data.push(t.a,t.b,t.c)}h&&this.skinIndices.push(g[e.a],g[e.b],g[e.c]),y&&this.skinWeights.push(f[e.a],f[e.b],f[e.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}});let Wp=1;const jp=new c,qp=new f,Xp=new m,Yp=new y,Zp=new y,Jp=new m;V.prototype=Object.assign(Object.create(a.prototype),{constructor:V,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){this.index=Array.isArray(e)?new(65535<H(e)?U:z)(e,1):e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0===r?0:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(void 0!==r){const t=new i().getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}const a=this.attributes.tangent;return void 0!==a&&(a.transformDirection(e),a.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return jp.makeRotationX(e),this.applyMatrix4(jp),this},rotateY:function(e){return jp.makeRotationY(e),this.applyMatrix4(jp),this},rotateZ:function(e){return jp.makeRotationZ(e),this.applyMatrix4(jp),this},translate:function(e,t,r){return jp.makeTranslation(e,t,r),this.applyMatrix4(jp),this},scale:function(e,t,r){return jp.makeScale(e,t,r),this.applyMatrix4(jp),this},lookAt:function(e){return qp.lookAt(e),qp.updateMatrix(),this.applyMatrix4(qp.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Xp).negate(),this.translate(Xp.x,Xp.y,Xp.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new F(3*t.vertices.length,3),r=new F(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new F(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let r=0,a=e.length;r<a;r++){const a=e[r];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new F(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new O().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new P(t,3).copyVector3sArray(e.vertices)),0<e.normals.length){const t=new Float32Array(3*e.normals.length);this.setAttribute("normal",new P(t,3).copyVector3sArray(e.normals))}if(0<e.colors.length){const t=new Float32Array(3*e.colors.length);this.setAttribute("color",new P(t,3).copyColorsArray(e.colors))}if(0<e.uvs.length){const t=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new P(t,2).copyVector2sArray(e.uvs))}if(0<e.uvs2.length){const t=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new P(t,2).copyVector2sArray(e.uvs2))}for(const t in this.groups=e.groups,e.morphTargets){const r=[],a=e.morphTargets[t];for(let e=0,t=a.length;e<t;e++){const t=a[e],i=new F(3*t.data.length,3);i.name=t.name,r.push(i.copyVector3sArray(t.data))}this.morphAttributes[t]=r}if(0<e.skinIndices.length){const t=new F(4*e.skinIndices.length,4);this.setAttribute("skinIndex",t.copyVector4sArray(e.skinIndices))}if(0<e.skinWeights.length){const t=new F(4*e.skinWeights.length,4);this.setAttribute("skinWeight",t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new y);const e=this.attributes.position,t=this.morphAttributes.position;if(void 0===e)this.boundingBox.makeEmpty();else if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];Yp.setFromBufferAttribute(r),this.morphTargetsRelative?(Jp.addVectors(this.boundingBox.min,Yp.min),this.boundingBox.expandByPoint(Jp),Jp.addVectors(this.boundingBox.max,Yp.max),this.boundingBox.expandByPoint(Jp)):(this.boundingBox.expandByPoint(Yp.min),this.boundingBox.expandByPoint(Yp.max))}(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error("THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.",this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new x);const e=this.attributes.position,t=this.morphAttributes.position;if(e){const r=this.boundingSphere.center;if(Yp.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];Zp.setFromBufferAttribute(r),this.morphTargetsRelative?(Jp.addVectors(Yp.min,Zp.min),Yp.expandByPoint(Jp),Jp.addVectors(Yp.max,Zp.max),Yp.expandByPoint(Jp)):(Yp.expandByPoint(Zp.min),Yp.expandByPoint(Zp.max))}Yp.getCenter(r);let a=0;for(let t=0,i=e.count;t<i;t++)Jp.fromBufferAttribute(e,t),a=Ro(a,r.distanceToSquared(Jp));if(t)for(let n=0,i=t.length;n<i;n++){const i=t[n],o=this.morphTargetsRelative;for(let t=0,n=i.count;t<n;t++)Jp.fromBufferAttribute(i,t),o&&(Xp.fromBufferAttribute(e,t),Jp.add(Xp)),a=Ro(a,r.distanceToSquared(Jp))}this.boundingSphere.radius=bo(a),isNaN(this.boundingSphere.radius)&&console.error("THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.",this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let r=this.getAttribute("normal");if(void 0===r)r=new P(new Float32Array(3*t.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const a=new m,n=new m,o=new m,s=new m,l=new m,d=new m,p=new m,c=new m;if(e)for(let u=0,i=e.count;u<i;u+=3){const i=e.getX(u+0),m=e.getX(u+1),g=e.getX(u+2);a.fromBufferAttribute(t,i),n.fromBufferAttribute(t,m),o.fromBufferAttribute(t,g),p.subVectors(o,n),c.subVectors(a,n),p.cross(c),s.fromBufferAttribute(r,i),l.fromBufferAttribute(r,m),d.fromBufferAttribute(r,g),s.add(p),l.add(p),d.add(p),r.setXYZ(i,s.x,s.y,s.z),r.setXYZ(m,l.x,l.y,l.z),r.setXYZ(g,d.x,d.y,d.z)}else for(let e=0,i=t.count;e<i;e+=3)a.fromBufferAttribute(t,e+0),n.fromBufferAttribute(t,e+1),o.fromBufferAttribute(t,e+2),p.subVectors(o,n),c.subVectors(a,n),p.cross(c),r.setXYZ(e+0,p.x,p.y,p.z),r.setXYZ(e+1,p.x,p.y,p.z),r.setXYZ(e+2,p.x,p.y,p.z);this.normalizeNormals(),r.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry))return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const r=this.attributes;for(const a in r){if(void 0===e.attributes[a])continue;const i=r[a],n=i.array,o=e.attributes[a],s=o.array,l=o.itemSize*t,d=Po(s.length,n.length-l);for(let e=0,t=l;e<d;e++,t++)n[t]=s[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)Jp.fromBufferAttribute(e,t),Jp.normalize(),e.setXYZ(t,Jp.x,Jp.y,Jp.z)},toNonIndexed:function(){function e(e,t){const r=e.array,a=e.itemSize,i=e.normalized,n=new r.constructor(t.length*a);let o=0,s=0;for(let d=0,i=t.length;d<i;d++){o=t[d]*a;for(let e=0;e<a;e++)n[s++]=r[o++]}return new P(n,a,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new V,r=this.index.array,a=this.attributes;for(const i in a){const n=a[i],o=e(n,r);t.setAttribute(i,o)}const i=this.morphAttributes;for(const a in i){const n=[],o=i[a];for(let t=0,a=o.length;t<a;t++){const a=o[t],i=e(a,r);n.push(i)}t.morphAttributes[a]=n}t.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let e=0,r=n.length;e<r;e++){const r=n[e];t.addGroup(r.start,r.count,r.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),0<Object.keys(this.userData).length&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const t in r){const a=r[t],i=a.toJSON(e.data);""!==a.name&&(i.name=a.name),e.data.attributes[t]=i}const a={};let i=!1;for(const t in this.morphAttributes){const r=this.morphAttributes[t],n=[];for(let t=0,a=r.length;t<a;t++){const a=r[t],i=a.toJSON(e.data);""!==a.name&&(i.name=a.name),n.push(i)}0<n.length&&(a[t]=n,i=!0)}i&&(e.data.morphAttributes=a,e.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;0<n.length&&(e.data.groups=JSON.parse(JSON.stringify(n)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return new V().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;null!==r&&this.setIndex(r.clone(t));const a=e.attributes;for(const r in a){const e=a[r];this.setAttribute(r,e.clone(t))}const i=e.morphAttributes;for(const r in i){const e=[],a=i[r];for(let r=0,i=a.length;r<i;r++)e.push(a[r].clone(t));this.morphAttributes[r]=e}this.morphTargetsRelative=e.morphTargetsRelative;const n=e.groups;for(let t=0,r=n.length;t<r;t++){const e=n[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Qp=new c,Kp=new _,$p=new x,ec=new m,tc=new m,rc=new m,ac=new m,ic=new m,nc=new m,oc=new m,sc=new m,lc=new m,dc=new n,pc=new n,cc=new n,uc=new m,mc=new m;k.prototype=Object.assign(Object.create(f.prototype),{constructor:k,isMesh:!0,copy:function(e){return f.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(0<r.length){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||t+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const r=this.geometry,o=this.material,a=this.matrixWorld;if(void 0===o)return;if(null===r.boundingSphere&&r.computeBoundingSphere(),$p.copy(r.boundingSphere),$p.applyMatrix4(a),!1===e.ray.intersectsSphere($p))return;if(Qp.getInverse(a),Kp.copy(e.ray).applyMatrix4(Qp),null!==r.boundingBox&&!1===Kp.intersectsBox(r.boundingBox))return;let s;if(r.isBufferGeometry){const n=r.index,l=r.attributes.position,d=r.morphAttributes.position,p=r.morphTargetsRelative,u=r.attributes.uv,m=r.attributes.uv2,a=r.groups,c=r.drawRange;if(null!==n){if(Array.isArray(o))for(let r=0,i=a.length;r<i;r++){const i=a[r],g=o[i.materialIndex],f=Ro(i.start,c.start),h=Po(i.start+i.count,c.start+c.count);for(let r=f;r<h;r+=3){const o=n.getX(r),a=n.getX(r+1),f=n.getX(r+2);s=q(this,g,e,Kp,l,d,p,u,m,o,a,f),s&&(s.faceIndex=Do(r/3),s.face.materialIndex=i.materialIndex,t.push(s))}}else{const r=Ro(0,c.start),a=Po(n.count,c.start+c.count);for(let g=r;g<a;g+=3){const r=n.getX(g),a=n.getX(g+1),i=n.getX(g+2);s=q(this,o,e,Kp,l,d,p,u,m,r,a,i),s&&(s.faceIndex=Do(g/3),t.push(s))}}}else if(void 0!==l)if(Array.isArray(o))for(let r=0,i=a.length;r<i;r++){const i=a[r],n=o[i.materialIndex],g=Ro(i.start,c.start),f=Po(i.start+i.count,c.start+c.count);for(let r=g;r<f;r+=3){const o=r,a=r+1,g=r+2;s=q(this,n,e,Kp,l,d,p,u,m,o,a,g),s&&(s.faceIndex=Do(r/3),s.face.materialIndex=i.materialIndex,t.push(s))}}else{const r=Ro(0,c.start),a=Po(l.count,c.start+c.count);for(let n=r;n<a;n+=3){const r=n,a=n+1,i=n+2;s=q(this,o,e,Kp,l,d,p,u,m,r,a,i),s&&(s.faceIndex=Do(n/3),t.push(s))}}}else if(r.isGeometry){const a=Array.isArray(o),i=r.vertices,l=r.faces;let d;const p=r.faceVertexUvs[0];0<p.length&&(d=p);for(let r=0,p=l.length;r<p;r++){const p=l[r],c=a?o[p.materialIndex]:o;if(void 0===c)continue;const u=i[p.a],m=i[p.b],g=i[p.c];if(s=W(this,c,e,Kp,u,m,g,uc),s){if(d&&d[r]){const e=d[r];dc.copy(e[0]),pc.copy(e[1]),cc.copy(e[2]),s.uv=S.getUV(uc,u,m,g,dc,pc,cc,new n)}s.face=p,s.faceIndex=r,t.push(s)}}}}});let gc=0;const fc=new c,hc=new f,yc=new m;j.prototype=Object.assign(Object.create(a.prototype),{constructor:j,isGeometry:!0,applyMatrix4:function(e){const t=new i().getNormalMatrix(e);for(let t=0,r=this.vertices.length;t<r;t++){const r=this.vertices[t];r.applyMatrix4(e)}for(let r=0,a=this.faces.length;r<a;r++){const e=this.faces[r];e.normal.applyMatrix3(t).normalize();for(let r=0,a=e.vertexNormals.length;r<a;r++)e.vertexNormals[r].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return fc.makeRotationX(e),this.applyMatrix4(fc),this},rotateY:function(e){return fc.makeRotationY(e),this.applyMatrix4(fc),this},rotateZ:function(e){return fc.makeRotationZ(e),this.applyMatrix4(fc),this},translate:function(e,t,r){return fc.makeTranslation(e,t,r),this.applyMatrix4(fc),this},scale:function(e,t,r){return fc.makeScale(e,t,r),this.applyMatrix4(fc),this},lookAt:function(e){return hc.lookAt(e),hc.updateMatrix(),this.applyMatrix4(hc.matrix),this},fromBufferGeometry:function(e){function t(e,t,a,i){const o=void 0===l?[]:[r.colors[e].clone(),r.colors[t].clone(),r.colors[a].clone()],c=void 0===s?[]:[new m().fromBufferAttribute(s,e),new m().fromBufferAttribute(s,t),new m().fromBufferAttribute(s,a)],u=new L(e,t,a,c,o,i);r.faces.push(u),void 0!==d&&r.faceVertexUvs[0].push([new n().fromBufferAttribute(d,e),new n().fromBufferAttribute(d,t),new n().fromBufferAttribute(d,a)]),void 0!==p&&r.faceVertexUvs[1].push([new n().fromBufferAttribute(p,e),new n().fromBufferAttribute(p,t),new n().fromBufferAttribute(p,a)])}const r=this,a=null===e.index?void 0:e.index,i=e.attributes;if(void 0===i.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const o=i.position,s=i.normal,l=i.color,d=i.uv,p=i.uv2;void 0!==p&&(this.faceVertexUvs[1]=[]);for(let t=0;t<o.count;t++)r.vertices.push(new m().fromBufferAttribute(o,t)),void 0!==l&&r.colors.push(new M().fromBufferAttribute(l,t));const c=e.groups;if(0<c.length)for(let e=0;e<c.length;e++){const r=c[e],i=r.start,n=r.count;for(let e=i;e<i+n;e+=3)void 0===a?t(e,e+1,e+2,r.materialIndex):t(a.getX(e),a.getX(e+1),a.getX(e+2),r.materialIndex)}else if(void 0!==a)for(let e=0;e<a.count;e+=3)t(a.getX(e),a.getX(e+1),a.getX(e+2));else for(let e=0;e<o.count;e+=3)t(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(yc).negate(),this.translate(yc.x,yc.y,yc.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,a=new c;return a.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(a),this},computeFaceNormals:function(){const e=new m,t=new m;for(let r=0,a=this.faces.length;r<a;r++){const a=this.faces[r],i=this.vertices[a.a],n=this.vertices[a.b],o=this.vertices[a.c];e.subVectors(o,n),t.subVectors(i,n),e.cross(t),e.normalize(),a.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);const t=Array(this.vertices.length);for(let r=0,a=this.vertices.length;r<a;r++)t[r]=new m;if(e){const e=new m,r=new m;for(let a=0,i=this.faces.length;a<i;a++){const i=this.faces[a],n=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),r.subVectors(n,o),e.cross(r),t[i.a].add(e),t[i.b].add(e),t[i.c].add(e)}}else{this.computeFaceNormals();for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let r=0,a=this.vertices.length;r<a;r++)t[r].normalize();for(let r=0,a=this.faces.length;r<a;r++){const e=this.faces[r],a=e.vertexNormals;3===a.length?(a[0].copy(t[e.a]),a[1].copy(t[e.b]),a[2].copy(t[e.c])):(a[0]=t[e.a].clone(),a[1]=t[e.b].clone(),a[2]=t[e.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],r=t.vertexNormals;3===r.length?(r[0].copy(t.normal),r[1].copy(t.normal),r[2].copy(t.normal)):(r[0]=t.normal.clone(),r[1]=t.normal.clone(),r[2]=t.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,r=t.vertexNormals.length;e<r;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new j;e.faces=this.faces;for(let t=0,r=this.morphTargets.length;t<r;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,r=this.morphNormals[t].vertexNormals;for(let t=0,a=this.faces.length;t<a;t++){const t=new m,a={a:new m,b:new m,c:new m};e.push(t),r.push(a)}}const r=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],a=r.faceNormals[e],i=r.vertexNormals[e];a.copy(t.normal),i.a.copy(t.vertexNormals[0]),i.b.copy(t.vertexNormals[1]),i.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new y),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new x),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!(e&&e.isGeometry))return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let a=this.vertices.length,n=this.vertices,o=e.vertices,s=this.faces,l=e.faces,d=this.colors,p=e.colors,c;void 0===r&&(r=0),void 0!==t&&(c=new i().getNormalMatrix(t));for(let a=0,i=o.length;a<i;a++){const e=o[a],r=e.clone();void 0!==t&&r.applyMatrix4(t),n.push(r)}for(let a=0,i=p.length;a<i;a++)d.push(p[a].clone());for(let n=0,i=l.length;n<i;n++){let e=l[n],t=e.vertexNormals,i=e.vertexColors,o,d,p;o=new L(e.a+a,e.b+a,e.c+a),o.normal.copy(e.normal),void 0!==c&&o.normal.applyMatrix3(c).normalize();for(let e=0,r=t.length;e<r;e++)d=t[e].clone(),void 0!==c&&d.applyMatrix3(c).normalize(),o.vertexNormals.push(d);o.color.copy(e.color);for(let e=0,t=i.length;e<t;e++)p=i[e],o.vertexColors.push(p.clone());o.materialIndex=e.materialIndex+r,s.push(o)}for(let a=0,i=e.faceVertexUvs.length;a<i;a++){const t=e.faceVertexUvs[a];void 0===this.faceVertexUvs[a]&&(this.faceVertexUvs[a]=[]);for(let e=0,r=t.length;e<r;e++){const r=t[e],i=[];for(let e=0,t=r.length;e<t;e++)i.push(r[e].clone());this.faceVertexUvs[a].push(i)}}},mergeMesh:function(e){return e&&e.isMesh?void(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){const e={},t=[],r=[],a=10000;for(let n=0,i=this.vertices.length;n<i;n++){const i=this.vertices[n],o=So(i.x*a)+"_"+So(i.y*a)+"_"+So(i.z*a);void 0===e[o]?(e[o]=n,t.push(this.vertices[n]),r[n]=t.length-1):r[n]=r[e[o]]}const n=[];for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.a=r[t.a],t.b=r[t.b],t.c=r[t.c];const a=[t.a,t.b,t.c];for(let t=0;3>t;t++)if(a[t]===a[(t+1)%3]){n.push(e);break}}for(let e=n.length-1;0<=e;e--){const t=n[e];this.faces.splice(t,1);for(let e=0,r=this.faceVertexUvs.length;e<r;e++)this.faceVertexUvs[e].splice(t,1)}const i=this.vertices.length-t.length;return this.vertices=t,i},setFromPoints:function(e){this.vertices=[];for(let t=0,r=e.length;t<r;t++){const r=e[t];this.vertices.push(new m(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let r=0;r<t;r++)e[r]._id=r;e.sort(function(e,t){return e.materialIndex-t.materialIndex});const r=this.faceVertexUvs[0],a=this.faceVertexUvs[1];let n,o;r&&r.length===t&&(n=[]),a&&a.length===t&&(o=[]);for(let s=0;s<t;s++){const t=e[s]._id;n&&n.push(r[t]),o&&o.push(a[t])}n&&(this.faceVertexUvs[0]=n),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0===l[t]?(l[t]=s.length/3,s.push(e.x,e.y,e.z),l[t]):l[t]}function r(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0===p[t]?(p[t]=d.length,d.push(e.getHex()),p[t]):p[t]}function a(e){const t=e.x.toString()+e.y.toString();return void 0===u[t]?(u[t]=c.length/2,c.push(e.x,e.y),u[t]):u[t]}const i={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const t in e)void 0!==e[t]&&(i[t]=e[t]);return i}const n=[];for(let e=0;e<this.vertices.length;e++){const t=this.vertices[e];n.push(t.x,t.y,t.z)}const o=[],s=[],l={},d=[],p={},c=[],u={};for(let n=0;n<this.faces.length;n++){const i=this.faces[n],s=void 0!==this.faceVertexUvs[0][n],l=0<i.normal.length(),d=0<i.vertexNormals.length,p=1!==i.color.r||1!==i.color.g||1!==i.color.b,c=0<i.vertexColors.length;let u=0;if(u=e(u,0,0),u=e(u,1,!0),u=e(u,2,!1),u=e(u,3,s),u=e(u,4,l),u=e(u,5,d),u=e(u,6,p),u=e(u,7,c),o.push(u),o.push(i.a,i.b,i.c),o.push(i.materialIndex),s){const e=this.faceVertexUvs[0][n];o.push(a(e[0]),a(e[1]),a(e[2]))}if(l&&o.push(t(i.normal)),d){const e=i.vertexNormals;o.push(t(e[0]),t(e[1]),t(e[2]))}if(p&&o.push(r(i.color)),c){const e=i.vertexColors;o.push(r(e[0]),r(e[1]),r(e[2]))}}return i.data={},i.data.vertices=n,i.data.normals=s,0<d.length&&(i.data.colors=d),0<c.length&&(i.data.uvs=[c]),i.data.faces=o,i},clone:function(){return new j().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let r=0,a=t.length;r<a;r++)this.vertices.push(t[r].clone());const r=e.colors;for(let t=0,a=r.length;t<a;t++)this.colors.push(r[t].clone());const a=e.faces;for(let t=0,r=a.length;t<r;t++)this.faces.push(a[t].clone());for(let t=0,r=e.faceVertexUvs.length;t<r;t++){const r=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,a=r.length;e<a;e++){const a=r[e],i=[];for(let e=0,t=a.length;e<t;e++){const t=a[e];i.push(t.clone())}this.faceVertexUvs[t].push(i)}}const n=e.morphTargets;for(let t=0,r=n.length;t<r;t++){const e={name:n[t].name};if(void 0!==n[t].vertices){e.vertices=[];for(let r=0,a=n[t].vertices.length;r<a;r++)e.vertices.push(n[t].vertices[r].clone())}if(void 0!==n[t].normals){e.normals=[];for(let r=0,a=n[t].normals.length;r<a;r++)e.normals.push(n[t].normals[r].clone())}this.morphTargets.push(e)}const o=e.morphNormals;for(let t=0,r=o.length;t<r;t++){const e={};if(void 0!==o[t].vertexNormals){e.vertexNormals=[];for(let r=0,a=o[t].vertexNormals.length;r<a;r++){const a=o[t].vertexNormals[r],i={};i.a=a.a.clone(),i.b=a.b.clone(),i.c=a.c.clone(),e.vertexNormals.push(i)}}if(void 0!==o[t].faceNormals){e.faceNormals=[];for(let r=0,a=o[t].faceNormals.length;r<a;r++)e.faceNormals.push(o[t].faceNormals[r].clone())}this.morphNormals.push(e)}const s=e.skinWeights;for(let t=0,r=s.length;t<r;t++)this.skinWeights.push(s[t].clone());const l=e.skinIndices;for(let t=0,r=l.length;t<r;t++)this.skinIndices.push(l[t].clone());const d=e.lineDistances;for(let t=0,r=d.length;t<r;t++)this.lineDistances.push(d[t]);const i=e.boundingBox;null!==i&&(this.boundingBox=i.clone());const p=e.boundingSphere;return null!==p&&(this.boundingSphere=p.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class vc extends V{constructor(e,t,r,a,i,n){function o(e,t,r,a,i,n,o,u,h,v,y){const x=h+1;let _=0,S=0;const b=new m;for(let s=0;s<v+1;s++){const l=s*(o/v)-o/2;for(let o=0;o<x;o++){const m=o*(n/h)-n/2;b[e]=m*a,b[t]=l*i,b[r]=u/2,d.push(b.x,b.y,b.z),b[e]=0,b[t]=0,b[r]=0<u?1:-1,p.push(b.x,b.y,b.z),c.push(o/h),c.push(1-s/v),_+=1}}for(let s=0;s<v;s++)for(let e=0;e<h;e++){const t=g+e+x*s,r=g+e+x*(s+1),a=g+(e+1)+x*(s+1),i=g+(e+1)+x*s;l.push(t,r,i),l.push(r,a,i),S+=6}s.addGroup(f,S,y),f+=S,g+=_}super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:n};const s=this;e=e||1,t=t||1,r=r||1,a=Do(a)||1,i=Do(i)||1,n=Do(n)||1;const l=[],d=[],p=[],c=[];let g=0,f=0;o("z","y","x",-1,-1,r,t,e,n,i,0),o("z","y","x",1,-1,r,t,-e,n,i,1),o("x","z","y",1,1,e,r,t,a,n,2),o("x","z","y",1,-1,e,r,-t,a,n,3),o("x","y","z",1,-1,e,t,r,a,i,4),o("x","y","z",-1,-1,e,t,-r,a,i,5),this.setIndex(l),this.setAttribute("position",new F(d,3)),this.setAttribute("normal",new F(p,3)),this.setAttribute("uv",new F(c,2))}}const xc={clone:X,merge:Y};var _c="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",bc="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";Z.prototype=Object.create(A.prototype),Z.prototype.constructor=Z,Z.prototype.isShaderMaterial=!0,Z.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=X(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this},Z.prototype.toJSON=function(e){const t=A.prototype.toJSON.call(this,e);for(const r in t.uniforms={},this.uniforms){const a=this.uniforms[r],i=a.value;t.uniforms[r]=i&&i.isTexture?{type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?{type:"c",value:i.getHex()}:i&&i.isVector2?{type:"v2",value:i.toArray()}:i&&i.isVector3?{type:"v3",value:i.toArray()}:i&&i.isVector4?{type:"v4",value:i.toArray()}:i&&i.isMatrix3?{type:"m3",value:i.toArray()}:i&&i.isMatrix4?{type:"m4",value:i.toArray()}:{value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const t in this.extensions)!0===this.extensions[t]&&(r[t]=!0);return 0<Object.keys(r).length&&(t.extensions=r),t},J.prototype=Object.assign(Object.create(f.prototype),{constructor:J,isCamera:!0,copy:function(e,t){return f.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new m),this.updateMatrixWorld(!0);const r=this.matrixWorld.elements;return t.set(-r[8],-r[9],-r[10]).normalize()},updateMatrixWorld:function(e){f.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){f.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}}),Q.prototype=Object.assign(Object.create(J.prototype),{constructor:Q,isPerspectiveCamera:!0,copy:function(e,t){return J.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Pd.RAD2DEG*yo(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=ho(.5*Pd.DEG2RAD*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Pd.RAD2DEG*yo(ho(.5*Pd.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Po(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Ro(this.aspect,1)},setViewOffset:function(e,t,r,a,i,n){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let e=this.near,t=e*ho(.5*Pd.DEG2RAD*this.fov)/this.zoom,r=2*t,a=this.aspect*r,i=-.5*a,n=this.view;if(null!==this.view&&this.view.enabled){const e=n.fullWidth,o=n.fullHeight;i+=n.offsetX*a/e,t-=n.offsetY*r/o,a*=n.width/e,r*=n.height/o}const o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+a,t,t-r,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=f.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Sc=90,Mc=1;K.prototype=Object.create(f.prototype),K.prototype.constructor=K,$.prototype=Object.create(l.prototype),$.prototype.constructor=$,$.prototype.isWebGLCubeRenderTarget=!0,$.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;const r=new h,a={uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}"},i=new Z({name:"CubemapFromEquirect",uniforms:X(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:ko,blending:qo});i.uniforms.tEquirect.value=t;const n=new k(new vc(5,5,5),i);r.add(n);const o=new K(1,10,this);return o.update(e,r),n.geometry.dispose(),n.material.dispose(),this},ee.prototype=Object.create(o.prototype),ee.prototype.constructor=ee,ee.prototype.isDataTexture=!0;const Tc=new x,Ec=new m;Object.assign(te.prototype,{set:function(e,t,r,a,i,n){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(a),o[4].copy(i),o[5].copy(n),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){const t=this.planes;for(let r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromProjectionMatrix:function(e){const t=this.planes,r=e.elements,a=r[0],i=r[1],n=r[2],o=r[3],s=r[4],l=r[5],d=r[6],p=r[7],c=r[8],u=r[9],m=r[10],g=r[11],f=r[12],h=r[13],y=r[14],v=r[15];return t[0].setComponents(o-a,p-s,g-c,v-f).normalize(),t[1].setComponents(o+a,p+s,g+c,v+f).normalize(),t[2].setComponents(o+i,p+l,g+u,v+h).normalize(),t[3].setComponents(o-i,p-l,g-u,v-h).normalize(),t[4].setComponents(o-n,p-d,g-m,v-y).normalize(),t[5].setComponents(o+n,p+d,g+m,v+y).normalize(),this},intersectsObject:function(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Tc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Tc)},intersectsSprite:function(e){return Tc.center.set(0,0,0),Tc.radius=.7071067811865476,Tc.applyMatrix4(e.matrixWorld),this.intersectsSphere(Tc)},intersectsSphere:function(e){const t=this.planes,r=e.center,a=-e.radius;for(let n=0;6>n;n++){const e=t[n].distanceToPoint(r);if(e<a)return!1}return!0},intersectsBox:function(e){const t=this.planes;for(let r=0;6>r;r++){const a=t[r];if(Ec.x=0<a.normal.x?e.max.x:e.min.x,Ec.y=0<a.normal.y?e.max.y:e.min.y,Ec.z=0<a.normal.z?e.max.z:e.min.z,0>a.distanceToPoint(Ec))return!1}return!0},containsPoint:function(e){const t=this.planes;for(let r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}});const wc={common:{diffuse:{value:new M(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new i},uv2Transform:{value:new i},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new n(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new M(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new M(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new i}},sprite:{diffuse:{value:new M(15658734)},opacity:{value:1},center:{value:new n(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new i}}};ie.prototype=Object.create(j.prototype),ie.prototype.constructor=ie,ne.prototype=Object.create(V.prototype),ne.prototype.constructor=ne;const Lc={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Ac={basic:{uniforms:Y([wc.common,wc.specularmap,wc.envmap,wc.aomap,wc.lightmap,wc.fog]),vertexShader:Lc.meshbasic_vert,fragmentShader:Lc.meshbasic_frag},lambert:{uniforms:Y([wc.common,wc.specularmap,wc.envmap,wc.aomap,wc.lightmap,wc.emissivemap,wc.fog,wc.lights,{emissive:{value:new M(0)}}]),vertexShader:Lc.meshlambert_vert,fragmentShader:Lc.meshlambert_frag},phong:{uniforms:Y([wc.common,wc.specularmap,wc.envmap,wc.aomap,wc.lightmap,wc.emissivemap,wc.bumpmap,wc.normalmap,wc.displacementmap,wc.fog,wc.lights,{emissive:{value:new M(0)},specular:{value:new M(1118481)},shininess:{value:30}}]),vertexShader:Lc.meshphong_vert,fragmentShader:Lc.meshphong_frag},standard:{uniforms:Y([wc.common,wc.envmap,wc.aomap,wc.lightmap,wc.emissivemap,wc.bumpmap,wc.normalmap,wc.displacementmap,wc.roughnessmap,wc.metalnessmap,wc.fog,wc.lights,{emissive:{value:new M(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Lc.meshphysical_vert,fragmentShader:Lc.meshphysical_frag},toon:{uniforms:Y([wc.common,wc.aomap,wc.lightmap,wc.emissivemap,wc.bumpmap,wc.normalmap,wc.displacementmap,wc.gradientmap,wc.fog,wc.lights,{emissive:{value:new M(0)}}]),vertexShader:Lc.meshtoon_vert,fragmentShader:Lc.meshtoon_frag},matcap:{uniforms:Y([wc.common,wc.bumpmap,wc.normalmap,wc.displacementmap,wc.fog,{matcap:{value:null}}]),vertexShader:Lc.meshmatcap_vert,fragmentShader:Lc.meshmatcap_frag},points:{uniforms:Y([wc.points,wc.fog]),vertexShader:Lc.points_vert,fragmentShader:Lc.points_frag},dashed:{uniforms:Y([wc.common,wc.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Lc.linedashed_vert,fragmentShader:Lc.linedashed_frag},depth:{uniforms:Y([wc.common,wc.displacementmap]),vertexShader:Lc.depth_vert,fragmentShader:Lc.depth_frag},normal:{uniforms:Y([wc.common,wc.bumpmap,wc.normalmap,wc.displacementmap,{opacity:{value:1}}]),vertexShader:Lc.normal_vert,fragmentShader:Lc.normal_frag},sprite:{uniforms:Y([wc.sprite,wc.fog]),vertexShader:Lc.sprite_vert,fragmentShader:Lc.sprite_frag},background:{uniforms:{uvTransform:{value:new i},t2D:{value:null}},vertexShader:Lc.background_vert,fragmentShader:Lc.background_frag},cube:{uniforms:Y([wc.envmap,{opacity:{value:1}}]),vertexShader:Lc.cube_vert,fragmentShader:Lc.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Lc.equirect_vert,fragmentShader:Lc.equirect_frag},distanceRGBA:{uniforms:Y([wc.common,wc.displacementmap,{referencePosition:{value:new m},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Lc.distanceRGBA_vert,fragmentShader:Lc.distanceRGBA_frag},shadow:{uniforms:Y([wc.lights,wc.fog,{color:{value:new M(0)},opacity:{value:1}}]),vertexShader:Lc.shadow_vert,fragmentShader:Lc.shadow_frag}};Ac.physical={uniforms:Y([Ac.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new n(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new M(0)},transparency:{value:0}}]),vertexShader:Lc.meshphysical_vert,fragmentShader:Lc.meshphysical_frag},xe.prototype=Object.create(o.prototype),xe.prototype.constructor=xe,xe.prototype.isCubeTexture=!0,Object.defineProperty(xe.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),_e.prototype=Object.create(o.prototype),_e.prototype.constructor=_e,_e.prototype.isDataTexture2DArray=!0,be.prototype=Object.create(o.prototype),be.prototype.constructor=be,be.prototype.isDataTexture3D=!0;const Rc=new o,Pc=new _e,Cc=new be,Ic=new xe,Dc=[],Nc=[],zc=new Float32Array(16),Bc=new Float32Array(9),Uc=new Float32Array(4);it.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Te(t,e)},nt.prototype.setValue=function(e,t,r){const a=this.seq;for(let o=0,i=a.length;o!==i;++o){const i=a[o];i.setValue(e,t[i.id],r)}};const Fc=/([\w\d_]+)(\])?(\[|\.)?/g;lt.prototype.setValue=function(e,t,r,a){const i=this.map[t];void 0!==i&&i.setValue(e,r,a)},lt.prototype.setOptional=function(e,t,r){const a=t[r];void 0!==a&&this.setValue(e,r,a)},lt.upload=function(e,t,r,a){for(let o=0,i=t.length;o!==i;++o){const i=t[o],n=r[i.id];!1!==n.needsUpdate&&i.setValue(e,n.value,a)}},lt.seqWithValue=function(e,t){const a=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&a.push(i)}return a};let Gc=0;const Oc=/^[ \t]*#include +<([\w\d./]+)>/gm,Hc=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Vc=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;let kc=0;jt.prototype=Object.create(A.prototype),jt.prototype.constructor=jt,jt.prototype.isMeshDepthMaterial=!0,jt.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},qt.prototype=Object.create(A.prototype),qt.prototype.constructor=qt,qt.prototype.isMeshDistanceMaterial=!0,qt.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var Wc="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",jc="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";Qt.prototype=Object.assign(Object.create(Q.prototype),{constructor:Qt,isArrayCamera:!0}),Kt.prototype=Object.assign(Object.create(f.prototype),{constructor:Kt,isGroup:!0}),Object.assign($t.prototype,{constructor:$t,getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Kt,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Kt,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),this},update:function(e,t,r){let a=null,i=null;const n=this._targetRay,o=this._grip;return e&&(null!==n&&(a=t.getPose(e.targetRaySpace,r),null!==a&&(n.matrix.fromArray(a.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale))),null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)))),null!==n&&(n.visible=null!==a),null!==o&&(o.visible=null!==i),this}}),Object.assign(er.prototype,a.prototype),ar.prototype=Object.assign(Object.create(rr.prototype),{constructor:ar,isWebGL1Renderer:!0}),Object.assign(ir.prototype,{isFogExp2:!0,clone:function(){return new ir(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(nr.prototype,{isFog:!0,clone:function(){return new nr(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(or.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(or.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(let a=0,i=this.stride;a<i;a++)this.array[e+a]=t.array[r+a];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Pd.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),r=new or(t,this.stride);return r.setUsage(this.usage),r},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Pd.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const qc=new m;Object.defineProperties(sr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(sr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,r=this.data.count;t<r;t++)qc.x=this.getX(t),qc.y=this.getY(t),qc.z=this.getZ(t),qc.applyMatrix4(e),this.setXYZ(t,qc.x,qc.y,qc.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this.data.array[e+3]=i,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return new P(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new sr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),lr.prototype=Object.create(A.prototype),lr.prototype.constructor=lr,lr.prototype.isSpriteMaterial=!0,lr.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let Xc;const Yc=new m,Zc=new m,Jc=new m,Qc=new n,Kc=new n,$c=new c,eu=new m,tu=new m,ru=new m,au=new n,iu=new n,nu=new n;dr.prototype=Object.assign(Object.create(f.prototype),{constructor:dr,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error("THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites."),Zc.setFromMatrixScale(this.matrixWorld),$c.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Jc.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Zc.multiplyScalar(-Jc.z);const r=this.material.rotation;let a,i;0!==r&&(i=To(r),a=Mo(r));const o=this.center;pr(eu.set(-.5,-.5,0),Jc,o,Zc,a,i),pr(tu.set(.5,-.5,0),Jc,o,Zc,a,i),pr(ru.set(.5,.5,0),Jc,o,Zc,a,i),au.set(0,0),iu.set(1,0),nu.set(1,1);let s=e.ray.intersectTriangle(eu,tu,ru,!1,Yc);if(!(null===s&&(pr(tu.set(-.5,.5,0),Jc,o,Zc,a,i),iu.set(0,1),s=e.ray.intersectTriangle(eu,ru,tu,!1,Yc),null===s))){const r=e.ray.origin.distanceTo(Yc);r<e.near||r>e.far||t.push({distance:r,point:Yc.clone(),uv:S.getUV(Yc,eu,tu,ru,au,iu,nu,new n),face:null,object:this})}},copy:function(e){return f.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const ou=new m,su=new m;cr.prototype=Object.assign(Object.create(f.prototype),{constructor:cr,isLOD:!0,copy:function(e){f.prototype.copy.call(this,e,!1);const t=e.levels;for(let r=0,a=t.length;r<a;r++){const e=t[r];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){void 0===t&&(t=0),t=_o(t);const r=this.levels;let a;for(a=0;a<r.length&&!(t<r[a].distance);a++);return r.splice(a,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(0<t.length){let r,a;for(r=1,a=t.length;r<a&&!(e<t[r].distance);r++);return t[r-1].object}return null},raycast:function(e,t){const r=this.levels;if(0<r.length){ou.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(ou);this.getObjectForDistance(r).raycast(e,t)}},update:function(e){const t=this.levels;if(1<t.length){ou.setFromMatrixPosition(e.matrixWorld),su.setFromMatrixPosition(this.matrixWorld);const r=ou.distanceTo(su)/e.zoom;t[0].object.visible=!0;let a,i;for(a=1,i=t.length;a<i&&r>=t[a].distance;a++)t[a-1].object.visible=!1,t[a].object.visible=!0;for(this._currentLevel=a-1;a<i;a++)t[a].object.visible=!1}},toJSON:function(e){const t=f.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const r=this.levels;for(let a=0,i=r.length;a<i;a++){const e=r[a];t.object.levels.push({object:e.object.uuid,distance:e.distance})}return t}}),ur.prototype=Object.assign(Object.create(k.prototype),{constructor:ur,isSkinnedMesh:!0,copy:function(e){return k.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new s,t=this.geometry.attributes.skinWeight;for(let r=0,a=t.count;r<a;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);const a=1/e.manhattanLength();a==Infinity?e.set(1,0,0,0):e.multiplyScalar(a),t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){k.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new m,t=new s,r=new s,a=new m,n=new c;return function(i,o){const s=this.skeleton,l=this.geometry;t.fromBufferAttribute(l.attributes.skinIndex,i),r.fromBufferAttribute(l.attributes.skinWeight,i),e.fromBufferAttribute(l.attributes.position,i).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let l=0;4>l;l++){const i=r.getComponent(l);if(0!==i){const r=t.getComponent(l);n.multiplyMatrices(s.bones[r].matrixWorld,s.boneInverses[r]),o.addScaledVector(a.copy(e).applyMatrix4(n),i)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const lu=new c,du=new c;Object.assign(mr.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const t=new c;this.bones[e]&&t.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,r=this.boneMatrices,a=this.boneTexture;for(let a=0,i=e.length;a<i;a++){const i=e[a]?e[a].matrixWorld:du;lu.multiplyMatrices(i,t[a]),lu.toArray(r,16*a)}void 0!==a&&(a.needsUpdate=!0)},clone:function(){return new mr(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,r=this.bones.length;t<r;t++){const r=this.bones[t];if(r.name===e)return r}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),gr.prototype=Object.assign(Object.create(f.prototype),{constructor:gr,isBone:!0});const pu=new c,cu=new c,uu=[],mu=new k;fr.prototype=Object.assign(Object.create(k.prototype),{constructor:fr,isInstancedMesh:!0,copy:function(e){return k.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const r=this.matrixWorld,a=this.count;if(mu.geometry=this.geometry,mu.material=this.material,void 0!==mu.material)for(let n=0;n<a;n++){this.getMatrixAt(n,pu),cu.multiplyMatrices(r,pu),mu.matrixWorld=cu,mu.raycast(e,uu);for(let e=0,r=uu.length;e<r;e++){const r=uu[e];r.instanceId=n,r.object=this,t.push(r)}uu.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){}}),hr.prototype=Object.create(A.prototype),hr.prototype.constructor=hr,hr.prototype.isLineBasicMaterial=!0,hr.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const gu=new m,fu=new m,hu=new c,yu=new _,vu=new x;yr.prototype=Object.assign(Object.create(f.prototype),{constructor:yr,isLine:!0,copy:function(e){return f.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry){if(null===e.index){const t=e.attributes.position,r=[0];for(let e=1,a=t.count;e<a;e++)gu.fromBufferAttribute(t,e-1),fu.fromBufferAttribute(t,e),r[e]=r[e-1],r[e]+=gu.distanceTo(fu);e.setAttribute("lineDistance",new F(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;r[0]=0;for(let e=1,a=t.length;e<a;e++)r[e]=r[e-1],r[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const r=this.geometry,a=this.matrixWorld,i=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),vu.copy(r.boundingSphere),vu.applyMatrix4(a),vu.radius+=i,!1!==e.ray.intersectsSphere(vu)){hu.getInverse(a),yu.copy(e.ray).applyMatrix4(hu);const n=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=n*n,s=new m,l=new m,d=new m,p=new m,c=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){const a=r.index,i=r.attributes,n=i.position.array;if(null!==a){const r=a.array;for(let u=0,a=r.length-1;u<a;u+=c){const c=r[u],a=r[u+1];s.fromArray(n,3*c),l.fromArray(n,3*a);const m=yu.distanceSqToSegment(s,l,p,d);if(m>o)continue;p.applyMatrix4(this.matrixWorld);const g=e.ray.origin.distanceTo(p);g<e.near||g>e.far||t.push({distance:g,point:d.clone().applyMatrix4(this.matrixWorld),index:u,face:null,faceIndex:null,object:this})}}else for(let r=0,a=n.length/3-1;r<a;r+=c){s.fromArray(n,3*r),l.fromArray(n,3*r+3);const a=yu.distanceSqToSegment(s,l,p,d);if(a>o)continue;p.applyMatrix4(this.matrixWorld);const c=e.ray.origin.distanceTo(p);c<e.near||c>e.far||t.push({distance:c,point:d.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){const a=r.vertices,n=a.length;for(let r=0;r<n-1;r+=c){const n=yu.distanceSqToSegment(a[r],a[r+1],p,d);if(n>o)continue;p.applyMatrix4(this.matrixWorld);const s=e.ray.origin.distanceTo(p);s<e.near||s>e.far||t.push({distance:s,point:d.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(0<r.length){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||t+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const xu=new m,_u=new m;vr.prototype=Object.assign(Object.create(yr.prototype),{constructor:vr,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry){if(null===e.index){const t=e.attributes.position,r=[];for(let e=0,a=t.count;e<a;e+=2)xu.fromBufferAttribute(t,e),_u.fromBufferAttribute(t,e+1),r[e]=0==e?0:r[e-1],r[e+1]=r[e]+xu.distanceTo(_u);e.setAttribute("lineDistance",new F(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;for(let e=0,a=t.length;e<a;e+=2)xu.copy(t[e]),_u.copy(t[e+1]),r[e]=0==e?0:r[e-1],r[e+1]=r[e]+xu.distanceTo(_u)}return this}}),xr.prototype=Object.assign(Object.create(yr.prototype),{constructor:xr,isLineLoop:!0}),_r.prototype=Object.create(A.prototype),_r.prototype.constructor=_r,_r.prototype.isPointsMaterial=!0,_r.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const bu=new c,Su=new _,Mu=new x,Tu=new m;br.prototype=Object.assign(Object.create(f.prototype),{constructor:br,isPoints:!0,copy:function(e){return f.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const r=this.geometry,n=this.matrixWorld,a=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),Mu.copy(r.boundingSphere),Mu.applyMatrix4(n),Mu.radius+=a,!1!==e.ray.intersectsSphere(Mu)){bu.getInverse(n),Su.copy(e.ray).applyMatrix4(bu);const i=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=i*i;if(r.isBufferGeometry){const a=r.index,i=r.attributes,s=i.position.array;if(null!==a){const r=a.array;for(let l=0,a=r.length;l<a;l++){const i=r[l];Tu.fromArray(s,3*i),Sr(Tu,i,o,n,e,t,this)}}else for(let r=0,a=s.length/3;r<a;r++)Tu.fromArray(s,3*r),Sr(Tu,r,o,n,e,t,this)}else{const a=r.vertices;for(let r=0,i=a.length;r<i;r++)Sr(a[r],r,o,n,e,t,this)}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(0<r.length){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||t+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),Mr.prototype=Object.assign(Object.create(o.prototype),{constructor:Mr,isVideoTexture:!0,update:function(){const e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Tr.prototype=Object.create(o.prototype),Tr.prototype.constructor=Tr,Tr.prototype.isCompressedTexture=!0,Er.prototype=Object.create(o.prototype),Er.prototype.constructor=Er,Er.prototype.isCanvasTexture=!0,wr.prototype=Object.create(o.prototype),wr.prototype.constructor=wr,wr.prototype.isDepthTexture=!0,Lr.prototype=Object.create(V.prototype),Lr.prototype.constructor=Lr,Ar.prototype=Object.create(j.prototype),Ar.prototype.constructor=Ar,Rr.prototype=Object.create(V.prototype),Rr.prototype.constructor=Rr,Pr.prototype=Object.create(j.prototype),Pr.prototype.constructor=Pr,Cr.prototype=Object.create(V.prototype),Cr.prototype.constructor=Cr,Ir.prototype=Object.create(j.prototype),Ir.prototype.constructor=Ir,Dr.prototype=Object.create(Cr.prototype),Dr.prototype.constructor=Dr,Nr.prototype=Object.create(j.prototype),Nr.prototype.constructor=Nr,zr.prototype=Object.create(Cr.prototype),zr.prototype.constructor=zr,Br.prototype=Object.create(j.prototype),Br.prototype.constructor=Br,Ur.prototype=Object.create(Cr.prototype),Ur.prototype.constructor=Ur,Fr.prototype=Object.create(j.prototype),Fr.prototype.constructor=Fr,Gr.prototype=Object.create(Cr.prototype),Gr.prototype.constructor=Gr,Or.prototype=Object.create(j.prototype),Or.prototype.constructor=Or,Hr.prototype=Object.create(V.prototype),Hr.prototype.constructor=Hr,Hr.prototype.toJSON=function(){const e=V.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e},Vr.prototype=Object.create(j.prototype),Vr.prototype.constructor=Vr,kr.prototype=Object.create(V.prototype),kr.prototype.constructor=kr,Wr.prototype=Object.create(j.prototype),Wr.prototype.constructor=Wr,jr.prototype=Object.create(V.prototype),jr.prototype.constructor=jr;const Eu={triangulate:function(e,t,r){r=r||2;let a=t&&t.length,n=a?t[0]*r:e.length,i=qr(e,0,n,r,!0),o=[];if(!i||i.next===i.prev)return o;let s,l,d,p,c,u,m;if(a&&(i=$r(e,t,i,r)),e.length>80*r){s=d=e[0],l=p=e[1];for(let t=r;t<n;t+=r)c=e[t],u=e[t+1],c<s&&(s=c),u<l&&(l=u),c>d&&(d=c),u>p&&(p=u);m=Ro(d-s,p-l),m=0===m?0:1/m}return Yr(i,o,r,s,l,m),o}},wu={area:function(e){const t=e.length;let r=0;for(let a=t-1,i=0;i<t;a=i++)r+=e[a].x*e[i].y-e[i].x*e[a].y;return .5*r},isClockWise:function(e){return 0>wu.area(e)},triangulateShape:function(e,t){const r=[],a=[],n=[];Ma(e),Ta(r,e);let o=e.length;t.forEach(Ma);for(let n=0;n<t.length;n++)a.push(o),o+=t[n].length,Ta(r,t[n]);const s=Eu.triangulate(r,a);for(let r=0;r<s.length;r+=3)n.push(s.slice(r,r+3));return n}};Ea.prototype=Object.create(j.prototype),Ea.prototype.constructor=Ea,Ea.prototype.toJSON=function(){const e=j.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return La(t,r,e)},wa.prototype=Object.create(V.prototype),wa.prototype.constructor=wa,wa.prototype.toJSON=function(){const e=V.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return La(t,r,e)};const Lu={generateTopUV:function(e,t,r,a,i){const o=t[3*r],s=t[3*r+1],l=t[3*a],d=t[3*a+1],p=t[3*i],c=t[3*i+1];return[new n(o,s),new n(l,d),new n(p,c)]},generateSideWallUV:function(e,t,r,a,i,o){const s=t[3*r],l=t[3*r+1],d=t[3*r+2],p=t[3*a],c=t[3*a+1],u=t[3*a+2],m=t[3*i],g=t[3*i+1],f=t[3*i+2],h=t[3*o],y=t[3*o+1],v=t[3*o+2];return .01>_o(l-c)?[new n(s,1-d),new n(p,1-u),new n(m,1-f),new n(h,1-v)]:[new n(l,1-d),new n(c,1-u),new n(g,1-f),new n(y,1-v)]}};Aa.prototype=Object.create(j.prototype),Aa.prototype.constructor=Aa,Ra.prototype=Object.create(wa.prototype),Ra.prototype.constructor=Ra,Pa.prototype=Object.create(j.prototype),Pa.prototype.constructor=Pa,Ca.prototype=Object.create(V.prototype),Ca.prototype.constructor=Ca,Ia.prototype=Object.create(j.prototype),Ia.prototype.constructor=Ia,Da.prototype=Object.create(V.prototype),Da.prototype.constructor=Da,Na.prototype=Object.create(j.prototype),Na.prototype.constructor=Na,za.prototype=Object.create(V.prototype),za.prototype.constructor=za,Ba.prototype=Object.create(j.prototype),Ba.prototype.constructor=Ba,Ba.prototype.toJSON=function(){const e=j.prototype.toJSON.call(this),t=this.parameters.shapes;return Fa(t,e)},Ua.prototype=Object.create(V.prototype),Ua.prototype.constructor=Ua,Ua.prototype.toJSON=function(){const e=V.prototype.toJSON.call(this),t=this.parameters.shapes;return Fa(t,e)},Ga.prototype=Object.create(V.prototype),Ga.prototype.constructor=Ga,Oa.prototype=Object.create(j.prototype),Oa.prototype.constructor=Oa,Ha.prototype=Object.create(V.prototype),Ha.prototype.constructor=Ha,Va.prototype=Object.create(Oa.prototype),Va.prototype.constructor=Va,ka.prototype=Object.create(Ha.prototype),ka.prototype.constructor=ka,Wa.prototype=Object.create(j.prototype),Wa.prototype.constructor=Wa,ja.prototype=Object.create(V.prototype),ja.prototype.constructor=ja;var Au=Object.freeze({__proto__:null,WireframeGeometry:Lr,ParametricGeometry:Ar,ParametricBufferGeometry:Rr,TetrahedronGeometry:Ir,TetrahedronBufferGeometry:Dr,OctahedronGeometry:Nr,OctahedronBufferGeometry:zr,IcosahedronGeometry:Br,IcosahedronBufferGeometry:Ur,DodecahedronGeometry:Fr,DodecahedronBufferGeometry:Gr,PolyhedronGeometry:Pr,PolyhedronBufferGeometry:Cr,TubeGeometry:Or,TubeBufferGeometry:Hr,TorusKnotGeometry:Vr,TorusKnotBufferGeometry:kr,TorusGeometry:Wr,TorusBufferGeometry:jr,TextGeometry:Aa,TextBufferGeometry:Ra,SphereGeometry:Pa,SphereBufferGeometry:Ca,RingGeometry:Ia,RingBufferGeometry:Da,PlaneGeometry:ie,PlaneBufferGeometry:ne,LatheGeometry:Na,LatheBufferGeometry:za,ShapeGeometry:Ba,ShapeBufferGeometry:Ua,ExtrudeGeometry:Ea,ExtrudeBufferGeometry:wa,EdgesGeometry:Ga,ConeGeometry:Va,ConeBufferGeometry:ka,CylinderGeometry:Oa,CylinderBufferGeometry:Ha,CircleGeometry:Wa,CircleBufferGeometry:ja,BoxGeometry:class extends j{constructor(e,t,r,a,i,n){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:n},this.fromBufferGeometry(new vc(e,t,r,a,i,n)),this.mergeVertices()}},BoxBufferGeometry:vc});qa.prototype=Object.create(A.prototype),qa.prototype.constructor=qa,qa.prototype.isShadowMaterial=!0,qa.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this},Xa.prototype=Object.create(Z.prototype),Xa.prototype.constructor=Xa,Xa.prototype.isRawShaderMaterial=!0,Ya.prototype=Object.create(A.prototype),Ya.prototype.constructor=Ya,Ya.prototype.isMeshStandardMaterial=!0,Ya.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},Za.prototype=Object.create(Ya.prototype),Za.prototype.constructor=Za,Za.prototype.isMeshPhysicalMaterial=!0,Za.prototype.copy=function(e){return Ya.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,this.sheen=e.sheen?(this.sheen||new M).copy(e.sheen):null,this.transparency=e.transparency,this},Ja.prototype=Object.create(A.prototype),Ja.prototype.constructor=Ja,Ja.prototype.isMeshPhongMaterial=!0,Ja.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Qa.prototype=Object.create(A.prototype),Qa.prototype.constructor=Qa,Qa.prototype.isMeshToonMaterial=!0,Qa.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Ka.prototype=Object.create(A.prototype),Ka.prototype.constructor=Ka,Ka.prototype.isMeshNormalMaterial=!0,Ka.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},$a.prototype=Object.create(A.prototype),$a.prototype.constructor=$a,$a.prototype.isMeshLambertMaterial=!0,$a.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ei.prototype=Object.create(A.prototype),ei.prototype.constructor=ei,ei.prototype.isMeshMatcapMaterial=!0,ei.prototype.copy=function(e){return A.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ti.prototype=Object.create(hr.prototype),ti.prototype.constructor=ti,ti.prototype.isLineDashedMaterial=!0,ti.prototype.copy=function(e){return hr.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Ru=Object.freeze({__proto__:null,ShadowMaterial:qa,SpriteMaterial:lr,RawShaderMaterial:Xa,ShaderMaterial:Z,PointsMaterial:_r,MeshPhysicalMaterial:Za,MeshStandardMaterial:Ya,MeshPhongMaterial:Ja,MeshToonMaterial:Qa,MeshNormalMaterial:Ka,MeshLambertMaterial:$a,MeshDepthMaterial:jt,MeshDistanceMaterial:qt,MeshBasicMaterial:R,MeshMatcapMaterial:ei,LineDashedMaterial:ti,LineBasicMaterial:hr,Material:A});const Pu={arraySlice:function(e,t,r){return Pu.isTypedArray(e)?new e.constructor(e.subarray(t,void 0===r?e.length:r)):e.slice(t,r)},convertArray:function(e,t,r){return e&&(r||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,r=Array(t);for(let a=0;a!==t;++a)r[a]=a;return r.sort(function(t,r){return e[t]-e[r]}),r},sortedArray:function(e,t,r){const a=e.length,i=new e.constructor(a);for(let n=0,o=0;o!==a;++n){const a=r[n]*t;for(let r=0;r!==t;++r)i[o++]=e[a+r]}return i},flattenJSON:function(e,t,r,a){let n=1,i=e[0];for(;void 0!==i&&void 0===i[a];)i=e[n++];if(void 0===i)return;let o=i[a];if(void 0!==o)if(Array.isArray(o))do o=i[a],void 0!==o&&(t.push(i.time),r.push.apply(r,o)),i=e[n++];while(void 0!==i);else if(void 0!==o.toArray)do o=i[a],void 0!==o&&(t.push(i.time),o.toArray(r,r.length)),i=e[n++];while(void 0!==i);else do o=i[a],void 0!==o&&(t.push(i.time),r.push(o)),i=e[n++];while(void 0!==i)},subclip:function(e,t,r,a,i){i=i||30;const n=e.clone();n.name=t;const o=[];for(let s=0;s<n.tracks.length;++s){const e=n.tracks[s],t=e.getValueSize(),l=[],d=[];for(let n=0;n<e.times.length;++n){const o=e.times[n]*i;if(!(o<r||o>=a)){l.push(e.times[n]);for(let r=0;r<t;++r)d.push(e.values[n*t+r])}}0===l.length||(e.times=Pu.convertArray(l,e.times.constructor),e.values=Pu.convertArray(d,e.values.constructor),o.push(e))}n.tracks=o;let s=Infinity;for(let o=0;o<n.tracks.length;++o)s>n.tracks[o].times[0]&&(s=n.tracks[o].times[0]);for(let o=0;o<n.tracks.length;++o)n.tracks[o].shift(-1*s);return n.resetDuration(),n},makeClipAdditive:function(e,t,r,a){void 0===t&&(t=0),void 0===r&&(r=e),(void 0===a||0>=a)&&(a=30);const n=e.tracks.length,o=t/a;for(let s=0;s<n;++s){const t=r.tracks[s],a=t.ValueTypeName;if("bool"===a||"string"===a)continue;const i=e.tracks.find(function(e){return e.name===t.name&&e.ValueTypeName===a});if(void 0===i)continue;const n=t.getValueSize(),l=t.times.length-1;let d;if(o<=t.times[0])d=Pu.arraySlice(t.values,0,t.valueSize);else if(o>=t.times[l]){d=Pu.arraySlice(t.values,l*n)}else{const e=t.createInterpolant();e.evaluate(o),d=e.resultBuffer}if("quaternion"===a){const e=new p(d[0],d[1],d[2],d[3]).normalize().conjugate();e.toArray(d)}const c=i.times.length;for(let e=0;e<c;++e){const t=e*n;if("quaternion"===a)p.multiplyQuaternionsFlat(i.values,t,d,0,i.values,t);else for(let e=0;e<n;++e)i.values[t+e]-=d[e]}}return e.blendMode=ud,e}};Object.assign(ri.prototype,{evaluate:function(e){let t=this.parameterPositions,r=this._cachedIndex,a=t[r],i=t[r-1];validate_interval:{seek:{let n;linear_scan:{forward_scan:if(!(e<a)){for(let n=r+2;;){if(void 0===a){if(e<i)break forward_scan;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===n)break;if(i=a,a=t[++r],e<a)break seek}n=t.length;break linear_scan}if(!(e>=i)){const o=t[1];e<o&&(r=2,i=o);for(let n=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(r===n)break;if(a=i,i=t[--r-1],e>=i)break seek}n=r,r=0;break linear_scan}break validate_interval}for(;r<n;){const a=r+n>>>1;e<t[a]?n=a:r=a+1}if(a=t[r],i=t[r-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(void 0===a)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,a)}return this.interpolate_(r,i,e,a)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,r=this.sampleValues,a=this.valueSize;for(let n=0;n!==a;++n)t[n]=r[e*a+n];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(ri.prototype,{beforeStart_:ri.prototype.copySampleValue_,afterEnd_:ri.prototype.copySampleValue_}),ai.prototype=Object.assign(Object.create(ri.prototype),{constructor:ai,DefaultSettings_:{endingStart:ld,endingEnd:ld},intervalChanged_:function(e,t,r){let a=this.parameterPositions,i=e-2,n=e+1,o=a[i],s=a[n];if(void 0===o)switch(this.getSettings_().endingStart){case dd:i=e,o=2*t-r;break;case pd:i=a.length-2,o=t+a[i]-a[i+1];break;default:i=e,o=r;}if(void 0===s)switch(this.getSettings_().endingEnd){case dd:n=e,s=2*r-t;break;case pd:n=1,s=r+a[1]-a[0];break;default:n=e-1,s=t;}const l=.5*(r-t),d=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-r),this._offsetPrev=i*d,this._offsetNext=n*d},interpolate_:function(e,r,a,t){const n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,l=e*s,d=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,m=this._weightNext,g=(a-r)/(t-r),p=g*g,f=p*g;for(let h=0;h!==s;++h)n[h]=(-u*f+2*u*p-u*g)*o[d+h]+((1+u)*f+(-1.5-2*u)*p+(-.5+u)*g+1)*o[l-s+h]+((-1-m)*f+(1.5+m)*p+.5*g)*o[l+h]+(m*f-m*p)*o[c+h];return n}}),ii.prototype=Object.assign(Object.create(ri.prototype),{constructor:ii,interpolate_:function(e,r,a,t){const n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,l=e*s,d=(a-r)/(t-r);for(let p=0;p!==s;++p)n[p]=o[l-s+p]*(1-d)+o[l+p]*d;return n}}),ni.prototype=Object.assign(Object.create(ri.prototype),{constructor:ni,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(oi,{toJSON:function(e){const t=e.constructor;let r;if(void 0!==t.toJSON)r=t.toJSON(e);else{r={name:e.name,times:Pu.convertArray(e.times,Array),values:Pu.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(r.interpolation=t)}return r.type=e.ValueTypeName,r}}),Object.assign(oi.prototype,{constructor:oi,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:od,InterpolantFactoryMethodDiscrete:function(e){return new ni(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new ii(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new ai(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;if(e===nd?t=this.InterpolantFactoryMethodDiscrete:e===od?t=this.InterpolantFactoryMethodLinear:e===sd?t=this.InterpolantFactoryMethodSmooth:void 0,void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return nd;case this.InterpolantFactoryMethodLinear:return od;case this.InterpolantFactoryMethodSmooth:return sd;}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let r=0,a=t.length;r!==a;++r)t[r]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let r=0,a=t.length;r!==a;++r)t[r]*=e}return this},trim:function(e,t){const r=this.times,a=r.length;let i=0,n=a-1;for(;i!==a&&r[i]<e;)++i;for(;-1!==n&&r[n]>t;)--n;if(++n,0!=i||n!==a){i>=n&&(n=Ro(n,1),i=n-1);const e=this.getValueSize();this.times=Pu.arraySlice(r,i,n),this.values=Pu.arraySlice(this.values,i*e,n*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();0!=t-Do(t)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const r=this.times,a=this.values,n=r.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let t=0;t!==n;t++){const a=r[t];if("number"==typeof a&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,a),e=!1;break}if(null!==o&&o>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,a,o),e=!1;break}o=a}if(void 0!==a&&Pu.isTypedArray(a))for(let t=0,r=a.length;t!==r;++t){const r=a[t];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,r),e=!1;break}}return e},optimize:function(){const e=Pu.arraySlice(this.times),t=Pu.arraySlice(this.values),r=this.getValueSize(),a=this.getInterpolation()===sd,n=e.length-1;let o=1;for(let s=1,i;s<n;++s){i=!1;const n=e[s],l=e[s+1];if(n!==l&&(1!==s||n!==n[0]))if(!a){const e=s*r;for(let a=0;a!==r;++a){const n=t[e+a];if(n!==t[e-r+a]||n!==t[e+r+a]){i=!0;break}}}else i=!0;if(i){if(s!==o){e[o]=e[s];const a=s*r,i=o*r;for(let e=0;e!==r;++e)t[i+e]=t[a+e]}++o}}if(0<n){e[o]=e[n];for(let e=o*r,a=0;a!==r;++a)t[e+a]=t[n*r+a];++o}return o===e.length?(this.times=e,this.values=t):(this.times=Pu.arraySlice(e,0,o),this.values=Pu.arraySlice(t,0,o*r)),this},clone:function(){const e=Pu.arraySlice(this.times,0),t=Pu.arraySlice(this.values,0),r=this.constructor,a=new r(this.name,e,t);return a.createInterpolant=this.createInterpolant,a}}),si.prototype=Object.assign(Object.create(oi.prototype),{constructor:si,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:nd,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),li.prototype=Object.assign(Object.create(oi.prototype),{constructor:li,ValueTypeName:"color"}),di.prototype=Object.assign(Object.create(oi.prototype),{constructor:di,ValueTypeName:"number"}),pi.prototype=Object.assign(Object.create(ri.prototype),{constructor:pi,interpolate_:function(e,r,a,t){const i=this.resultBuffer,n=this.sampleValues,o=this.valueSize;let s=e*o;for(let l=s+o;s!==l;s+=4)p.slerpFlat(i,0,n,s-o,n,s,(a-r)/(t-r));return i}}),ci.prototype=Object.assign(Object.create(oi.prototype),{constructor:ci,ValueTypeName:"quaternion",DefaultInterpolation:od,InterpolantFactoryMethodLinear:function(e){return new pi(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),ui.prototype=Object.assign(Object.create(oi.prototype),{constructor:ui,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:nd,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),mi.prototype=Object.assign(Object.create(oi.prototype),{constructor:mi,ValueTypeName:"vector"}),Object.assign(gi,{parse:function(e){const t=[],r=e.tracks,a=1/(e.fps||1);for(let o=0,i=r.length;o!==i;++o)t.push(hi(r[o]).scale(a));return new gi(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],r=e.tracks,a={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,i=r.length;a!==i;++a)t.push(oi.toJSON(r[a]));return a},CreateFromMorphTargetSequence:function(e,t,r,a){const n=t.length,o=[];for(let s=0;s<n;s++){let e=[],i=[];e.push((s+n-1)%n,s,(s+1)%n),i.push(0,1,0);const l=Pu.getKeyframeOrder(e);e=Pu.sortedArray(e,1,l),i=Pu.sortedArray(i,1,l),a||0!==e[0]||(e.push(n),i.push(i[0])),o.push(new di(".morphTargetInfluences["+t[s].name+"]",e,i).scale(1/r))}return new gi(e,-1,o)},findByName:function(e,t){let r=e;if(!Array.isArray(e)){const t=e;r=t.geometry&&t.geometry.animations||t.animations}for(let a=0;a<r.length;a++)if(r[a].name===t)return r[a];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){const a={},n=/^([\w-]*?)([\d]+)$/;for(let o=0,i=e.length;o<i;o++){const t=e[o],r=t.name.match(n);if(r&&1<r.length){const e=r[1];let i=a[e];i||(a[e]=i=[]),i.push(t)}}const i=[];for(const n in a)i.push(gi.CreateFromMorphTargetSequence(n,a[n],t,r));return i},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const r=function(e,t,r,a,i){if(0!==r.length){const n=[],o=[];Pu.flattenJSON(r,n,o,a),0!==n.length&&i.push(new e(t,n,o))}},a=[],i=e.name||"default",n=e.fps||30,o=e.blendMode;let s=e.length||-1;const l=e.hierarchy||[];for(let i=0;i<l.length;i++){const e=l[i].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let r;for(r=0;r<e.length;r++)if(e[r].morphTargets)for(let a=0;a<e[r].morphTargets.length;a++)t[e[r].morphTargets[a]]=-1;for(const i in t){const t=[],n=[];for(let a=0;a!==e[r].morphTargets.length;++a){const a=e[r];t.push(a.time),n.push(a.morphTarget===i?1:0)}a.push(new di(".morphTargetInfluence["+i+"]",t,n))}s=t.length*(n||1)}else{const n=".bones["+t[i].name+"]";r(mi,n+".position",e,"pos",a),r(ci,n+".quaternion",e,"rot",a),r(mi,n+".scale",e,"scl",a)}}if(0===a.length)return null;const d=new gi(i,s,a,o);return d}}),Object.assign(gi.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let r=0,a=e.length;r!==a;++r){const e=this.tracks[r];t=Ro(t,e.times[e.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new gi(this.name,this.duration,e,this.blendMode)}});const Cu={enabled:!1,files:{},add:function(e,t){!1===this.enabled||(this.files[e]=t)},get:function(e){return!1===this.enabled?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},Iu=new yi;Object.assign(vi.prototype,{load:function(){},loadAsync:function(e,t){const r=this;return new Promise(function(a,i){r.load(e,a,t,i)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const Du={};xi.prototype=Object.assign(Object.create(vi.prototype),{constructor:xi,load:function(e,t,r,a){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,n=Cu.get(e);if(void 0!==n)return i.manager.itemStart(e),setTimeout(function(){t&&t(n),i.manager.itemEnd(e)},0),n;if(void 0!==Du[e])return void Du[e].push({onLoad:t,onProgress:r,onError:a});const o=/^data:(.*?)(;base64)?,(.*)$/,s=e.match(o);let l;if(s){const r=s[1],n=!!s[2];let o=s[3];o=decodeURIComponent(o),n&&(o=atob(o));try{let a;const n=(this.responseType||"").toLowerCase();switch(n){case"arraybuffer":case"blob":const e=new Uint8Array(o.length);for(let t=0;t<o.length;t++)e[t]=o.charCodeAt(t);a="blob"===n?new Blob([e.buffer],{type:r}):e.buffer;break;case"document":const t=new DOMParser;a=t.parseFromString(o,r);break;case"json":a=JSON.parse(o);break;default:a=o;}setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0)}catch(t){setTimeout(function(){a&&a(t),i.manager.itemError(e),i.manager.itemEnd(e)},0)}}else{for(const n in Du[e]=[],Du[e].push({onLoad:t,onProgress:r,onError:a}),l=new XMLHttpRequest,l.open("GET",e,!0),l.addEventListener("load",function(t){const r=this.response,a=Du[e];if(delete Du[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cu.add(e,r);for(let e=0,t=a.length;e<t;e++){const t=a[e];t.onLoad&&t.onLoad(r)}i.manager.itemEnd(e)}else{for(let e=0,r=a.length;e<r;e++){const r=a[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}},!1),l.addEventListener("progress",function(t){const r=Du[e];for(let e=0,a=r.length;e<a;e++){const a=r[e];a.onProgress&&a.onProgress(t)}},!1),l.addEventListener("error",function(t){const r=Du[e];delete Du[e];for(let e=0,a=r.length;e<a;e++){const a=r[e];a.onError&&a.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),l.addEventListener("abort",function(t){const r=Du[e];delete Du[e];for(let e=0,a=r.length;e<a;e++){const a=r[e];a.onError&&a.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),void 0!==this.responseType&&(l.responseType=this.responseType),void 0!==this.withCredentials&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(void 0===this.mimeType?"text/plain":this.mimeType),this.requestHeader)l.setRequestHeader(n,this.requestHeader[n]);l.send(null)}return i.manager.itemStart(e),l},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}}),_i.prototype=Object.assign(Object.create(vi.prototype),{constructor:_i,load:function(t,e,r,a){const i=this,n=new xi(i.manager);n.setPath(i.path),n.load(t,function(r){try{e(i.parse(JSON.parse(r)))}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)},parse:function(e){const t=[];for(let r=0;r<e.length;r++){const a=gi.parse(e[r]);t.push(a)}return t}}),bi.prototype=Object.assign(Object.create(vi.prototype),{constructor:bi,load:function(e,t,r,a){function n(n){d.load(e[n],function(e){const r=o.parse(e,!0);s[n]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},p+=1,6===p&&(1===r.mipmapCount&&(l.minFilter=Ws),l.format=r.format,l.needsUpdate=!0,t&&t(l))},r,a)}const o=this,s=[],l=new Tr;l.image=s;const d=new xi(this.manager);d.setPath(this.path),d.setResponseType("arraybuffer");let p=0;if(Array.isArray(e))for(let t=0,r=e.length;t<r;++t)n(t);else d.load(e,function(e){const r=o.parse(e,!0);if(r.isCubemap){const e=r.mipmaps.length/r.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)s[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),s[t].format=r.format,s[t].width=r.width,s[t].height=r.height}}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=Ws),l.format=r.format,l.needsUpdate=!0,t&&t(l)},r,a);return l}}),Si.prototype=Object.assign(Object.create(vi.prototype),{constructor:Si,load:function(e,t,r,a){const i=this,n=new ee,o=new xi(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(e){const r=i.parse(e);r&&(void 0===r.image?void 0!==r.data&&(n.image.width=r.width,n.image.height=r.height,n.image.data=r.data):n.image=r.image,n.wrapS=void 0===r.wrapS?Gs:r.wrapS,n.wrapT=void 0===r.wrapT?Gs:r.wrapT,n.magFilter=void 0===r.magFilter?Ws:r.magFilter,n.minFilter=void 0===r.minFilter?Ws:r.minFilter,n.anisotropy=void 0===r.anisotropy?1:r.anisotropy,void 0!==r.format&&(n.format=r.format),void 0!==r.type&&(n.type=r.type),void 0!==r.mipmaps&&(n.mipmaps=r.mipmaps,n.minFilter=qs),1===r.mipmapCount&&(n.minFilter=Ws),n.needsUpdate=!0,t&&t(n,r))},r,a),n}}),Mi.prototype=Object.assign(Object.create(vi.prototype),{constructor:Mi,load:function(e,t,r,a){function i(){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1),Cu.add(e,this),t&&t(this),o.manager.itemEnd(e)}function n(t){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1),a&&a(t),o.manager.itemError(e),o.manager.itemEnd(e)}void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const o=this,s=Cu.get(e);if(void 0!==s)return o.manager.itemStart(e),setTimeout(function(){t&&t(s),o.manager.itemEnd(e)},0),s;const l=document.createElementNS("http://www.w3.org/1999/xhtml","img");return l.addEventListener("load",i,!1),l.addEventListener("error",n,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(l.crossOrigin=this.crossOrigin),o.manager.itemStart(e),l.src=e,l}}),Ti.prototype=Object.assign(Object.create(vi.prototype),{constructor:Ti,load:function(e,t,r,a){function n(r){s.load(e[r],function(e){o.images[r]=e,l++,6===l&&(o.needsUpdate=!0,t&&t(o))},void 0,a)}const o=new xe,s=new Mi(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let l=0;for(let o=0;o<e.length;++o)n(o);return o}}),Ei.prototype=Object.assign(Object.create(vi.prototype),{constructor:Ei,load:function(e,t,r,a){const i=new o,n=new Mi(this.manager);return n.setCrossOrigin(this.crossOrigin),n.setPath(this.path),n.load(e,function(r){i.image=r;const a=0<e.search(/\.jpe?g($|\?)/i)||0===e.search(/^data\:image\/jpeg/);i.format=a?ol:sl,i.needsUpdate=!0,void 0!==t&&t(i)},r,a),i}}),Object.assign(wi.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,r){const a=this.getUtoTmapping(e);return this.getPoint(a,r)},getPoints:function(e){void 0===e&&(e=5);const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);const t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let r=this.getPoint(0),a=0,i;t.push(0);for(let n=1;n<=e;n++)i=this.getPoint(n/e),a+=i.distanceTo(r),t.push(a),r=i;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,r){const a=this.getLengths();let n=0,i=a.length,o;o=r?r:e*a[i-1];let s=0,l=i-1,d;for(;s<=l;)if(n=Do(s+(l-s)/2),d=a[n]-o,0>d)s=n+1;else if(0<d)l=n-1;else{l=n;break}if(n=l,a[n]===o)return n/(i-1);const p=a[n],c=a[n+1],u=(o-p)/(c-p),m=(n+u)/(i-1);return m},getTangent:function(e,t){const r=1e-4;let a=e-r,i=e+r;0>a&&(a=0),1<i&&(i=1);const o=this.getPoint(a),s=this.getPoint(i),l=t||(o.isVector2?new n:new m);return l.copy(s).sub(o).normalize(),l},getTangentAt:function(e,r){const a=this.getUtoTmapping(e);return this.getTangent(a,r)},computeFrenetFrames:function(e,t){const r=new m,a=[],n=[],o=[],s=new m,l=new c;for(let r=0;r<=e;r++){const t=r/e;a[r]=this.getTangentAt(t,new m),a[r].normalize()}n[0]=new m,o[0]=new m;let i=Number.MAX_VALUE;const d=_o(a[0].x),p=_o(a[0].y),u=_o(a[0].z);d<=i&&(i=d,r.set(1,0,0)),p<=i&&(i=p,r.set(0,1,0)),u<=i&&r.set(0,0,1),s.crossVectors(a[0],r).normalize(),n[0].crossVectors(a[0],s),o[0].crossVectors(a[0],n[0]);for(let r=1;r<=e;r++){if(n[r]=n[r-1].clone(),o[r]=o[r-1].clone(),s.crossVectors(a[r-1],a[r]),s.length()>zo){s.normalize();const e=vo(Pd.clamp(a[r-1].dot(a[r]),-1,1));n[r].applyMatrix4(l.makeRotationAxis(s,e))}o[r].crossVectors(a[r],n[r])}if(!0===t){let t=vo(Pd.clamp(n[0].dot(n[e]),-1,1));t/=e,0<a[0].dot(s.crossVectors(n[0],n[e]))&&(t=-t);for(let r=1;r<=e;r++)n[r].applyMatrix4(l.makeRotationAxis(a[r],t*r)),o[r].crossVectors(a[r],n[r])}return{tangents:a,normals:n,binormals:o}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"},arcLengthDivisions:this.arcLengthDivisions,type:this.type};return e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),Li.prototype=Object.create(wi.prototype),Li.prototype.constructor=Li,Li.prototype.isEllipseCurve=!0,Li.prototype.getPoint=function(e,t){const r=t||new n,a=2*Co;let i=this.aEndAngle-this.aStartAngle;const o=_o(i)<zo;for(;0>i;)i+=a;for(;i>a;)i-=a;i<zo&&(o?i=0:i=a),!0!==this.aClockwise||o||(i===a?i=-a:i-=a);const s=this.aStartAngle+e*i;let l=this.aX+this.xRadius*To(s),d=this.aY+this.yRadius*Mo(s);if(0!==this.aRotation){const e=To(this.aRotation),t=Mo(this.aRotation),r=l-this.aX,a=d-this.aY;l=r*e-a*t+this.aX,d=r*t+a*e+this.aY}return r.set(l,d)},Li.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Li.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},Li.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Ai.prototype=Object.create(Li.prototype),Ai.prototype.constructor=Ai,Ai.prototype.isArcCurve=!0;const Nu=new m,zu=new Ri,Bu=new Ri,Uu=new Ri;Pi.prototype=Object.create(wi.prototype),Pi.prototype.constructor=Pi,Pi.prototype.isCatmullRomCurve3=!0,Pi.prototype.getPoint=function(e,t){const r=t||new m,a=this.points,i=a.length,n=(i-(this.closed?0:1))*e;let o=Do(n),s=n-o;this.closed?o+=0<o?0:(Do(_o(o)/i)+1)*i:0==s&&o===i-1&&(o=i-2,s=1);let l,d,p,c;if(this.closed||0<o?l=a[(o-1)%i]:(Nu.subVectors(a[0],a[1]).add(a[0]),l=Nu),d=a[o%i],p=a[(o+1)%i],this.closed||o+2<i?c=a[(o+2)%i]:(Nu.subVectors(a[i-1],a[i-2]).add(a[i-1]),c=Nu),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Eo(l.distanceToSquared(d),e),r=Eo(d.distanceToSquared(p),e),a=Eo(p.distanceToSquared(c),e);1e-4>r&&(r=1),1e-4>t&&(t=r),1e-4>a&&(a=r),zu.initNonuniformCatmullRom(l.x,d.x,p.x,c.x,t,r,a),Bu.initNonuniformCatmullRom(l.y,d.y,p.y,c.y,t,r,a),Uu.initNonuniformCatmullRom(l.z,d.z,p.z,c.z,t,r,a)}else"catmullrom"===this.curveType&&(zu.initCatmullRom(l.x,d.x,p.x,c.x,this.tension),Bu.initCatmullRom(l.y,d.y,p.y,c.y,this.tension),Uu.initCatmullRom(l.z,d.z,p.z,c.z,this.tension));return r.set(zu.calc(s),Bu.calc(s),Uu.calc(s)),r},Pi.prototype.copy=function(e){wi.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Pi.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},Pi.prototype.fromJSON=function(e){wi.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(new m().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Hi.prototype=Object.create(wi.prototype),Hi.prototype.constructor=Hi,Hi.prototype.isCubicBezierCurve=!0,Hi.prototype.getPoint=function(e,t){const r=t||new n,a=this.v0,i=this.v1,o=this.v2,s=this.v3;return r.set(Oi(e,a.x,i.x,o.x,s.x),Oi(e,a.y,i.y,o.y,s.y)),r},Hi.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Hi.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Hi.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},Vi.prototype=Object.create(wi.prototype),Vi.prototype.constructor=Vi,Vi.prototype.isCubicBezierCurve3=!0,Vi.prototype.getPoint=function(e,t){const r=t||new m,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(Oi(e,a.x,i.x,n.x,o.x),Oi(e,a.y,i.y,n.y,o.y),Oi(e,a.z,i.z,n.z,o.z)),r},Vi.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Vi.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Vi.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},ki.prototype=Object.create(wi.prototype),ki.prototype.constructor=ki,ki.prototype.isLineCurve=!0,ki.prototype.getPoint=function(e,t){const r=t||new n;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},ki.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},ki.prototype.getTangent=function(e,t){const r=t||new n;return r.copy(this.v2).sub(this.v1).normalize(),r},ki.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},ki.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},ki.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Wi.prototype=Object.create(wi.prototype),Wi.prototype.constructor=Wi,Wi.prototype.isLineCurve3=!0,Wi.prototype.getPoint=function(e,t){const r=t||new m;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},Wi.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Wi.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Wi.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Wi.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},ji.prototype=Object.create(wi.prototype),ji.prototype.constructor=ji,ji.prototype.isQuadraticBezierCurve=!0,ji.prototype.getPoint=function(e,t){const r=t||new n,a=this.v0,i=this.v1,o=this.v2;return r.set(zi(e,a.x,i.x,o.x),zi(e,a.y,i.y,o.y)),r},ji.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},ji.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},ji.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},qi.prototype=Object.create(wi.prototype),qi.prototype.constructor=qi,qi.prototype.isQuadraticBezierCurve3=!0,qi.prototype.getPoint=function(e,t){const r=t||new m,a=this.v0,i=this.v1,n=this.v2;return r.set(zi(e,a.x,i.x,n.x),zi(e,a.y,i.y,n.y),zi(e,a.z,i.z,n.z)),r},qi.prototype.copy=function(e){return wi.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},qi.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},qi.prototype.fromJSON=function(e){return wi.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Xi.prototype=Object.create(wi.prototype),Xi.prototype.constructor=Xi,Xi.prototype.isSplineCurve=!0,Xi.prototype.getPoint=function(e,t){const r=t||new n,a=this.points,i=(a.length-1)*e,o=Do(i),s=i-o,l=a[0===o?o:o-1],d=a[o],p=a[o>a.length-2?a.length-1:o+1],c=a[o>a.length-3?a.length-1:o+2];return r.set(Ci(s,l.x,d.x,p.x,c.x),Ci(s,l.y,d.y,p.y,c.y)),r},Xi.prototype.copy=function(e){wi.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this},Xi.prototype.toJSON=function(){const e=wi.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e},Xi.prototype.fromJSON=function(e){wi.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(new n().fromArray(r))}return this};var Fu=Object.freeze({__proto__:null,ArcCurve:Ai,CatmullRomCurve3:Pi,CubicBezierCurve:Hi,CubicBezierCurve3:Vi,EllipseCurve:Li,LineCurve:ki,LineCurve3:Wi,QuadraticBezierCurve:ji,QuadraticBezierCurve3:qi,SplineCurve:Xi});Yi.prototype=Object.assign(Object.create(wi.prototype),{constructor:Yi,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ki(t,e))},getPoint:function(e){const t=e*this.getLength(),r=this.getCurveLengths();for(let a=0;a<r.length;){if(r[a]>=t){const e=r[a]-t,i=this.curves[a],n=i.getLength(),o=0===n?0:1-e/n;return i.getPointAt(o)}a++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let r=0,a=this.curves.length;r<a;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let r;for(let a=0,i=this.curves;a<i.length;a++){const n=i[a],o=n&&n.isEllipseCurve?2*e:n&&(n.isLineCurve||n.isLineCurve3)?1:n&&n.isSplineCurve?e*n.points.length:e,s=n.getPoints(o);for(let e=0;e<s.length;e++){const a=s[e];r&&r.equals(a)||(t.push(a),r=a)}}return this.autoClose&&1<t.length&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){wi.prototype.copy.call(this,e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=wi.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){wi.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(new Fu[r.type]().fromJSON(r))}return this}}),Zi.prototype=Object.assign(Object.create(Yi.prototype),{constructor:Zi,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const r=new ki(this.currentPoint.clone(),new n(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,r,a){const i=new ji(this.currentPoint.clone(),new n(e,t),new n(r,a));return this.curves.push(i),this.currentPoint.set(r,a),this},bezierCurveTo:function(e,t,r,a,i,o){const s=new Hi(this.currentPoint.clone(),new n(e,t),new n(r,a),new n(i,o));return this.curves.push(s),this.currentPoint.set(i,o),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),r=new Xi(t);return this.curves.push(r),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,r,a,i,n){const o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,r,a,i,n),this},absarc:function(e,t,r,a,i,n){return this.absellipse(e,t,r,r,a,i,n),this},ellipse:function(e,t,r,a,i,n,o,s){const l=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+l,t+d,r,a,i,n,o,s),this},absellipse:function(e,t,r,a,i,n,o,s){const l=new Li(e,t,r,a,i,n,o,s);if(0<this.curves.length){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const d=l.getPoint(1);return this.currentPoint.copy(d),this},copy:function(e){return Yi.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=Yi.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Yi.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Ji.prototype=Object.assign(Object.create(Zi.prototype),{constructor:Ji,getPointsHoles:function(e){const t=[];for(let r=0,a=this.holes.length;r<a;r++)t[r]=this.holes[r].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Zi.prototype.copy.call(this,e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){const e=Zi.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){Zi.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(new Zi().fromJSON(r))}return this}}),Qi.prototype=Object.assign(Object.create(f.prototype),{constructor:Qi,isLight:!0,copy:function(e){return f.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=f.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Ki.prototype=Object.assign(Object.create(Qi.prototype),{constructor:Ki,isHemisphereLight:!0,copy:function(e){return Qi.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign($i.prototype,{_projScreenMatrix:new c,_lightPositionWorld:new m,_lookTarget:new m,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,r=this.matrix,a=this._projScreenMatrix,i=this._lookTarget,n=this._lightPositionWorld;n.setFromMatrixPosition(e.matrixWorld),t.position.copy(n),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),a.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),en.prototype=Object.assign(Object.create($i.prototype),{constructor:en,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,r=2*Pd.RAD2DEG*e.angle,a=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(r!==t.fov||a!==t.aspect||i!==t.far)&&(t.fov=r,t.aspect=a,t.far=i,t.updateProjectionMatrix()),$i.prototype.updateMatrices.call(this,e)}}),tn.prototype=Object.assign(Object.create(Qi.prototype),{constructor:tn,isSpotLight:!0,copy:function(e){return Qi.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),rn.prototype=Object.assign(Object.create($i.prototype),{constructor:rn,isPointLightShadow:!0,updateMatrices:function(e,t){void 0===t&&(t=0);const r=this.camera,a=this.matrix,i=this._lightPositionWorld,n=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),r.position.copy(i),n.copy(r.position),n.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(n),r.updateMatrixWorld(),a.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),an.prototype=Object.assign(Object.create(Qi.prototype),{constructor:an,isPointLight:!0,copy:function(e){return Qi.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),nn.prototype=Object.assign(Object.create(J.prototype),{constructor:nn,isOrthographicCamera:!0,copy:function(e,t){return J.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,a,i,n){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,a=(this.top+this.bottom)/2;let i=r-e,n=r+e,o=a+t,s=a-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,n=i+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,n,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=f.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),on.prototype=Object.assign(Object.create($i.prototype),{constructor:on,isDirectionalLightShadow:!0,updateMatrices:function(e){$i.prototype.updateMatrices.call(this,e)}}),sn.prototype=Object.assign(Object.create(Qi.prototype),{constructor:sn,isDirectionalLight:!0,copy:function(e){return Qi.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),ln.prototype=Object.assign(Object.create(Qi.prototype),{constructor:ln,isAmbientLight:!0}),dn.prototype=Object.assign(Object.create(Qi.prototype),{constructor:dn,isRectAreaLight:!0,copy:function(e){return Qi.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Qi.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}),Object.assign(pn.prototype,{isSphericalHarmonics3:!0,set:function(e){for(let t=0;9>t;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(let e=0;9>e;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){const r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*a),t.addScaledVector(n[2],.488603*i),t.addScaledVector(n[3],.488603*r),t.addScaledVector(n[4],1.092548*(r*a)),t.addScaledVector(n[5],1.092548*(a*i)),t.addScaledVector(n[6],.315392*(3*i*i-1)),t.addScaledVector(n[7],1.092548*(r*i)),t.addScaledVector(n[8],.546274*(r*r-a*a)),t},getIrradianceAt:function(e,t){const r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],2*.511664*a),t.addScaledVector(n[2],2*.511664*i),t.addScaledVector(n[3],2*.511664*r),t.addScaledVector(n[4],2*.429043*r*a),t.addScaledVector(n[5],2*.429043*a*i),t.addScaledVector(n[6],.743125*i*i-.247708),t.addScaledVector(n[7],2*.429043*r*i),t.addScaledVector(n[8],.429043*(r*r-a*a)),t},add:function(e){for(let t=0;9>t;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function(e,t){for(let r=0;9>r;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this},scale:function(e){for(let t=0;9>t;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(let r=0;9>r;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this},equals:function(e){for(let t=0;9>t;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return new this.constructor().copy(this)},fromArray:function(e,t){void 0===t&&(t=0);const r=this.coefficients;for(let a=0;9>a;a++)r[a].fromArray(e,t+3*a);return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const r=this.coefficients;for(let a=0;9>a;a++)r[a].toArray(e,t+3*a);return e}}),Object.assign(pn,{getBasisAt:function(e,t){const r=e.x,a=e.y,i=e.z;t[0]=.282095,t[1]=.488603*a,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*a,t[5]=1.092548*a*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-a*a)}}),cn.prototype=Object.assign(Object.create(Qi.prototype),{constructor:cn,isLightProbe:!0,copy:function(e){return Qi.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Qi.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),un.prototype=Object.assign(Object.create(vi.prototype),{constructor:un,load:function(t,e,r,a){const i=this,n=new xi(i.manager);n.setPath(i.path),n.load(t,function(r){try{e(i.parse(JSON.parse(r)))}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)},parse:function(e){function t(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}const r=this.textures,a=new Ru[e.type];if(void 0!==e.uuid&&(a.uuid=e.uuid),void 0!==e.name&&(a.name=e.name),void 0!==e.color&&a.color.setHex(e.color),void 0!==e.roughness&&(a.roughness=e.roughness),void 0!==e.metalness&&(a.metalness=e.metalness),void 0!==e.sheen&&(a.sheen=new M().setHex(e.sheen)),void 0!==e.emissive&&a.emissive.setHex(e.emissive),void 0!==e.specular&&a.specular.setHex(e.specular),void 0!==e.shininess&&(a.shininess=e.shininess),void 0!==e.clearcoat&&(a.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(a.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(a.fog=e.fog),void 0!==e.flatShading&&(a.flatShading=e.flatShading),void 0!==e.blending&&(a.blending=e.blending),void 0!==e.combine&&(a.combine=e.combine),void 0!==e.side&&(a.side=e.side),void 0!==e.opacity&&(a.opacity=e.opacity),void 0!==e.transparent&&(a.transparent=e.transparent),void 0!==e.alphaTest&&(a.alphaTest=e.alphaTest),void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(a.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(a.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(a.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(a.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(a.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(a.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(a.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(a.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(a.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(a.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(a.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(a.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(a.rotation=e.rotation),1!==e.linewidth&&(a.linewidth=e.linewidth),void 0!==e.dashSize&&(a.dashSize=e.dashSize),void 0!==e.gapSize&&(a.gapSize=e.gapSize),void 0!==e.scale&&(a.scale=e.scale),void 0!==e.polygonOffset&&(a.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(a.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(a.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(a.skinning=e.skinning),void 0!==e.morphTargets&&(a.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(a.morphNormals=e.morphNormals),void 0!==e.dithering&&(a.dithering=e.dithering),void 0!==e.vertexTangents&&(a.vertexTangents=e.vertexTangents),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.toneMapped&&(a.toneMapped=e.toneMapped),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?a.vertexColors=!!(0<e.vertexColors):a.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const r in e.uniforms){const o=e.uniforms[r];switch(a.uniforms[r]={},o.type){case"t":a.uniforms[r].value=t(o.value);break;case"c":a.uniforms[r].value=new M().setHex(o.value);break;case"v2":a.uniforms[r].value=new n().fromArray(o.value);break;case"v3":a.uniforms[r].value=new m().fromArray(o.value);break;case"v4":a.uniforms[r].value=new s().fromArray(o.value);break;case"m3":a.uniforms[r].value=new i().fromArray(o.value);case"m4":a.uniforms[r].value=new c().fromArray(o.value);break;default:a.uniforms[r].value=o.value;}}if(void 0!==e.defines&&(a.defines=e.defines),void 0!==e.vertexShader&&(a.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(a.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)a.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(a.flatShading=1===e.shading),void 0!==e.size&&(a.size=e.size),void 0!==e.sizeAttenuation&&(a.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(a.map=t(e.map)),void 0!==e.matcap&&(a.matcap=t(e.matcap)),void 0!==e.alphaMap&&(a.alphaMap=t(e.alphaMap)),void 0!==e.bumpMap&&(a.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(a.bumpScale=e.bumpScale),void 0!==e.normalMap&&(a.normalMap=t(e.normalMap)),void 0!==e.normalMapType&&(a.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),a.normalScale=new n().fromArray(t)}return void 0!==e.displacementMap&&(a.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(a.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(a.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(a.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(a.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(a.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(a.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(a.specularMap=t(e.specularMap)),void 0!==e.envMap&&(a.envMap=t(e.envMap)),void 0!==e.envMapIntensity&&(a.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(a.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(a.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(a.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(a.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(a.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(a.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(a.gradientMap=t(e.gradientMap)),void 0!==e.clearcoatMap&&(a.clearcoatMap=t(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap=t(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(a.clearcoatNormalMap=t(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(a.clearcoatNormalScale=new n().fromArray(e.clearcoatNormalScale)),a},setTextures:function(e){return this.textures=e,this}});const Gu={decodeText:function(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let r=0,a=e.length;r<a;r++)t+=String.fromCharCode(e[r]);try{return decodeURIComponent(escape(t))}catch(r){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};mn.prototype=Object.assign(Object.create(V.prototype),{constructor:mn,isInstancedBufferGeometry:!0,copy:function(e){return V.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=V.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),gn.prototype=Object.assign(Object.create(P.prototype),{constructor:gn,isInstancedBufferAttribute:!0,copy:function(e){return P.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=P.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),fn.prototype=Object.assign(Object.create(vi.prototype),{constructor:fn,load:function(t,e,r,a){const i=this,n=new xi(i.manager);n.setPath(i.path),n.load(t,function(r){try{e(i.parse(JSON.parse(r)))}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)},parse:function(e){function t(e,t){if(void 0!==a[t])return a[t];const i=e.interleavedBuffers,n=i[t],o=r(e,n.buffer),s=new Ou[n.type](o),l=new or(s,n.stride);return l.uuid=n.uuid,a[t]=l,l}function r(e,t){if(void 0!==i[t])return i[t];const r=e.arrayBuffers,a=r[t],n=new Uint32Array(a).buffer;return i[t]=n,n}const a={},i={},n=e.isInstancedBufferGeometry?new mn:new V,o=e.data.index;if(void 0!==o){const e=new Ou[o.type](o.array);n.setIndex(new P(e,1))}const s=e.data.attributes;for(const r in s){const a=s[r];let i;if(a.isInterleavedBufferAttribute){const r=t(e.data,a.data);i=new sr(r,a.itemSize,a.offset,a.normalized)}else{const e=new Ou[a.type](a.array),t=a.isInstancedBufferAttribute?gn:P;i=new t(e,a.itemSize,a.normalized)}void 0!==a.name&&(i.name=a.name),n.setAttribute(r,i)}const l=e.data.morphAttributes;if(l)for(const r in l){const a=l[r],o=[];for(let r=0,i=a.length;r<i;r++){const i=a[r];let n;if(i.isInterleavedBufferAttribute){const r=t(e.data,i.data);n=new sr(r,i.itemSize,i.offset,i.normalized)}else{const e=new Ou[i.type](i.array);n=new P(e,i.itemSize,i.normalized)}void 0!==i.name&&(n.name=i.name),o.push(n)}n.morphAttributes[r]=o}const d=e.data.morphTargetsRelative;d&&(n.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){const t=p[e];n.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new m;void 0!==c.center&&e.fromArray(c.center),n.boundingSphere=new x(e,c.radius)}return e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}});const Ou={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"==typeof Uint8ClampedArray?Uint8Array:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};hn.prototype=Object.assign(Object.create(vi.prototype),{constructor:hn,load:function(e,t,r,a){const i=this,n=""===this.path?Gu.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const o=new xi(i.manager);o.setPath(this.path),o.load(e,function(r){let n=null;try{n=JSON.parse(r)}catch(t){return void 0!==a&&a(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const o=n.metadata;return void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()?void console.error("THREE.ObjectLoader: Can't load "+e):void i.parse(n,t)},r,a)},parse:function(e,t){const r=this.parseShape(e.shapes),a=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,function(){void 0!==t&&t(s)}),n=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,n),s=this.parseObject(e.object,a,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),(void 0===e.images||0===e.images.length)&&void 0!==t&&t(s),s},parseShape:function(e){const t={};if(void 0!==e)for(let r=0,a=e.length;r<a;r++){const a=new Ji().fromJSON(e[r]);t[a.uuid]=a}return t},parseGeometries:function(e,t){const r={};let a;if(void 0!==e){const i=new fn;for(let n=0,o=e.length;n<o;n++){let o;const s=e[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Au[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new Au[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Au[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Au[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Au[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Au[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Au[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Au[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Au[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Au[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new Au[s.type](new Fu[s.path.type]().fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Au[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Au[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":a=[];for(let e=0,r=s.shapes.length;e<r;e++){const r=t[s.shapes[e]];a.push(r)}o=new Au[s.type](a,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":a=[];for(let e=0,r=s.shapes.length;e<r;e++){const r=t[s.shapes[e]];a.push(r)}const e=s.options.extrudePath;void 0!==e&&(s.options.extrudePath=new Fu[e.type]().fromJSON(e)),o=new Au[s.type](a,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(s);break;case"Geometry":console.error("THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.");break;default:console.warn("THREE.ObjectLoader: Unsupported geometry type \""+s.type+"\"");continue;}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),!0===o.isBufferGeometry&&void 0!==s.userData&&(o.userData=s.userData),r[s.uuid]=o}}return r},parseMaterials:function(e,t){const r={},a={};if(void 0!==e){const n=new un;n.setTextures(t);for(let t=0,i=e.length;t<i;t++){const i=e[t];if("MultiMaterial"===i.type){const e=[];for(let t=0;t<i.materials.length;t++){const a=i.materials[t];void 0===r[a.uuid]&&(r[a.uuid]=n.parse(a)),e.push(r[a.uuid])}a[i.uuid]=e}else void 0===r[i.uuid]&&(r[i.uuid]=n.parse(i)),a[i.uuid]=r[i.uuid]}}return a},parseAnimations:function(e){const t=[];for(let r=0;r<e.length;r++){const a=e[r],i=gi.parse(a);void 0!==a.uuid&&(i.uuid=a.uuid),t.push(i)}return t},parseImages:function(e,t){function r(e){return a.manager.itemStart(e),n.load(e,function(){a.manager.itemEnd(e)},void 0,function(){a.manager.itemError(e),a.manager.itemEnd(e)})}const a=this,i={};let n;if(void 0!==e&&0<e.length){const o=new yi(t);n=new Mi(o),n.setCrossOrigin(this.crossOrigin);for(let t=0,n=e.length;t<n;t++){const n=e[t],o=n.url;if(Array.isArray(o)){i[n.uuid]=[];for(let e=0,t=o.length;e<t;e++){const t=o[e],s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:a.resourcePath+t;i[n.uuid].push(r(s))}}else{const e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n.url)?n.url:a.resourcePath+n.url;i[n.uuid]=r(e)}}}return i},parseTextures:function(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const a={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){const i=e[n];void 0===i.image&&console.warn("THREE.ObjectLoader: No \"image\" specified for",i.uuid),void 0===t[i.image]&&console.warn("THREE.ObjectLoader: Undefined image",i.image);let s;s=Array.isArray(t[i.image])?new xe(t[i.image]):new o(t[i.image]),s.needsUpdate=!0,s.uuid=i.uuid,void 0!==i.name&&(s.name=i.name),void 0!==i.mapping&&(s.mapping=r(i.mapping,Hu)),void 0!==i.offset&&s.offset.fromArray(i.offset),void 0!==i.repeat&&s.repeat.fromArray(i.repeat),void 0!==i.center&&s.center.fromArray(i.center),void 0!==i.rotation&&(s.rotation=i.rotation),void 0!==i.wrap&&(s.wrapS=r(i.wrap[0],Vu),s.wrapT=r(i.wrap[1],Vu)),void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.encoding&&(s.encoding=i.encoding),void 0!==i.minFilter&&(s.minFilter=r(i.minFilter,ku)),void 0!==i.magFilter&&(s.magFilter=r(i.magFilter,ku)),void 0!==i.anisotropy&&(s.anisotropy=i.anisotropy),void 0!==i.flipY&&(s.flipY=i.flipY),void 0!==i.premultiplyAlpha&&(s.premultiplyAlpha=i.premultiplyAlpha),void 0!==i.unpackAlignment&&(s.unpackAlignment=i.unpackAlignment),a[i.uuid]=s}return a},parseObject:function(e,t,r){function a(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function i(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let a=0,i=e.length;a<i;a++){const i=e[a];void 0===r[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),t.push(r[i])}return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}let n,o,s;switch(e.type){case"Scene":n=new h,void 0!==e.background&&No(e.background)&&(n.background=new M(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new nr(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new ir(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new Q(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new nn(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new ln(e.color,e.intensity);break;case"DirectionalLight":n=new sn(e.color,e.intensity);break;case"PointLight":n=new an(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new dn(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new tn(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new Ki(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=new cn().fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":o=a(e.geometry),s=i(e.material),n=new k(o,s);break;case"InstancedMesh":o=a(e.geometry),s=i(e.material);const t=e.count,r=e.instanceMatrix;n=new fr(o,s,t),n.instanceMatrix=new P(new Float32Array(r.array),16);break;case"LOD":n=new cr;break;case"Line":n=new yr(a(e.geometry),i(e.material),e.mode);break;case"LineLoop":n=new xr(a(e.geometry),i(e.material));break;case"LineSegments":n=new vr(a(e.geometry),i(e.material));break;case"PointCloud":case"Points":n=new br(a(e.geometry),i(e.material));break;case"Sprite":n=new dr(i(e.material));break;case"Group":n=new Kt;break;default:n=new f;}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0===e.matrix?(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)):(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){const a=e.children;for(let e=0;e<a.length;e++)n.add(this.parseObject(a[e],t,r))}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const r=t[e],a=n.getObjectByProperty("uuid",r.object);void 0!==a&&n.addLevel(a,r.distance)}}return n}});const Hu={UVMapping:Cs,CubeReflectionMapping:Is,CubeRefractionMapping:Ds,EquirectangularReflectionMapping:Ns,EquirectangularRefractionMapping:zs,CubeUVReflectionMapping:Bs,CubeUVRefractionMapping:Us},Vu={RepeatWrapping:Fs,ClampToEdgeWrapping:Gs,MirroredRepeatWrapping:Os},ku={NearestFilter:Hs,NearestMipmapNearestFilter:Vs,NearestMipmapLinearFilter:ks,LinearFilter:Ws,LinearMipmapNearestFilter:js,LinearMipmapLinearFilter:qs};yn.prototype=Object.assign(Object.create(vi.prototype),{constructor:yn,setOptions:function(e){return this.options=e,this},load:function(t,e,r,a){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,n=Cu.get(t);return void 0===n?void(fetch(t).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,i.options)}).then(function(r){Cu.add(t,r),e&&e(r),i.manager.itemEnd(t)}).catch(function(r){a&&a(r),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)):(i.manager.itemStart(t),setTimeout(function(){e&&e(n),i.manager.itemEnd(t)},0),n)}}),Object.assign(vn.prototype,{moveTo:function(e,t){return this.currentPath=new Zi,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,r,a){return this.currentPath.quadraticCurveTo(e,t,r,a),this},bezierCurveTo:function(e,t,r,a,i,n){return this.currentPath.bezierCurveTo(e,t,r,a,i,n),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function r(e){const t=[];for(let r=0,a=e.length;r<a;r++){const a=e[r],i=new Ji;i.curves=a.curves,t.push(i)}return t}function a(e,t){const r=t.length;let a=!1;for(let i=r-1,n=0;n<r;i=n++){let r=t[i],o=t[n],s=o.x-r.x,l=o.y-r.y;if(_o(l)>zo){if(0>l&&(r=t[n],s=-s,o=t[i],l=-l),e.y<r.y||e.y>o.y)continue;if(e.y!==r.y){const t=l*(e.x-r.x)-s*(e.y-r.y);if(0==t)return!0;if(0>t)continue;a=!a}else if(e.x===r.x)return!0}else{if(e.y!==r.y)continue;if(o.x<=e.x&&e.x<=r.x||r.x<=e.x&&e.x<=o.x)return!0}}return a}const n=wu.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return r(o);let s=[],d,p,l;if(1===o.length)return p=o[0],l=new Ji,l.curves=p.curves,s.push(l),s;let c=!n(o[0].getPoints());c=e?!c:c;const i=[],u=[];let m=[],g=0,f;u[g]=void 0,m[g]=[];for(let r=0,a=o.length;r<a;r++)p=o[r],f=p.getPoints(),d=n(f),d=e?!d:d,d?(!c&&u[g]&&g++,u[g]={s:new Ji,p:f},u[g].s.curves=p.curves,c&&g++,m[g]=[]):m[g].push({h:p,p:f[0]});if(!u[0])return r(o);if(1<u.length){let e=!1;const t=[];for(let e=0,t=u.length;e<t;e++)i[e]=[];for(let r=0,n=u.length;r<n;r++){const n=m[r];for(let o=0;o<n.length;o++){const s=n[o];let l=!0;for(let n=0;n<u.length;n++)a(s.p,u[n].p)&&(r!==n&&t.push({froms:r,tos:n,hole:o}),l?(l=!1,i[n].push(s)):e=!0);l&&i[r].push(s)}}0<t.length&&!e&&(m=i)}let h;for(let r=0,a=u.length;r<a;r++){l=u[r].s,s.push(l),h=m[r];for(let e=0,t=h.length;e<t;e++)l.holes.push(h[e].h)}return s}}),Object.assign(xn.prototype,{isFont:!0,generateShapes:function(e,t){void 0===t&&(t=100);const r=[],a=_n(e,t,this.data);for(let i=0,n=a.length;i<n;i++)Array.prototype.push.apply(r,a[i].toShapes());return r}}),Sn.prototype=Object.assign(Object.create(vi.prototype),{constructor:Sn,load:function(e,t,r,a){const i=this,n=new xi(this.manager);n.setPath(this.path),n.load(e,function(e){let r;try{r=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(e.substring(65,e.length-2))}const a=i.parse(r);t&&t(a)},r,a)},parse:function(e){return new xn(e)}});let Wu;const ju={getContext:function(){return void 0===Wu&&(Wu=new(window.AudioContext||window.webkitAudioContext)),Wu},setContext:function(e){Wu=e}};Mn.prototype=Object.assign(Object.create(vi.prototype),{constructor:Mn,load:function(t,e,r,a){const i=this,n=new xi(i.manager);n.setResponseType("arraybuffer"),n.setPath(i.path),n.load(t,function(r){try{const t=r.slice(0),a=ju.getContext();a.decodeAudioData(t,function(t){e(t)})}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)}}),Tn.prototype=Object.assign(Object.create(cn.prototype),{constructor:Tn,isHemisphereLightProbe:!0,copy:function(e){return cn.prototype.copy.call(this,e),this},toJSON:function(e){const t=cn.prototype.toJSON.call(this,e);return t}}),En.prototype=Object.assign(Object.create(cn.prototype),{constructor:En,isAmbientLightProbe:!0,copy:function(e){return cn.prototype.copy.call(this,e),this},toJSON:function(e){const t=cn.prototype.toJSON.call(this,e);return t}});const qu=new c,Xu=new c;Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Q,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Q,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(e){const t=this._cache,r=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(r){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const r=e.projectionMatrix.clone(),a=t.eyeSep/2,i=a*t.near/t.focus,n=t.near*ho(.5*(Pd.DEG2RAD*t.fov))/t.zoom;let o,s;Xu.elements[12]=-a,qu.elements[12]=a,o=-n*t.aspect+i,s=n*t.aspect+i,r.elements[0]=2*t.near/(s-o),r.elements[8]=(s+o)/(s-o),this.cameraL.projectionMatrix.copy(r),o=-n*t.aspect-i,s=n*t.aspect-i,r.elements[0]=2*t.near/(s-o),r.elements[8]=(s+o)/(s-o),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Xu),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(qu)}}),Object.assign(wn.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});const Yu=new m,Zu=new p,Ju=new m,Qu=new m;Ln.prototype=Object.assign(Object.create(f.prototype),{constructor:Ln,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null===this.filter?this.gain.disconnect(this.context.destination):(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){f.prototype.updateMatrixWorld.call(this,e);const t=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Yu,Zu,Ju),Qu.set(0,0,-1).applyQuaternion(Zu),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Yu.x,e),t.positionY.linearRampToValueAtTime(Yu.y,e),t.positionZ.linearRampToValueAtTime(Yu.z,e),t.forwardX.linearRampToValueAtTime(Qu.x,e),t.forwardY.linearRampToValueAtTime(Qu.y,e),t.forwardZ.linearRampToValueAtTime(Qu.z,e),t.upX.linearRampToValueAtTime(r.x,e),t.upY.linearRampToValueAtTime(r.y,e),t.upZ.linearRampToValueAtTime(r.z,e)}else t.setPosition(Yu.x,Yu.y,Yu.z),t.setOrientation(Qu.x,Qu.y,Qu.z,r.x,r.y,r.z)}}),An.prototype=Object.assign(Object.create(f.prototype),{constructor:An,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(void 0===e&&(e=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(!0===this.isPlaying&&(this._progress+=Ro(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress%=this.duration||this.buffer.duration),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this)},stop:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this)},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this)},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});const Ku=new m,$u=new p,em=new m,tm=new m;Rn.prototype=Object.assign(Object.create(An.prototype),{constructor:Rn,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this},updateMatrixWorld:function(e){if(f.prototype.updateMatrixWorld.call(this,e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(Ku,$u,em),tm.set(0,0,1).applyQuaternion($u);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Ku.x,t),e.positionY.linearRampToValueAtTime(Ku.y,t),e.positionZ.linearRampToValueAtTime(Ku.z,t),e.orientationX.linearRampToValueAtTime(tm.x,t),e.orientationY.linearRampToValueAtTime(tm.y,t),e.orientationZ.linearRampToValueAtTime(tm.z,t)}else e.setPosition(Ku.x,Ku.y,Ku.z),e.setOrientation(tm.x,tm.y,tm.z)}}}),Object.assign(Pn.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){let e=0;const t=this.getFrequencyData();for(let r=0;r<t.length;r++)e+=t[r];return e/t.length}}),Object.assign(Cn.prototype,{accumulate:function(e,t){const r=this.buffer,a=this.valueSize,n=e*a+a;let i=this.cumulativeWeight;if(0===i){for(let e=0;e!==a;++e)r[n+e]=r[e];i=t}else{i+=t;const e=t/i;this._mixBufferRegion(r,n,0,e,a)}this.cumulativeWeight=i},accumulateAdditive:function(e){const t=this.buffer,r=this.valueSize,a=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,a,0,e,r),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,r=this.buffer,a=e*t+t,i=this.cumulativeWeight,n=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,1>i){const e=t*this._origIndex;this._mixBufferRegion(r,a,e,1-i,t)}0<n&&this._mixBufferRegionAdditive(r,a,this._addIndex*t,1,t);for(let n=t;n!==t+t;++n)if(r[n]!==r[n+t]){o.setValue(r,a);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,r=this.valueSize,a=r*this._origIndex;e.getValue(t,a);for(let e=r;e!==a;++e)t[e]=t[a+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let r=e;r<t;r++)this.buffer[r]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[4*this._addIndex+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let r=0;r<this.valueSize;r++)this.buffer[t+r]=this.buffer[e+r]},_select:function(e,r,a,i,t){if(.5<=i)for(let n=0;n!==t;++n)e[r+n]=e[a+n]},_slerp:function(e,r,a,i){p.slerpFlat(e,r,e,r,e,a,i)},_slerpAdditive:function(e,r,a,i,t){const n=this._workIndex*t;p.multiplyQuaternionsFlat(e,n,e,r,e,a),p.slerpFlat(e,r,e,r,e,n,i)},_lerp:function(e,r,a,n,t){for(let o=0;o!==t;++o){const t=r+o;e[t]=e[t]*(1-n)+e[a+o]*n}},_lerpAdditive:function(e,r,a,n,t){for(let o=0;o!==t;++o){const t=r+o;e[t]+=e[a+o]*n}}});const rm="\\[\\]\\.:\\/",am=/[\[\]\.:\/]/g,im="[^"+rm+"]",nm="[^"+rm.replace("\\.","")+"]",om=/((?:WC+[\/:])*)/.source.replace("WC",im),sm=/(WCOD+)?/.source.replace("WCOD",nm),lm=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",im),dm=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",im),pm=new RegExp("^"+om+sm+lm+dm+"$"),cm=["material","materials","bones"];Object.assign(In.prototype,{getValue:function(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,a=this._bindings[r];void 0!==a&&a.getValue(e,t)},setValue:function(e,t){const r=this._bindings;for(let a=this._targetGroup.nCachedObjects_,i=r.length;a!==i;++a)r[a].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}}),Object.assign(Dn,{Composite:In,create:function(e,t,r){return e&&e.isAnimationObjectGroup?new Dn.Composite(e,t,r):new Dn(e,t,r)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(am,"")},parseTrackName:function(e){const t=pm.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},a=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==a&&-1!==a){const e=r.nodeName.substring(a+1);-1!==cm.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){const r=function(e){for(let a=0;a<e.length;a++){const i=e[a];if(i.name===t||i.uuid===t)return i;const n=r(i.children);if(n)return n}return null},a=r(e.children);if(a)return a}return null}}),Object.assign(Dn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)e[t++]=r[a]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)r[a]=e[t++]},function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)r[a]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)r[a]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node,t=this.parsedPath,r=t.objectName,a=t.propertyName,i=t.propertyIndex;if(e||(e=Dn.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(r){let a=t.objectIndex;switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===a){a=t;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r];}if(void 0!==a){if(void 0===e[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[a]}}const n=e[a];if(void 0===n){const r=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+r+"."+a+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0===e.needsUpdate?void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate):o=this.Versioning.NeedsUpdate;let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===a){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}else return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this)}s=this.BindingType.ArrayElement,this.resolvedProperty=n,this.propertyIndex=i}else void 0!==n.fromArray&&void 0!==n.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=n):Array.isArray(n)?(s=this.BindingType.EntireArray,this.resolvedProperty=n):this.propertyName=a;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Dn.prototype,{_getValue_unbound:Dn.prototype.getValue,_setValue_unbound:Dn.prototype.setValue}),Object.assign(function(){this.uuid=Pd.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,r=arguments.length;t!==r;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,r=this._paths,a=this._parsedPaths,i=this._bindings,n=i.length;let o=e.length,s=this.nCachedObjects_,l;for(let d=0,p=arguments.length;d!==p;++d){const p=arguments[d],c=p.uuid;let u=t[c];if(void 0===u){u=o++,t[c]=u,e.push(p);for(let e=0;e!==n;++e)i[e].push(new Dn(p,r[e],a[e]))}else if(u<s){l=e[u];const o=--s,d=e[o];t[d.uuid]=u,e[u]=d,t[c]=o,e[o]=p;for(let e=0;e!==n;++e){const t=i[e],n=t[o];let s=t[u];t[u]=n,void 0===s&&(s=new Dn(p,r[e],a[e])),t[o]=s}}else e[u]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=s},remove:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,a=r.length;let n=this.nCachedObjects_;for(let o=0,i=arguments.length;o!==i;++o){const i=arguments[o],s=i.uuid,l=t[s];if(void 0!==l&&l>=n){const o=n++,d=e[o];t[d.uuid]=l,e[l]=d,t[s]=o,e[o]=i;for(let e=0;e!==a;++e){const t=r[e],a=t[o],i=t[l];t[l]=a,t[o]=i}}}this.nCachedObjects_=n},uncache:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,a=r.length;let n=this.nCachedObjects_,i=e.length;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],l=s.uuid,d=t[l];if(void 0!==d)if(delete t[l],d<n){const o=--n,s=e[o],l=--i,p=e[l];t[s.uuid]=d,e[d]=s,t[p.uuid]=o,e[o]=p,e.pop();for(let e=0;e!==a;++e){const t=r[e],a=t[o],i=t[l];t[d]=a,t[o]=i,t.pop()}}else{const n=--i,o=e[n];t[o.uuid]=d,e[d]=o,e.pop();for(let e=0;e!==a;++e){const t=r[e];t[d]=t[n],t.pop()}}}this.nCachedObjects_=n},subscribe_:function(e,t){let r=this._bindingsIndicesByPath,a=r[e],i=this._bindings;if(void 0!==a)return i[a];const n=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,d=this.nCachedObjects_,p=Array(l);a=i.length,r[e]=a,n.push(e),o.push(t),i.push(p);for(let r=d,a=s.length;r!==a;++r){const a=s[r];p[r]=new Dn(a,e,t)}return p},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){const a=this._paths,i=this._parsedPaths,n=this._bindings,o=n.length-1,s=n[o],l=e[o];t[l]=r,n[r]=s,n.pop(),i[r]=i[o],i.pop(),a[r]=a[o],a.pop()}}}),Object.assign(Nn.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){const r=this._clip.duration,a=e._clip.duration;e.warp(1,a/r,t),this.warp(r/a,1,t)}return this},crossFadeTo:function(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,r){const a=this._mixer,i=a.time,n=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=a._lendControlInterpolant(),this._timeScaleInterpolant=o);const s=o.parameterPositions,l=o.sampleValues;return s[0]=i,s[1]=i+r,l[0]=e/n,l[1]=t/n,this},stopWarping:function(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,r,a){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const a=(e-i)*r;if(0>a||0===r)return;this._startTime=null,t=r*a}t*=this._updateTimeScale(e);const n=this._updateTime(t),o=this._updateWeight(e);if(0<o){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case ud:for(let r=0,a=e.length;r!==a;++r)e[r].evaluate(n),t[r].accumulateAdditive(o);break;case cd:default:for(let r=0,i=e.length;r!==i;++r)e[r].evaluate(n),t[r].accumulate(a,o);}}},_updateWeight:function(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;if(null!==r){const a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopFading(),0===a&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;if(null!==r){const a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){const t=this._clip.duration,r=this.loop;let a=this.time+e,i=this._loopCount;const n=r===2202;if(0===e)return-1===i?a:n&&1==(1&i)?t-a:a;if(r===2200){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(a>=t)a=t;else if(0>a)a=0;else{this.time=a;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=a,this._mixer.dispatchEvent({type:"finished",action:this,direction:0>e?-1:1})}}else{if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,n)):this._setEndings(0===this.repetitions,!0,n)),a>=t||0>a){const r=Do(a/t);a-=t*r,i+=_o(r);const o=this.repetitions-i;if(0>=o)this.clampWhenFinished?this.paused=!0:this.enabled=!1,a=0<e?t:0,this.time=a,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1});else{if(1==o){const t=0>e;this._setEndings(t,!t,n)}else this._setEndings(!1,!1,n);this._loopCount=i,this.time=a,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r})}}else this.time=a;if(n&&1==(1&i))return t-a}return a},_setEndings:function(e,t,r){const a=this._interpolantSettings;r?(a.endingStart=dd,a.endingEnd=dd):(a.endingStart=e?this.zeroSlopeAtStart?dd:ld:pd,a.endingEnd=t?this.zeroSlopeAtEnd?dd:ld:pd)},_scheduleFading:function(e,t,r){const a=this._mixer,i=a.time;let n=this._weightInterpolant;null===n&&(n=a._lendControlInterpolant(),this._weightInterpolant=n);const o=n.parameterPositions,s=n.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=r,this}}),zn.prototype=Object.assign(Object.create(a.prototype),{constructor:zn,_bindAction:function(e,t){const r=e._localRoot||this._root,a=e._clip.tracks,n=a.length,o=e._propertyBindings,s=e._interpolants,l=r.uuid,i=this._bindingsByRootAndName;let d=i[l];void 0===d&&(d={},i[l]=d);for(let p=0;p!==n;++p){const e=a[p],i=e.name;let n=d[i];if(void 0!==n)o[p]=n;else{if(n=o[p],void 0!==n){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,l,i));continue}const a=t&&t._propertyBindings[p].binding.parsedPath;n=new Cn(Dn.create(r,i,a),e.ValueTypeName,e.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,l,i),o[p]=n}s[p].resultBuffer=n.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,r=e._clip.uuid,a=this._actionsByClip[r];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,r,t)}const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==r.useCount++&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){const a=this._actions,i=this._actionsByClip;let n=i[t];if(void 0===n)n={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=n;else{const t=n.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=a.length,a.push(e),n.actionByRoot[r]=e},_removeInactiveAction:function(e){const t=this._actions,r=t[t.length-1],a=e._cacheIndex;r._cacheIndex=a,t[a]=r,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,n=this._actionsByClip,o=n[i],s=o.knownActions,l=s[s.length-1],d=e._byClipCacheIndex;l._byClipCacheIndex=d,s[d]=l,s.pop(),e._byClipCacheIndex=null;const p=o.actionByRoot,c=(e._localRoot||this._root).uuid;delete p[c],0===s.length&&delete n[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let r=0,a=t.length;r!==a;++r){const e=t[r];0==--e.referenceCount&&this._removeInactiveBinding(e)}},_lendAction:function(e){const t=this._actions,r=e._cacheIndex,a=this._nActiveActions++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function(e){const t=this._actions,r=e._cacheIndex,a=--this._nActiveActions,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_addInactiveBinding:function(e,t,r){const a=this._bindingsByRootAndName,i=this._bindings;let n=a[t];void 0===n&&(n={},a[t]=n),n[r]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,r=e.binding,a=r.rootNode.uuid,i=r.path,n=this._bindingsByRootAndName,o=n[a],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[i],0===Object.keys(o).length&&delete n[a]},_lendBinding:function(e){const t=this._bindings,r=e._cacheIndex,a=this._nActiveBindings++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function(e){const t=this._bindings,r=e._cacheIndex,a=--this._nActiveBindings,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(r=new ii(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,r=e.__cacheIndex,a=--this._nActiveControlInterpolants,i=t[a];e.__cacheIndex=a,t[a]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,r){const a=t||this._root,i=a.uuid;let n="string"==typeof e?gi.findByName(a,e):e;const o=null===n?e:n.uuid;let s=this._actionsByClip[o],l=null;if(void 0===r&&(null===n?r=cd:r=n.blendMode),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===r)return e;l=s.knownActions[0],null===n&&(n=l._clip)}if(null===n)return null;const d=new Nn(this,n,t,r);return this._bindAction(d,l),this._addInactiveAction(d,o,i),d},existingAction:function(e,t){const r=t||this._root,a=r.uuid,i="string"==typeof e?gi.findByName(r,e):e,n=i?i.uuid:e,o=this._actionsByClip[n];return void 0===o?null:o.actionByRoot[a]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let r=t-1;0<=r;--r)e[r].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,r=this._nActiveActions,a=this.time+=e,n=Io(e),o=this._accuIndex^=1;for(let s=0;s!==r;++s){const r=t[s];r._update(a,e,n,o)}const s=this._bindings,l=this._nActiveBindings;for(let t=0;t!==l;++t)s[t].apply(o);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,r=e.uuid,a=this._actionsByClip,i=a[r];if(void 0!==i){const e=i.knownActions;for(let r=0,a=e.length;r!==a;++r){const a=e[r];this._deactivateAction(a);const i=a._cacheIndex,n=t[t.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,n._cacheIndex=i,t[i]=n,t.pop(),this._removeInactiveBindingsForAction(a)}delete a[r]}},uncacheRoot:function(e){const t=e.uuid,r=this._actionsByClip;for(const a in r){const e=r[a].actionByRoot,i=e[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const a=this._bindingsByRootAndName,i=a[t];if(void 0!==i)for(const e in i){const t=i[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),Bn.prototype.clone=function(){return new Bn(void 0===this.value.clone?this.value:this.value.clone())},Un.prototype=Object.assign(Object.create(or.prototype),{constructor:Un,isInstancedInterleavedBuffer:!0,copy:function(e){return or.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=or.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=or.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.assign(Fn.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,r){const a=r||[];return On(e,this,a,t),a.sort(Gn),a},intersectObjects:function(e,t,r){const a=r||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),a;for(let n=0,i=e.length;n<i;n++)On(e[n],this,a,t);return a.sort(Gn),a}}),Object.assign(function(e,t,r){return this.radius=void 0===e?1:e,this.phi=void 0===t?0:t,this.theta=void 0===r?0:r,this}.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){const e=1e-6;return this.phi=Ro(e,Po(Co-e,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=bo(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=xo(e,r),this.phi=vo(Pd.clamp(t/this.radius,-1,1))),this}}),Object.assign(function(e,t,r){return this.radius=void 0===e?1:e,this.theta=void 0===t?0:t,this.y=void 0===r?0:r,this}.prototype,{set:function(e,t,r){return this.radius=e,this.theta=t,this.y=r,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=bo(e*e+r*r),this.theta=xo(e,r),this.y=t,this}});const um=new n;Object.assign(Hn.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const r=um.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new n),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new n),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new n),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new n),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){const t=um.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const mm=new m,gm=new m;Object.assign(Vn.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new m),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new m),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new m),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,r){mm.subVectors(e,this.start),gm.subVectors(this.end,this.start);const a=gm.dot(gm),i=gm.dot(mm);let n=i/a;return r&&(n=Pd.clamp(n,0,1)),n},closestPointToPoint:function(e,r,a){const i=this.closestPointToPointParameter(e,r);return void 0===a&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),a=new m),this.delta(a).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),kn.prototype=Object.create(f.prototype),kn.prototype.constructor=kn,kn.prototype.isImmediateRenderObject=!0;const fm=new m;Wn.prototype=Object.create(f.prototype),Wn.prototype.constructor=Wn,Wn.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Wn.prototype.update=function(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*ho(this.light.angle);this.cone.scale.set(t,t,e),fm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(fm),void 0===this.color?this.cone.material.color.copy(this.light.color):this.cone.material.color.set(this.color)};const hm=new m,ym=new c,vm=new c;qn.prototype=Object.create(vr.prototype),qn.prototype.constructor=qn,qn.prototype.isSkeletonHelper=!0,qn.prototype.updateMatrixWorld=function(e){const t=this.bones,r=this.geometry,a=r.getAttribute("position");vm.getInverse(this.root.matrixWorld);for(let r=0,i=0;r<t.length;r++){const e=t[r];e.parent&&e.parent.isBone&&(ym.multiplyMatrices(vm,e.matrixWorld),hm.setFromMatrixPosition(ym),a.setXYZ(i,hm.x,hm.y,hm.z),ym.multiplyMatrices(vm,e.parent.matrixWorld),hm.setFromMatrixPosition(ym),a.setXYZ(i+1,hm.x,hm.y,hm.z),i+=2)}r.getAttribute("position").needsUpdate=!0,f.prototype.updateMatrixWorld.call(this,e)},Xn.prototype=Object.create(k.prototype),Xn.prototype.constructor=Xn,Xn.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Xn.prototype.update=function(){void 0===this.color?this.material.color.copy(this.light.color):this.material.color.set(this.color)};const xm=new m,_m=new M,bm=new M;Yn.prototype=Object.create(f.prototype),Yn.prototype.constructor=Yn,Yn.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Yn.prototype.update=function(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");_m.copy(this.light.color),bm.copy(this.light.groundColor);for(let e=0,r=t.count;e<r;e++){const a=e<r/2?_m:bm;t.setXYZ(e,a.r,a.g,a.b)}t.needsUpdate=!0}e.lookAt(xm.setFromMatrixPosition(this.light.matrixWorld).negate())},Zn.prototype=Object.assign(Object.create(vr.prototype),{constructor:Zn,copy:function(e){return vr.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return new this.constructor().copy(this)}}),Jn.prototype=Object.create(vr.prototype),Jn.prototype.constructor=Jn;const Sm=new m,Mm=new m,Tm=new m;Qn.prototype=Object.create(f.prototype),Qn.prototype.constructor=Qn,Qn.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Qn.prototype.update=function(){Sm.setFromMatrixPosition(this.light.matrixWorld),Mm.setFromMatrixPosition(this.light.target.matrixWorld),Tm.subVectors(Mm,Sm),this.lightPlane.lookAt(Mm),void 0===this.color?(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)):(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)),this.targetLine.lookAt(Mm),this.targetLine.scale.z=Tm.length()};const Em=new m,wm=new J;Kn.prototype=Object.create(vr.prototype),Kn.prototype.constructor=Kn,Kn.prototype.update=function(){const e=this.geometry,t=this.pointMap,r=1,a=1;wm.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),$n("c",t,e,wm,0,0,-1),$n("t",t,e,wm,0,0,1),$n("n1",t,e,wm,-r,-a,-1),$n("n2",t,e,wm,r,-a,-1),$n("n3",t,e,wm,-r,a,-1),$n("n4",t,e,wm,r,a,-1),$n("f1",t,e,wm,-r,-a,1),$n("f2",t,e,wm,r,-a,1),$n("f3",t,e,wm,-r,a,1),$n("f4",t,e,wm,r,a,1),$n("u1",t,e,wm,.7*r,1.1*a,-1),$n("u2",t,e,wm,.7*-r,1.1*a,-1),$n("u3",t,e,wm,0,2*a,-1),$n("cf1",t,e,wm,-r,0,1),$n("cf2",t,e,wm,r,0,1),$n("cf3",t,e,wm,0,-a,1),$n("cf4",t,e,wm,0,a,1),$n("cn1",t,e,wm,-r,0,-1),$n("cn2",t,e,wm,r,0,-1),$n("cn3",t,e,wm,0,-a,-1),$n("cn4",t,e,wm,0,a,-1),e.getAttribute("position").needsUpdate=!0};const Lm=new y;eo.prototype=Object.create(vr.prototype),eo.prototype.constructor=eo,eo.prototype.update=function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Lm.setFromObject(this.object),!Lm.isEmpty()){const e=Lm.min,t=Lm.max,r=this.geometry.attributes.position,a=r.array;a[0]=t.x,a[1]=t.y,a[2]=t.z,a[3]=e.x,a[4]=t.y,a[5]=t.z,a[6]=e.x,a[7]=e.y,a[8]=t.z,a[9]=t.x,a[10]=e.y,a[11]=t.z,a[12]=t.x,a[13]=t.y,a[14]=e.z,a[15]=e.x,a[16]=t.y,a[17]=e.z,a[18]=e.x,a[19]=e.y,a[20]=e.z,a[21]=t.x,a[22]=e.y,a[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}},eo.prototype.setFromObject=function(e){return this.object=e,this.update(),this},eo.prototype.copy=function(e){return vr.prototype.copy.call(this,e),this.object=e.object,this},eo.prototype.clone=function(){return new this.constructor().copy(this)},to.prototype=Object.create(vr.prototype),to.prototype.constructor=to,to.prototype.updateMatrixWorld=function(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),f.prototype.updateMatrixWorld.call(this,e))},ro.prototype=Object.create(yr.prototype),ro.prototype.constructor=ro,ro.prototype.updateMatrixWorld=function(e){let t=-this.plane.constant;1e-8>_o(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=0>t?ko:Vo,this.lookAt(this.plane.normal),f.prototype.updateMatrixWorld.call(this,e)};const Am=new m;let Rm,Pm;ao.prototype=Object.create(f.prototype),ao.prototype.constructor=ao,ao.prototype.setDirection=function(e){if(.99999<e.y)this.quaternion.set(0,0,0,1);else if(-.99999>e.y)this.quaternion.set(1,0,0,0);else{Am.set(e.z,0,-e.x).normalize();const t=vo(e.y);this.quaternion.setFromAxisAngle(Am,t)}},ao.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,Ro(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},ao.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},ao.prototype.copy=function(e){return f.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},ao.prototype.clone=function(){return new this.constructor().copy(this)},io.prototype=Object.create(vr.prototype),io.prototype.constructor=io;const Cm=4,Im=8,Dm=256,Nm=[.125,.215,.35,.446,.526,.582],zm=Im-Cm+1+Nm.length,Bm=20,Um={[md]:0,[gd]:1,[hd]:2,[vd]:3,[xd]:4,[_d]:5,[fd]:6},Fm=new nn,{_lodPlanes:Gm,_sizeLods:Om,_sigmas:Hm}=function(){const e=[],t=[],r=[];let a=Im;for(let n=0;n<zm;n++){const i=Eo(2,a);t.push(i);let o=1/i;n>Im-Cm?o=Nm[n-Im+Cm-1]:0==n&&(o=0),r.push(o);const s=1/(i-1),l=-s/2,d=1+s/2,p=[l,l,d,l,d,d,l,l,d,d,l,d],c=6,u=6,m=3,g=2,f=1,h=new Float32Array(m*u*c),v=new Float32Array(g*u*c),_=new Float32Array(f*u*c);for(let e=0;e<c;e++){const t=2*(e%3)/3-1,r=2<e?0:-1;h.set([t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0],m*u*e),v.set(p,g*u*e);const a=[e,e,e,e,e,e];_.set(a,f*u*e)}const y=new V;y.setAttribute("position",new P(h,m)),y.setAttribute("uv",new P(v,g)),y.setAttribute("faceIndex",new P(_,f)),e.push(y),a>Cm&&a--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}();let Vm=null;const km=(1+2.23606797749979)/2,Wm=1/km,jm=[new m(1,1,1),new m(-1,1,1),new m(1,1,-1),new m(-1,1,-1),new m(0,km,Wm),new m(0,km,-Wm),new m(Wm,0,km),new m(-Wm,0,km),new m(km,Wm,0),new m(-km,Wm,0)];no.prototype={constructor:no,fromScene:function(e,t=0,r=.1,a=100){Vm=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(e,r,a,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i},fromEquirectangular:function(e){return this._fromTexture(e)},fromCubemap:function(e){return this._fromTexture(e)},compileCubemapShader:function(){null===this._cubemapShader&&(this._cubemapShader=uo(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){null===this._equirectShader&&(this._equirectShader=co(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<Gm.length;e++)Gm[e].dispose()},_cleanup:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Vm),e.scissorTest=!1,lo(e,0,0,e.width,e.height)},_fromTexture:function(e){Vm=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t},_allocateTargets:function(e){const t={magFilter:Hs,minFilter:Hs,generateMipmaps:!1,type:Xs,format:sl,encoding:oo(e)?e.encoding:hd,depthBuffer:!1,stencilBuffer:!1},r=so(t);return r.depthBuffer=!e,this._pingPongRenderTarget=so(t),r},_compileMaterial:function(e){const t=new k(Gm[0],e);this._renderer.compile(t,Fm)},_sceneToCubeUV:function(e,t,r,a){const n=new Q(90,1,t,r),o=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],l=this._renderer,i=l.outputEncoding,d=l.toneMapping,p=l.getClearColor(),c=l.getClearAlpha();l.toneMapping=Es,l.outputEncoding=md;let u=e.background;if(u&&u.isColor){u.convertSRGBToLinear();const t=Ro(u.r,u.g,u.b),r=Po(Ro(wo(Math.log2(t)),-128),127);u=u.multiplyScalar(Eo(2,-r));l.setClearColor(u,(r+128)/255),e.background=null}for(let d=0;6>d;d++){const t=d%3;0==t?(n.up.set(0,o[d],0),n.lookAt(s[d],0,0)):1==t?(n.up.set(0,0,o[d]),n.lookAt(0,s[d],0)):(n.up.set(0,o[d],0),n.lookAt(0,0,s[d])),lo(a,t*Dm,2<d?Dm:0,Dm,Dm),l.setRenderTarget(a),l.render(e,n)}l.toneMapping=d,l.outputEncoding=i,l.setClearColor(p,c)},_textureToCubeUV:function(e,t){const r=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=uo()):null==this._equirectShader&&(this._equirectShader=co());const a=e.isCubeTexture?this._cubemapShader:this._equirectShader,i=new k(Gm[0],a),n=a.uniforms;n.envMap.value=e,e.isCubeTexture||n.texelSize.value.set(1/e.image.width,1/e.image.height),n.inputEncoding.value=Um[e.encoding],n.outputEncoding.value=Um[t.texture.encoding],lo(t,0,0,3*Dm,2*Dm),r.setRenderTarget(t),r.render(i,Fm)},_applyPMREM:function(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let t=1;t<zm;t++){const r=bo(Hm[t]*Hm[t]-Hm[t-1]*Hm[t-1]),a=jm[(t-1)%jm.length];this._blur(e,t-1,t,r,a)}t.autoClear=r},_blur:function(e,t,r,a,i){const n=this._pingPongRenderTarget;this._halfBlur(e,n,t,r,a,"latitudinal",i),this._halfBlur(n,e,r,r,a,"longitudinal",i)},_halfBlur:function(e,t,r,a,i,n,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!");const d=new k(Gm[a],l),p=l.uniforms,c=Om[r]-1,u=isFinite(i)?Co/(2*c):2*Co/(2*Bm-1),m=i/u,g=isFinite(i)?1+Do(3*m):Bm;g>Bm&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Bm}`);const f=[];let h=0;for(let s=0;s<Bm;++s){const e=s/m,t=Math.exp(-e*e/2);f.push(t),0==s?h+=t:s<g&&(h+=2*t)}for(let s=0;s<f.length;s++)f[s]/=h;p.envMap.value=e.texture,p.samples.value=g,p.weights.value=f,p.latitudinal.value="latitudinal"===n,o&&(p.poleAxis.value=o),p.dTheta.value=u,p.mipInt.value=Im-r,p.inputEncoding.value=Um[e.texture.encoding],p.outputEncoding.value=Um[e.texture.encoding];const v=Om[a],_=3*Ro(0,Dm-2*v),x=(0===a?0:2*Dm)+2*v*(a>Im-Cm?a-Im+Cm:0);lo(t,_,x,3*v,2*v),s.setRenderTarget(t),s.render(d,Fm)}};wi.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(wi.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(Yi.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new j;for(let r=0,a=e.length;r<a;r++){const a=e[r];t.vertices.push(new m(a.x,a.y,a.z||0))}return t}}),Object.assign(Zi.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),function(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Pi.call(this,e),this.type="catmullrom",this.closed=!0}.prototype=Object.create(Pi.prototype),function(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Pi.call(this,e),this.type="catmullrom"}.prototype=Object.create(Pi.prototype),fo.prototype=Object.create(Pi.prototype),Object.assign(fo.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Zn.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},qn.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(vi.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Gu.extractUrlBase(e)}}),vi.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(hn.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Hn.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(y.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(x.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),te.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Vn.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(Pd,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Pd.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Pd.ceilPowerOfTwo(e)}}),Object.assign(i.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(c.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new m().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,r,a,i,n){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,a,r,i,n)}}),b.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},p.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(_.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(S.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(S,{barycoordFromPoint:function(e,t,r,a,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),S.getBarycoord(e,t,r,a,i)},normal:function(e,t,r,a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),S.getNormal(e,t,r,a)}}),Object.assign(Ji.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ea(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ba(this,e)}}),Object.assign(n.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(m.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(s.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(j.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(f.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(f.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(k.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(k.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(cr.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(mr.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),ur.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(wi.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),Q.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Qi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(P.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ad},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ad)}}}),Object.assign(P.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Ad:Ld),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(V.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new P(arguments[1],arguments[2])))},addDrawCall:function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(V.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(mn.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Fn.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(or.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Ad},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(or.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Ad:Ld),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(wa.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Bn.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(A.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new M}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===jo}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(Ja.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Z.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(rr.prototype,{clearTarget:function(e,t,r,a){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,a)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(rr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?gd:md}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Xt.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(l.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(An.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,r=new Mn;return r.load(e,function(e){t.setBuffer(e)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Pn.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},K.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};Id.crossOrigin=void 0,Id.loadTexture=function(e,t,r,a){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Ei;i.setCrossOrigin(this.crossOrigin);const n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},Id.loadTextureCube=function(e,t,r,a){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Ti;i.setCrossOrigin(this.crossOrigin);const n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},Id.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Id.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"118"}}))}}]);